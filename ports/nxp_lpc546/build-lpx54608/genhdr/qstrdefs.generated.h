// This file was automatically generated by makeqstrdata.py

QDEF(MP_QSTR_NULL, (const byte*)"\x00\x00\x00" "")
QDEF(MP_QSTR_, (const byte*)"\x05\x15\x00" "")
QDEF(MP_QSTR___abs__, (const byte*)"\x95\xd6\x07" "__abs__")
QDEF(MP_QSTR___add__, (const byte*)"\xc4\x82\x07" "__add__")
QDEF(MP_QSTR___aenter__, (const byte*)"\x4c\x84\x0a" "__aenter__")
QDEF(MP_QSTR___aexit__, (const byte*)"\xc4\xcf\x09" "__aexit__")
QDEF(MP_QSTR___aiter__, (const byte*)"\x4e\x2b\x09" "__aiter__")
QDEF(MP_QSTR___and__, (const byte*)"\x0e\xdb\x07" "__and__")
QDEF(MP_QSTR___anext__, (const byte*)"\x83\xb4\x09" "__anext__")
QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x65\x08" "__bool__")
QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x88\x0f" "__build_class__")
QDEF(MP_QSTR___call__, (const byte*)"\xa7\xf9\x08" "__call__")
QDEF(MP_QSTR___class__, (const byte*)"\x2b\xc5\x09" "__class__")
QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x5f\x0c" "__contains__")
QDEF(MP_QSTR___del__, (const byte*)"\x68\x37\x07" "__del__")
QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x35\x0b" "__delitem__")
QDEF(MP_QSTR___dict__, (const byte*)"\x7f\x54\x08" "__dict__")
QDEF(MP_QSTR___divmod__, (const byte*)"\x78\x11\x0a" "__divmod__")
QDEF(MP_QSTR___enter__, (const byte*)"\x6d\xba\x09" "__enter__")
QDEF(MP_QSTR___eq__, (const byte*)"\x71\x3e\x06" "__eq__")
QDEF(MP_QSTR___exit__, (const byte*)"\x45\xf8\x08" "__exit__")
QDEF(MP_QSTR___file__, (const byte*)"\x03\x54\x08" "__file__")
QDEF(MP_QSTR___floordiv__, (const byte*)"\x46\x5f\x0c" "__floordiv__")
QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x46\x06" "__ge__")
QDEF(MP_QSTR___getattr__, (const byte*)"\x40\xf8\x0b" "__getattr__")
QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x39\x0b" "__getitem__")
QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x82\x06" "__gt__")
QDEF(MP_QSTR___hash__, (const byte*)"\xf7\xc8\x08" "__hash__")
QDEF(MP_QSTR___iadd__, (const byte*)"\x6d\x4a\x08" "__iadd__")
QDEF(MP_QSTR___import__, (const byte*)"\x38\x3e\x0a" "__import__")
QDEF(MP_QSTR___init__, (const byte*)"\x5f\xa5\x08" "__init__")
QDEF(MP_QSTR___invert__, (const byte*)"\xf7\x77\x0a" "__invert__")
QDEF(MP_QSTR___isub__, (const byte*)"\x08\x78\x08" "__isub__")
QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x32\x08" "__iter__")
QDEF(MP_QSTR___le__, (const byte*)"\xcc\x13\x06" "__le__")
QDEF(MP_QSTR___len__, (const byte*)"\xe2\xb0\x07" "__len__")
QDEF(MP_QSTR___lshift__, (const byte*)"\x09\x88\x0a" "__lshift__")
QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x68\x06" "__lt__")
QDEF(MP_QSTR___main__, (const byte*)"\x8e\x13\x08" "__main__")
QDEF(MP_QSTR___mod__, (const byte*)"\x63\x37\x07" "__mod__")
QDEF(MP_QSTR___module__, (const byte*)"\xff\x30\x0a" "__module__")
QDEF(MP_QSTR___mul__, (const byte*)"\x31\x42\x07" "__mul__")
QDEF(MP_QSTR___name__, (const byte*)"\xe2\x38\x08" "__name__")
QDEF(MP_QSTR___neg__, (const byte*)"\x69\xd5\x07" "__neg__")
QDEF(MP_QSTR___new__, (const byte*)"\x79\x15\x07" "__new__")
QDEF(MP_QSTR___next__, (const byte*)"\x02\x73\x08" "__next__")
QDEF(MP_QSTR___or__, (const byte*)"\x38\xbb\x06" "__or__")
QDEF(MP_QSTR___path__, (const byte*)"\xc8\x23\x08" "__path__")
QDEF(MP_QSTR___pos__, (const byte*)"\x29\xf0\x07" "__pos__")
QDEF(MP_QSTR___pow__, (const byte*)"\x2d\x00\x07" "__pow__")
QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x00\x0c" "__qualname__")
QDEF(MP_QSTR___repl_print__, (const byte*)"\x00\xbb\x0e" "__repl_print__")
QDEF(MP_QSTR___repr__, (const byte*)"\x10\x0b\x08" "__repr__")
QDEF(MP_QSTR___reversed__, (const byte*)"\x61\xff\x0c" "__reversed__")
QDEF(MP_QSTR___rshift__, (const byte*)"\x57\x98\x0a" "__rshift__")
QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x3e\x0b" "__setitem__")
QDEF(MP_QSTR___str__, (const byte*)"\xd0\xcd\x07" "__str__")
QDEF(MP_QSTR___sub__, (const byte*)"\x21\x09\x07" "__sub__")
QDEF(MP_QSTR___traceback__, (const byte*)"\x4f\xcf\x0d" "__traceback__")
QDEF(MP_QSTR___truediv__, (const byte*)"\x88\xef\x0b" "__truediv__")
QDEF(MP_QSTR___xor__, (const byte*)"\x20\xec\x07" "__xor__")
QDEF(MP_QSTR__star_, (const byte*)"\x8f\xb5\x01" "*")
QDEF(MP_QSTR__, (const byte*)"\xfa\xb5\x01" "_")
QDEF(MP_QSTR__slash_, (const byte*)"\x8a\xb5\x01" "/")
QDEF(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x1a\x03" "%#o")
QDEF(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x1a\x03" "%#x")
QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x37\x05" "{:#b}")
QDEF(MP_QSTR__0x0a_, (const byte*)"\xaf\xb5\x01" "\x0a")
QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x1e\x20" "maximum recursion depth exceeded")
QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x94\x08" "<module>")
QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x8c\x08" "<lambda>")
QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x15\x0a" "<listcomp>")
QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x8d\x0a" "<dictcomp>")
QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x51\x09" "<setcomp>")
QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x6a\x09" "<genexpr>")
QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x53\x08" "<string>")
QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x63\x07" "<stdin>")
QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x82\x05" "utf-8")
QDEF(MP_QSTR_boot_dot_py, (const byte*)"\x74\xb9\x07" "boot.py")
QDEF(MP_QSTR_main_dot_py, (const byte*)"\xa9\x9f\x07" "main.py")
QDEF(MP_QSTR__slash_flash, (const byte*)"\x1a\x4e\x06" "/flash")
QDEF(MP_QSTR__slash_flash_slash_lib, (const byte*)"\x92\x4d\x0a" "/flash/lib")
QDEF(MP_QSTR__slash_sd, (const byte*)"\xbd\x3d\x03" "/sd")
QDEF(MP_QSTR__slash_sd_slash_lib, (const byte*)"\xb5\x1e\x07" "/sd/lib")
QDEF(MP_QSTR_MSC_plus_HID, (const byte*)"\xb6\x0c\x07" "MSC+HID")
QDEF(MP_QSTR_VCP_plus_MSC, (const byte*)"\xf6\x7e\x07" "VCP+MSC")
QDEF(MP_QSTR_VCP_plus_HID, (const byte*)"\xae\x70\x07" "VCP+HID")
QDEF(MP_QSTR_CDC_plus_MSC, (const byte*)"\x17\x00\x07" "CDC+MSC")
QDEF(MP_QSTR_CDC_plus_HID, (const byte*)"\x4f\xda\x07" "CDC+HID")
QDEF(MP_QSTR_CDC, (const byte*)"\x61\xcf\x03" "CDC")
QDEF(MP_QSTR_flash, (const byte*)"\x75\x92\x05" "flash")
QDEF(MP_QSTR_016, (const byte*)"\xb2\x68\x03" "016")
QDEF(MP_QSTR_023, (const byte*)"\xd4\x68\x03" "023")
QDEF(MP_QSTR_024, (const byte*)"\xd3\x68\x03" "024")
QDEF(MP_QSTR_025, (const byte*)"\xd2\x68\x03" "025")
QDEF(MP_QSTR_026, (const byte*)"\xd1\x68\x03" "026")
QDEF(MP_QSTR_027, (const byte*)"\xd0\x68\x03" "027")
QDEF(MP_QSTR_028, (const byte*)"\xdf\x68\x03" "028")
QDEF(MP_QSTR_031, (const byte*)"\xf7\x68\x03" "031")
QDEF(MP_QSTR_04, (const byte*)"\x01\x68\x02" "04")
QDEF(MP_QSTR_05, (const byte*)"\x00\x68\x02" "05")
QDEF(MP_QSTR_06, (const byte*)"\x03\x68\x02" "06")
QDEF(MP_QSTR_10, (const byte*)"\x24\x68\x02" "10")
QDEF(MP_QSTR_11, (const byte*)"\x25\x68\x02" "11")
QDEF(MP_QSTR_117, (const byte*)"\xf2\x6c\x03" "117")
QDEF(MP_QSTR_118, (const byte*)"\xfd\x6c\x03" "118")
QDEF(MP_QSTR_122, (const byte*)"\xd4\x6c\x03" "122")
QDEF(MP_QSTR_20, (const byte*)"\x47\x68\x02" "20")
QDEF(MP_QSTR_21, (const byte*)"\x46\x68\x02" "21")
QDEF(MP_QSTR_217, (const byte*)"\x31\x71\x03" "217")
QDEF(MP_QSTR_218, (const byte*)"\x3e\x71\x03" "218")
QDEF(MP_QSTR_219, (const byte*)"\x3f\x71\x03" "219")
QDEF(MP_QSTR_22, (const byte*)"\x45\x68\x02" "22")
QDEF(MP_QSTR_220, (const byte*)"\xd5\x70\x03" "220")
QDEF(MP_QSTR_30, (const byte*)"\x66\x68\x02" "30")
QDEF(MP_QSTR_31, (const byte*)"\x67\x68\x02" "31")
QDEF(MP_QSTR_310, (const byte*)"\x77\x75\x03" "310")
QDEF(MP_QSTR_311, (const byte*)"\x76\x75\x03" "311")
QDEF(MP_QSTR_312, (const byte*)"\x75\x75\x03" "312")
QDEF(MP_QSTR_314, (const byte*)"\x73\x75\x03" "314")
QDEF(MP_QSTR_316, (const byte*)"\x71\x75\x03" "316")
QDEF(MP_QSTR_317, (const byte*)"\x70\x75\x03" "317")
QDEF(MP_QSTR_318, (const byte*)"\x7f\x75\x03" "318")
QDEF(MP_QSTR_319, (const byte*)"\x7e\x75\x03" "319")
QDEF(MP_QSTR_32, (const byte*)"\x64\x68\x02" "32")
QDEF(MP_QSTR_320, (const byte*)"\xd4\x74\x03" "320")
QDEF(MP_QSTR_321, (const byte*)"\xd5\x74\x03" "321")
QDEF(MP_QSTR_322, (const byte*)"\xd6\x74\x03" "322")
QDEF(MP_QSTR_323, (const byte*)"\xd7\x74\x03" "323")
QDEF(MP_QSTR_324, (const byte*)"\xd0\x74\x03" "324")
QDEF(MP_QSTR_326, (const byte*)"\xd2\x74\x03" "326")
QDEF(MP_QSTR_327, (const byte*)"\xd3\x74\x03" "327")
QDEF(MP_QSTR_328, (const byte*)"\xdc\x74\x03" "328")
QDEF(MP_QSTR_329, (const byte*)"\xdd\x74\x03" "329")
QDEF(MP_QSTR_33, (const byte*)"\x65\x68\x02" "33")
QDEF(MP_QSTR_330, (const byte*)"\x35\x75\x03" "330")
QDEF(MP_QSTR_41, (const byte*)"\x80\x67\x02" "41")
QDEF(MP_QSTR_42, (const byte*)"\x83\x67\x02" "42")
QDEF(MP_QSTR_43, (const byte*)"\x82\x67\x02" "43")
QDEF(MP_QSTR_44, (const byte*)"\x85\x67\x02" "44")
QDEF(MP_QSTR_45, (const byte*)"\x84\x67\x02" "45")
QDEF(MP_QSTR_46, (const byte*)"\x87\x67\x02" "46")
QDEF(MP_QSTR_47, (const byte*)"\x86\x67\x02" "47")
QDEF(MP_QSTR_AF0_GPIO0, (const byte*)"\x6c\x28\x09" "AF0_GPIO0")
QDEF(MP_QSTR_AF0_GPIO1, (const byte*)"\x6d\x28\x09" "AF0_GPIO1")
QDEF(MP_QSTR_AF0_GPIO2, (const byte*)"\x6e\x28\x09" "AF0_GPIO2")
QDEF(MP_QSTR_AF0_GPIO3, (const byte*)"\x6f\x28\x09" "AF0_GPIO3")
QDEF(MP_QSTR_AF0_GPIO4, (const byte*)"\x68\x28\x09" "AF0_GPIO4")
QDEF(MP_QSTR_AF1_FC0, (const byte*)"\x79\xc8\x07" "AF1_FC0")
QDEF(MP_QSTR_AF1_FC2, (const byte*)"\x7b\xc8\x07" "AF1_FC2")
QDEF(MP_QSTR_AF1_FC3, (const byte*)"\x7a\xc8\x07" "AF1_FC3")
QDEF(MP_QSTR_AF1_FC4, (const byte*)"\x7d\xc8\x07" "AF1_FC4")
QDEF(MP_QSTR_AF1_FC8, (const byte*)"\x71\xc8\x07" "AF1_FC8")
QDEF(MP_QSTR_AF1_FC9, (const byte*)"\x70\xc8\x07" "AF1_FC9")
QDEF(MP_QSTR_AF2_CT1, (const byte*)"\x49\xa6\x07" "AF2_CT1")
QDEF(MP_QSTR_AF2_CT3, (const byte*)"\x4b\xa6\x07" "AF2_CT3")
QDEF(MP_QSTR_AF2_CT4, (const byte*)"\x4c\xa6\x07" "AF2_CT4")
QDEF(MP_QSTR_AF2_FC0, (const byte*)"\xfa\x87\x07" "AF2_FC0")
QDEF(MP_QSTR_AF2_FC3, (const byte*)"\xf9\x87\x07" "AF2_FC3")
QDEF(MP_QSTR_AF2_FC4, (const byte*)"\xfe\x87\x07" "AF2_FC4")
QDEF(MP_QSTR_AF2_FC6, (const byte*)"\xfc\x87\x07" "AF2_FC6")
QDEF(MP_QSTR_AF2_FC8, (const byte*)"\xf2\x87\x07" "AF2_FC8")
QDEF(MP_QSTR_AF2_FC9, (const byte*)"\xf3\x87\x07" "AF2_FC9")
QDEF(MP_QSTR_AF3_CT0, (const byte*)"\x09\x9e\x07" "AF3_CT0")
QDEF(MP_QSTR_AF3_CT1, (const byte*)"\x08\x9e\x07" "AF3_CT1")
QDEF(MP_QSTR_AF3_CT2, (const byte*)"\x0b\x9e\x07" "AF3_CT2")
QDEF(MP_QSTR_AF3_CT3, (const byte*)"\x0a\x9e\x07" "AF3_CT3")
QDEF(MP_QSTR_AF3_CT4, (const byte*)"\x0d\x9e\x07" "AF3_CT4")
QDEF(MP_QSTR_AF3_FC0, (const byte*)"\x7b\x98\x07" "AF3_FC0")
QDEF(MP_QSTR_AF3_FC1, (const byte*)"\x7a\x98\x07" "AF3_FC1")
QDEF(MP_QSTR_AF3_FC4, (const byte*)"\x7f\x98\x07" "AF3_FC4")
QDEF(MP_QSTR_AF3_FC7, (const byte*)"\x7c\x98\x07" "AF3_FC7")
QDEF(MP_QSTR_AF4_CT1, (const byte*)"\xcf\xd6\x07" "AF4_CT1")
QDEF(MP_QSTR_AF4_CT3, (const byte*)"\xcd\xd6\x07" "AF4_CT3")
QDEF(MP_QSTR_AF4_CT4, (const byte*)"\xca\xd6\x07" "AF4_CT4")
QDEF(MP_QSTR_AF5_CT4, (const byte*)"\x8b\xef\x07" "AF5_CT4")
QDEF(MP_QSTR_AF5_FC4, (const byte*)"\x79\xe9\x07" "AF5_FC4")
QDEF(MP_QSTR_AF5_FC8, (const byte*)"\x75\xe9\x07" "AF5_FC8")
QDEF(MP_QSTR_CLKOUT, (const byte*)"\x6f\x52\x06" "CLKOUT")
QDEF(MP_QSTR_J10_2, (const byte*)"\x03\x07\x05" "J10_2")
QDEF(MP_QSTR_J10_4, (const byte*)"\x05\x07\x05" "J10_4")
QDEF(MP_QSTR_J12_1, (const byte*)"\x82\x0f\x05" "J12_1")
QDEF(MP_QSTR_J12_12, (const byte*)"\xf0\xff\x06" "J12_12")
QDEF(MP_QSTR_J12_2, (const byte*)"\x81\x0f\x05" "J12_2")
QDEF(MP_QSTR_J12_3, (const byte*)"\x80\x0f\x05" "J12_3")
QDEF(MP_QSTR_J12_4, (const byte*)"\x87\x0f\x05" "J12_4")
QDEF(MP_QSTR_J12_6, (const byte*)"\x85\x0f\x05" "J12_6")
QDEF(MP_QSTR_J12_7, (const byte*)"\x84\x0f\x05" "J12_7")
QDEF(MP_QSTR_J12_8, (const byte*)"\x8b\x0f\x05" "J12_8")
QDEF(MP_QSTR_J13_1, (const byte*)"\x83\x13\x05" "J13_1")
QDEF(MP_QSTR_J13_10, (const byte*)"\xd3\x83\x06" "J13_10")
QDEF(MP_QSTR_J13_11, (const byte*)"\xd2\x83\x06" "J13_11")
QDEF(MP_QSTR_J13_12, (const byte*)"\xd1\x83\x06" "J13_12")
QDEF(MP_QSTR_J13_13, (const byte*)"\xd0\x83\x06" "J13_13")
QDEF(MP_QSTR_J13_14, (const byte*)"\xd7\x83\x06" "J13_14")
QDEF(MP_QSTR_J13_15, (const byte*)"\xd6\x83\x06" "J13_15")
QDEF(MP_QSTR_J13_16, (const byte*)"\xd5\x83\x06" "J13_16")
QDEF(MP_QSTR_J13_17, (const byte*)"\xd4\x83\x06" "J13_17")
QDEF(MP_QSTR_J13_18, (const byte*)"\xdb\x83\x06" "J13_18")
QDEF(MP_QSTR_J13_19, (const byte*)"\xda\x83\x06" "J13_19")
QDEF(MP_QSTR_J13_2, (const byte*)"\x80\x13\x05" "J13_2")
QDEF(MP_QSTR_J13_20, (const byte*)"\xb0\x83\x06" "J13_20")
QDEF(MP_QSTR_J13_3, (const byte*)"\x81\x13\x05" "J13_3")
QDEF(MP_QSTR_J13_4, (const byte*)"\x86\x13\x05" "J13_4")
QDEF(MP_QSTR_J13_5, (const byte*)"\x87\x13\x05" "J13_5")
QDEF(MP_QSTR_J13_6, (const byte*)"\x84\x13\x05" "J13_6")
QDEF(MP_QSTR_J13_7, (const byte*)"\x85\x13\x05" "J13_7")
QDEF(MP_QSTR_J13_8, (const byte*)"\x8a\x13\x05" "J13_8")
QDEF(MP_QSTR_J13_9, (const byte*)"\x8b\x13\x05" "J13_9")
QDEF(MP_QSTR_J9_1, (const byte*)"\x38\x50\x04" "J9_1")
QDEF(MP_QSTR_J9_10, (const byte*)"\x08\x57\x05" "J9_10")
QDEF(MP_QSTR_J9_11, (const byte*)"\x09\x57\x05" "J9_11")
QDEF(MP_QSTR_J9_12, (const byte*)"\x0a\x57\x05" "J9_12")
QDEF(MP_QSTR_J9_13, (const byte*)"\x0b\x57\x05" "J9_13")
QDEF(MP_QSTR_J9_14, (const byte*)"\x0c\x57\x05" "J9_14")
QDEF(MP_QSTR_J9_15, (const byte*)"\x0d\x57\x05" "J9_15")
QDEF(MP_QSTR_J9_16, (const byte*)"\x0e\x57\x05" "J9_16")
QDEF(MP_QSTR_J9_17, (const byte*)"\x0f\x57\x05" "J9_17")
QDEF(MP_QSTR_J9_18, (const byte*)"\x00\x57\x05" "J9_18")
QDEF(MP_QSTR_J9_19, (const byte*)"\x01\x57\x05" "J9_19")
QDEF(MP_QSTR_J9_2, (const byte*)"\x3b\x50\x04" "J9_2")
QDEF(MP_QSTR_J9_20, (const byte*)"\xab\x57\x05" "J9_20")
QDEF(MP_QSTR_J9_3, (const byte*)"\x3a\x50\x04" "J9_3")
QDEF(MP_QSTR_J9_4, (const byte*)"\x3d\x50\x04" "J9_4")
QDEF(MP_QSTR_J9_8, (const byte*)"\x31\x50\x04" "J9_8")
QDEF(MP_QSTR_J9_9, (const byte*)"\x30\x50\x04" "J9_9")
QDEF(MP_QSTR_LED1, (const byte*)"\xb9\x6d\x04" "LED1")
QDEF(MP_QSTR_LED2, (const byte*)"\xba\x6d\x04" "LED2")
QDEF(MP_QSTR_LED3, (const byte*)"\xbb\x6d\x04" "LED3")
QDEF(MP_QSTR_SW2, (const byte*)"\x33\x11\x03" "SW2")
QDEF(MP_QSTR_SW3, (const byte*)"\x32\x11\x03" "SW3")
QDEF(MP_QSTR_SW4, (const byte*)"\x35\x11\x03" "SW4")
QDEF(MP_QSTR_ADC0, (const byte*)"\xf3\x82\x04" "ADC0")
QDEF(MP_QSTR_ADC_CALIB, (const byte*)"\x19\x60\x09" "ADC_CALIB")
QDEF(MP_QSTR_ADC_CHAN_THRSEL, (const byte*)"\xb3\x2c\x0f" "ADC_CHAN_THRSEL")
QDEF(MP_QSTR_ADC_CTRL, (const byte*)"\xf5\xe2\x08" "ADC_CTRL")
QDEF(MP_QSTR_ADC_FLAGS, (const byte*)"\xa3\x75\x09" "ADC_FLAGS")
QDEF(MP_QSTR_ADC_INSEL, (const byte*)"\xe1\xe2\x09" "ADC_INSEL")
QDEF(MP_QSTR_ADC_INTEN, (const byte*)"\xe4\x0f\x09" "ADC_INTEN")
QDEF(MP_QSTR_ADC_SEQ_CTRL0, (const byte*)"\x3d\xf3\x0d" "ADC_SEQ_CTRL0")
QDEF(MP_QSTR_ADC_SEQ_CTRL1, (const byte*)"\x3c\xf3\x0d" "ADC_SEQ_CTRL1")
QDEF(MP_QSTR_ADC_SEQ_GDAT0, (const byte*)"\xe2\x65\x0d" "ADC_SEQ_GDAT0")
QDEF(MP_QSTR_ADC_SEQ_GDAT1, (const byte*)"\xe3\x65\x0d" "ADC_SEQ_GDAT1")
QDEF(MP_QSTR_ADC_STARTUP, (const byte*)"\x79\x50\x0b" "ADC_STARTUP")
QDEF(MP_QSTR_ADC_THR0_HIGH, (const byte*)"\xd3\xde\x0d" "ADC_THR0_HIGH")
QDEF(MP_QSTR_ADC_THR0_LOW, (const byte*)"\x69\xe7\x0c" "ADC_THR0_LOW")
QDEF(MP_QSTR_ADC_THR1_HIGH, (const byte*)"\xb2\x1e\x0d" "ADC_THR1_HIGH")
QDEF(MP_QSTR_ADC_THR1_LOW, (const byte*)"\xe8\x17\x0c" "ADC_THR1_LOW")
QDEF(MP_QSTR_ASYNC_SYSCON, (const byte*)"\x47\x7e\x0c" "ASYNC_SYSCON")
QDEF(MP_QSTR_CAN0, (const byte*)"\x99\xc0\x04" "CAN0")
QDEF(MP_QSTR_CAN1, (const byte*)"\x98\xc0\x04" "CAN1")
QDEF(MP_QSTR_CRC_ENGINE, (const byte*)"\xc6\x7d\x0a" "CRC_ENGINE")
QDEF(MP_QSTR_CRC_MODE, (const byte*)"\x6b\x4d\x08" "CRC_MODE")
QDEF(MP_QSTR_CRC_SEED, (const byte*)"\x5f\x23\x08" "CRC_SEED")
QDEF(MP_QSTR_CRC_SUM, (const byte*)"\xa3\xa9\x07" "CRC_SUM")
QDEF(MP_QSTR_CRC_WR_DATA, (const byte*)"\xc2\x75\x0b" "CRC_WR_DATA")
QDEF(MP_QSTR_CTIMER0, (const byte*)"\x71\x19\x07" "CTIMER0")
QDEF(MP_QSTR_CTIMER1, (const byte*)"\x70\x19\x07" "CTIMER1")
QDEF(MP_QSTR_CTIMER2, (const byte*)"\x73\x19\x07" "CTIMER2")
QDEF(MP_QSTR_CTIMER3, (const byte*)"\x72\x19\x07" "CTIMER3")
QDEF(MP_QSTR_CTIMER4, (const byte*)"\x75\x19\x07" "CTIMER4")
QDEF(MP_QSTR_DMA0, (const byte*)"\x1d\x2d\x04" "DMA0")
QDEF(MP_QSTR_DMA_ABORT, (const byte*)"\xb8\xb9\x09" "DMA_ABORT")
QDEF(MP_QSTR_DMA_ACTIVE, (const byte*)"\x9e\x85\x0a" "DMA_ACTIVE")
QDEF(MP_QSTR_DMA_BUSY, (const byte*)"\x8f\x50\x08" "DMA_BUSY")
QDEF(MP_QSTR_DMA_CFG, (const byte*)"\x70\xa5\x07" "DMA_CFG")
QDEF(MP_QSTR_DMA_CTLSTAT, (const byte*)"\xbb\xbd\x0b" "DMA_CTLSTAT")
QDEF(MP_QSTR_DMA_CTRL, (const byte*)"\xdb\xf9\x08" "DMA_CTRL")
QDEF(MP_QSTR_DMA_ENABLECLR, (const byte*)"\x4e\x2e\x0d" "DMA_ENABLECLR")
QDEF(MP_QSTR_DMA_ENABLESET, (const byte*)"\x71\xe9\x0d" "DMA_ENABLESET")
QDEF(MP_QSTR_DMA_ERRINT, (const byte*)"\xc4\x0f\x0a" "DMA_ERRINT")
QDEF(MP_QSTR_DMA_INTA, (const byte*)"\x40\x7a\x08" "DMA_INTA")
QDEF(MP_QSTR_DMA_INTB, (const byte*)"\x43\x7a\x08" "DMA_INTB")
QDEF(MP_QSTR_DMA_INTENCLR, (const byte*)"\xd7\x21\x0c" "DMA_INTENCLR")
QDEF(MP_QSTR_DMA_INTENSET, (const byte*)"\x28\x66\x0c" "DMA_INTENSET")
QDEF(MP_QSTR_DMA_INTSTAT, (const byte*)"\xf3\x16\x0b" "DMA_INTSTAT")
QDEF(MP_QSTR_DMA_SETTRIG, (const byte*)"\x38\xe1\x0b" "DMA_SETTRIG")
QDEF(MP_QSTR_DMA_SETVALID, (const byte*)"\x06\x22\x0c" "DMA_SETVALID")
QDEF(MP_QSTR_DMA_SRAMBASE, (const byte*)"\x4a\x3a\x0c" "DMA_SRAMBASE")
QDEF(MP_QSTR_DMA_XFERCFG, (const byte*)"\xf9\x65\x0b" "DMA_XFERCFG")
QDEF(MP_QSTR_DMIC0, (const byte*)"\x16\xb9\x05" "DMIC0")
QDEF(MP_QSTR_EEPROM, (const byte*)"\xc5\x36\x06" "EEPROM")
QDEF(MP_QSTR_EMC, (const byte*)"\x0e\xa7\x03" "EMC")
QDEF(MP_QSTR_ENET, (const byte*)"\xdf\x8c\x04" "ENET")
QDEF(MP_QSTR_FLEXCOMM0, (const byte*)"\xce\xf1\x09" "FLEXCOMM0")
QDEF(MP_QSTR_FLEXCOMM1, (const byte*)"\xcf\xf1\x09" "FLEXCOMM1")
QDEF(MP_QSTR_FLEXCOMM2, (const byte*)"\xcc\xf1\x09" "FLEXCOMM2")
QDEF(MP_QSTR_FLEXCOMM3, (const byte*)"\xcd\xf1\x09" "FLEXCOMM3")
QDEF(MP_QSTR_FLEXCOMM4, (const byte*)"\xca\xf1\x09" "FLEXCOMM4")
QDEF(MP_QSTR_FLEXCOMM5, (const byte*)"\xcb\xf1\x09" "FLEXCOMM5")
QDEF(MP_QSTR_FLEXCOMM6, (const byte*)"\xc8\xf1\x09" "FLEXCOMM6")
QDEF(MP_QSTR_FLEXCOMM7, (const byte*)"\xc9\xf1\x09" "FLEXCOMM7")
QDEF(MP_QSTR_FLEXCOMM8, (const byte*)"\xc6\xf1\x09" "FLEXCOMM8")
QDEF(MP_QSTR_FLEXCOMM9, (const byte*)"\xc7\xf1\x09" "FLEXCOMM9")
QDEF(MP_QSTR_FMC, (const byte*)"\x8d\xb3\x03" "FMC")
QDEF(MP_QSTR_GINT0, (const byte*)"\xa1\xbe\x05" "GINT0")
QDEF(MP_QSTR_GINT1, (const byte*)"\xa0\xbe\x05" "GINT1")
QDEF(MP_QSTR_GPIO, (const byte*)"\x14\xe0\x04" "GPIO")
QDEF(MP_QSTR_GPIO_CLR0, (const byte*)"\x86\xac\x09" "GPIO_CLR0")
QDEF(MP_QSTR_GPIO_CLR1, (const byte*)"\x87\xac\x09" "GPIO_CLR1")
QDEF(MP_QSTR_GPIO_CLR2, (const byte*)"\x84\xac\x09" "GPIO_CLR2")
QDEF(MP_QSTR_GPIO_CLR3, (const byte*)"\x85\xac\x09" "GPIO_CLR3")
QDEF(MP_QSTR_GPIO_CLR4, (const byte*)"\x82\xac\x09" "GPIO_CLR4")
QDEF(MP_QSTR_GPIO_CLR5, (const byte*)"\x83\xac\x09" "GPIO_CLR5")
QDEF(MP_QSTR_GPIO_DIR0, (const byte*)"\x24\x5d\x09" "GPIO_DIR0")
QDEF(MP_QSTR_GPIO_DIR1, (const byte*)"\x25\x5d\x09" "GPIO_DIR1")
QDEF(MP_QSTR_GPIO_DIR2, (const byte*)"\x26\x5d\x09" "GPIO_DIR2")
QDEF(MP_QSTR_GPIO_DIR3, (const byte*)"\x27\x5d\x09" "GPIO_DIR3")
QDEF(MP_QSTR_GPIO_DIR4, (const byte*)"\x20\x5d\x09" "GPIO_DIR4")
QDEF(MP_QSTR_GPIO_DIR5, (const byte*)"\x21\x5d\x09" "GPIO_DIR5")
QDEF(MP_QSTR_GPIO_DIRCLR0, (const byte*)"\x99\x08\x0c" "GPIO_DIRCLR0")
QDEF(MP_QSTR_GPIO_DIRCLR1, (const byte*)"\x98\x08\x0c" "GPIO_DIRCLR1")
QDEF(MP_QSTR_GPIO_DIRCLR2, (const byte*)"\x9b\x08\x0c" "GPIO_DIRCLR2")
QDEF(MP_QSTR_GPIO_DIRCLR3, (const byte*)"\x9a\x08\x0c" "GPIO_DIRCLR3")
QDEF(MP_QSTR_GPIO_DIRCLR4, (const byte*)"\x9d\x08\x0c" "GPIO_DIRCLR4")
QDEF(MP_QSTR_GPIO_DIRCLR5, (const byte*)"\x9c\x08\x0c" "GPIO_DIRCLR5")
QDEF(MP_QSTR_GPIO_DIRNOT0, (const byte*)"\x71\x87\x0c" "GPIO_DIRNOT0")
QDEF(MP_QSTR_GPIO_DIRNOT1, (const byte*)"\x70\x87\x0c" "GPIO_DIRNOT1")
QDEF(MP_QSTR_GPIO_DIRNOT2, (const byte*)"\x73\x87\x0c" "GPIO_DIRNOT2")
QDEF(MP_QSTR_GPIO_DIRNOT3, (const byte*)"\x72\x87\x0c" "GPIO_DIRNOT3")
QDEF(MP_QSTR_GPIO_DIRNOT4, (const byte*)"\x75\x87\x0c" "GPIO_DIRNOT4")
QDEF(MP_QSTR_GPIO_DIRNOT5, (const byte*)"\x74\x87\x0c" "GPIO_DIRNOT5")
QDEF(MP_QSTR_GPIO_DIRSET0, (const byte*)"\x86\x31\x0c" "GPIO_DIRSET0")
QDEF(MP_QSTR_GPIO_DIRSET1, (const byte*)"\x87\x31\x0c" "GPIO_DIRSET1")
QDEF(MP_QSTR_GPIO_DIRSET2, (const byte*)"\x84\x31\x0c" "GPIO_DIRSET2")
QDEF(MP_QSTR_GPIO_DIRSET3, (const byte*)"\x85\x31\x0c" "GPIO_DIRSET3")
QDEF(MP_QSTR_GPIO_DIRSET4, (const byte*)"\x82\x31\x0c" "GPIO_DIRSET4")
QDEF(MP_QSTR_GPIO_DIRSET5, (const byte*)"\x83\x31\x0c" "GPIO_DIRSET5")
QDEF(MP_QSTR_GPIO_MASK0, (const byte*)"\x8f\xd4\x0a" "GPIO_MASK0")
QDEF(MP_QSTR_GPIO_MASK1, (const byte*)"\x8e\xd4\x0a" "GPIO_MASK1")
QDEF(MP_QSTR_GPIO_MASK2, (const byte*)"\x8d\xd4\x0a" "GPIO_MASK2")
QDEF(MP_QSTR_GPIO_MASK3, (const byte*)"\x8c\xd4\x0a" "GPIO_MASK3")
QDEF(MP_QSTR_GPIO_MASK4, (const byte*)"\x8b\xd4\x0a" "GPIO_MASK4")
QDEF(MP_QSTR_GPIO_MASK5, (const byte*)"\x8a\xd4\x0a" "GPIO_MASK5")
QDEF(MP_QSTR_GPIO_MPIN0, (const byte*)"\x01\x0a\x0a" "GPIO_MPIN0")
QDEF(MP_QSTR_GPIO_MPIN1, (const byte*)"\x00\x0a\x0a" "GPIO_MPIN1")
QDEF(MP_QSTR_GPIO_MPIN2, (const byte*)"\x03\x0a\x0a" "GPIO_MPIN2")
QDEF(MP_QSTR_GPIO_MPIN3, (const byte*)"\x02\x0a\x0a" "GPIO_MPIN3")
QDEF(MP_QSTR_GPIO_MPIN4, (const byte*)"\x05\x0a\x0a" "GPIO_MPIN4")
QDEF(MP_QSTR_GPIO_MPIN5, (const byte*)"\x04\x0a\x0a" "GPIO_MPIN5")
QDEF(MP_QSTR_GPIO_NOT0, (const byte*)"\xae\x4e\x09" "GPIO_NOT0")
QDEF(MP_QSTR_GPIO_NOT1, (const byte*)"\xaf\x4e\x09" "GPIO_NOT1")
QDEF(MP_QSTR_GPIO_NOT2, (const byte*)"\xac\x4e\x09" "GPIO_NOT2")
QDEF(MP_QSTR_GPIO_NOT3, (const byte*)"\xad\x4e\x09" "GPIO_NOT3")
QDEF(MP_QSTR_GPIO_NOT4, (const byte*)"\xaa\x4e\x09" "GPIO_NOT4")
QDEF(MP_QSTR_GPIO_NOT5, (const byte*)"\xab\x4e\x09" "GPIO_NOT5")
QDEF(MP_QSTR_GPIO_PIN0, (const byte*)"\x2c\xf1\x09" "GPIO_PIN0")
QDEF(MP_QSTR_GPIO_PIN1, (const byte*)"\x2d\xf1\x09" "GPIO_PIN1")
QDEF(MP_QSTR_GPIO_PIN2, (const byte*)"\x2e\xf1\x09" "GPIO_PIN2")
QDEF(MP_QSTR_GPIO_PIN3, (const byte*)"\x2f\xf1\x09" "GPIO_PIN3")
QDEF(MP_QSTR_GPIO_PIN4, (const byte*)"\x28\xf1\x09" "GPIO_PIN4")
QDEF(MP_QSTR_GPIO_PIN5, (const byte*)"\x29\xf1\x09" "GPIO_PIN5")
QDEF(MP_QSTR_GPIO_SET0, (const byte*)"\x99\x83\x09" "GPIO_SET0")
QDEF(MP_QSTR_GPIO_SET1, (const byte*)"\x98\x83\x09" "GPIO_SET1")
QDEF(MP_QSTR_GPIO_SET2, (const byte*)"\x9b\x83\x09" "GPIO_SET2")
QDEF(MP_QSTR_GPIO_SET3, (const byte*)"\x9a\x83\x09" "GPIO_SET3")
QDEF(MP_QSTR_GPIO_SET4, (const byte*)"\x9d\x83\x09" "GPIO_SET4")
QDEF(MP_QSTR_GPIO_SET5, (const byte*)"\x9c\x83\x09" "GPIO_SET5")
QDEF(MP_QSTR_I2C0, (const byte*)"\xcd\xca\x04" "I2C0")
QDEF(MP_QSTR_I2C1, (const byte*)"\xcc\xca\x04" "I2C1")
QDEF(MP_QSTR_I2C2, (const byte*)"\xcf\xca\x04" "I2C2")
QDEF(MP_QSTR_I2C3, (const byte*)"\xce\xca\x04" "I2C3")
QDEF(MP_QSTR_I2C4, (const byte*)"\xc9\xca\x04" "I2C4")
QDEF(MP_QSTR_I2C5, (const byte*)"\xc8\xca\x04" "I2C5")
QDEF(MP_QSTR_I2C6, (const byte*)"\xcb\xca\x04" "I2C6")
QDEF(MP_QSTR_I2C7, (const byte*)"\xca\xca\x04" "I2C7")
QDEF(MP_QSTR_I2C8, (const byte*)"\xc5\xca\x04" "I2C8")
QDEF(MP_QSTR_I2C9, (const byte*)"\xc4\xca\x04" "I2C9")
QDEF(MP_QSTR_I2C_CFG, (const byte*)"\x20\x43\x07" "I2C_CFG")
QDEF(MP_QSTR_I2C_CLKDIV, (const byte*)"\x1d\xbb\x0a" "I2C_CLKDIV")
QDEF(MP_QSTR_I2C_ID, (const byte*)"\x4f\xf4\x06" "I2C_ID")
QDEF(MP_QSTR_I2C_INTENCLR, (const byte*)"\x07\xa2\x0c" "I2C_INTENCLR")
QDEF(MP_QSTR_I2C_INTENSET, (const byte*)"\x78\x5f\x0c" "I2C_INTENSET")
QDEF(MP_QSTR_I2C_INTSTAT, (const byte*)"\xa3\x57\x0b" "I2C_INTSTAT")
QDEF(MP_QSTR_I2C_MONRXDAT, (const byte*)"\x35\xa2\x0c" "I2C_MONRXDAT")
QDEF(MP_QSTR_I2C_MSTCTL, (const byte*)"\x93\x1a\x0a" "I2C_MSTCTL")
QDEF(MP_QSTR_I2C_MSTDAT, (const byte*)"\x79\x0c\x0a" "I2C_MSTDAT")
QDEF(MP_QSTR_I2C_MSTTIME, (const byte*)"\x3d\x3e\x0b" "I2C_MSTTIME")
QDEF(MP_QSTR_I2C_SLVADR0, (const byte*)"\xac\x1b\x0b" "I2C_SLVADR0")
QDEF(MP_QSTR_I2C_SLVADR1, (const byte*)"\xad\x1b\x0b" "I2C_SLVADR1")
QDEF(MP_QSTR_I2C_SLVADR2, (const byte*)"\xae\x1b\x0b" "I2C_SLVADR2")
QDEF(MP_QSTR_I2C_SLVADR3, (const byte*)"\xaf\x1b\x0b" "I2C_SLVADR3")
QDEF(MP_QSTR_I2C_SLVCTL, (const byte*)"\x10\x22\x0a" "I2C_SLVCTL")
QDEF(MP_QSTR_I2C_SLVDAT, (const byte*)"\xba\x2c\x0a" "I2C_SLVDAT")
QDEF(MP_QSTR_I2C_SLVQUAL0, (const byte*)"\xd2\x93\x0c" "I2C_SLVQUAL0")
QDEF(MP_QSTR_I2C_STAT, (const byte*)"\xb0\x31\x08" "I2C_STAT")
QDEF(MP_QSTR_I2C_TIMEOUT, (const byte*)"\x19\xd7\x0b" "I2C_TIMEOUT")
QDEF(MP_QSTR_I2S0, (const byte*)"\xdd\xc8\x04" "I2S0")
QDEF(MP_QSTR_I2S1, (const byte*)"\xdc\xc8\x04" "I2S1")
QDEF(MP_QSTR_INPUTMUX, (const byte*)"\x13\xea\x08" "INPUTMUX")
QDEF(MP_QSTR_IOCON, (const byte*)"\x21\xc1\x05" "IOCON")
QDEF(MP_QSTR_LCD, (const byte*)"\xce\xdc\x03" "LCD")
QDEF(MP_QSTR_MRT0, (const byte*)"\x5e\xff\x04" "MRT0")
QDEF(MP_QSTR_OTPC, (const byte*)"\x6d\x51\x04" "OTPC")
QDEF(MP_QSTR_PINT, (const byte*)"\x06\x12\x04" "PINT")
QDEF(MP_QSTR_RIT, (const byte*)"\x0a\x08\x03" "RIT")
QDEF(MP_QSTR_RTC, (const byte*)"\xa0\x04\x03" "RTC")
QDEF(MP_QSTR_RTC_COUNT, (const byte*)"\xbc\xb0\x09" "RTC_COUNT")
QDEF(MP_QSTR_RTC_CTRL, (const byte*)"\x16\xf8\x08" "RTC_CTRL")
QDEF(MP_QSTR_RTC_GPREG0, (const byte*)"\x08\x32\x0a" "RTC_GPREG0")
QDEF(MP_QSTR_RTC_GPREG1, (const byte*)"\x09\x32\x0a" "RTC_GPREG1")
QDEF(MP_QSTR_RTC_GPREG2, (const byte*)"\x0a\x32\x0a" "RTC_GPREG2")
QDEF(MP_QSTR_RTC_GPREG3, (const byte*)"\x0b\x32\x0a" "RTC_GPREG3")
QDEF(MP_QSTR_RTC_GPREG4, (const byte*)"\x0c\x32\x0a" "RTC_GPREG4")
QDEF(MP_QSTR_RTC_GPREG5, (const byte*)"\x0d\x32\x0a" "RTC_GPREG5")
QDEF(MP_QSTR_RTC_GPREG6, (const byte*)"\x0e\x32\x0a" "RTC_GPREG6")
QDEF(MP_QSTR_RTC_GPREG7, (const byte*)"\x0f\x32\x0a" "RTC_GPREG7")
QDEF(MP_QSTR_RTC_MATCH, (const byte*)"\x0c\xea\x09" "RTC_MATCH")
QDEF(MP_QSTR_RTC_WAKE, (const byte*)"\xa7\x56\x08" "RTC_WAKE")
QDEF(MP_QSTR_SCT0, (const byte*)"\xd1\x8b\x04" "SCT0")
QDEF(MP_QSTR_SDIF, (const byte*)"\x9d\x82\x04" "SDIF")
QDEF(MP_QSTR_SMARTCARD0, (const byte*)"\x58\x41\x0a" "SMARTCARD0")
QDEF(MP_QSTR_SMARTCARD1, (const byte*)"\x59\x41\x0a" "SMARTCARD1")
QDEF(MP_QSTR_SPI0, (const byte*)"\xff\x4f\x04" "SPI0")
QDEF(MP_QSTR_SPI1, (const byte*)"\xfe\x4f\x04" "SPI1")
QDEF(MP_QSTR_SPI2, (const byte*)"\xfd\x4f\x04" "SPI2")
QDEF(MP_QSTR_SPI3, (const byte*)"\xfc\x4f\x04" "SPI3")
QDEF(MP_QSTR_SPI4, (const byte*)"\xfb\x4f\x04" "SPI4")
QDEF(MP_QSTR_SPI5, (const byte*)"\xfa\x4f\x04" "SPI5")
QDEF(MP_QSTR_SPI6, (const byte*)"\xf9\x4f\x04" "SPI6")
QDEF(MP_QSTR_SPI7, (const byte*)"\xf8\x4f\x04" "SPI7")
QDEF(MP_QSTR_SPI8, (const byte*)"\xf7\x4f\x04" "SPI8")
QDEF(MP_QSTR_SPI9, (const byte*)"\xf6\x4f\x04" "SPI9")
QDEF(MP_QSTR_SPIFI0, (const byte*)"\xd0\x5c\x06" "SPIFI0")
QDEF(MP_QSTR_SPI_CFG, (const byte*)"\x52\x0b\x07" "SPI_CFG")
QDEF(MP_QSTR_SPI_DIV, (const byte*)"\xeb\xff\x07" "SPI_DIV")
QDEF(MP_QSTR_SPI_DLY, (const byte*)"\x41\xff\x07" "SPI_DLY")
QDEF(MP_QSTR_SPI_FIFOCFG, (const byte*)"\x54\x64\x0b" "SPI_FIFOCFG")
QDEF(MP_QSTR_SPI_FIFOINTENCLR, (const byte*)"\x33\x3e\x10" "SPI_FIFOINTENCLR")
QDEF(MP_QSTR_SPI_FIFOINTENSET, (const byte*)"\x0c\x83\x10" "SPI_FIFOINTENSET")
QDEF(MP_QSTR_SPI_FIFOINTSTAT, (const byte*)"\x57\xc5\x0f" "SPI_FIFOINTSTAT")
QDEF(MP_QSTR_SPI_FIFORD, (const byte*)"\x80\xab\x0a" "SPI_FIFORD")
QDEF(MP_QSTR_SPI_FIFORDNOPOP, (const byte*)"\x0e\x77\x0f" "SPI_FIFORDNOPOP")
QDEF(MP_QSTR_SPI_FIFOSTAT, (const byte*)"\xc4\x53\x0c" "SPI_FIFOSTAT")
QDEF(MP_QSTR_SPI_FIFOTRIG, (const byte*)"\xfe\xd8\x0c" "SPI_FIFOTRIG")
QDEF(MP_QSTR_SPI_FIFOWR, (const byte*)"\x33\xab\x0a" "SPI_FIFOWR")
QDEF(MP_QSTR_SPI_ID, (const byte*)"\xbd\x7c\x06" "SPI_ID")
QDEF(MP_QSTR_SPI_INTENCLR, (const byte*)"\xf5\x84\x0c" "SPI_INTENCLR")
QDEF(MP_QSTR_SPI_INTENSET, (const byte*)"\xca\xc9\x0c" "SPI_INTENSET")
QDEF(MP_QSTR_SPI_INTSTAT, (const byte*)"\xd1\x3b\x0b" "SPI_INTSTAT")
QDEF(MP_QSTR_SPI_STAT, (const byte*)"\x82\xeb\x08" "SPI_STAT")
QDEF(MP_QSTR_SYSCON, (const byte*)"\x3e\x80\x06" "SYSCON")
QDEF(MP_QSTR_USART0, (const byte*)"\x34\x5b\x06" "USART0")
QDEF(MP_QSTR_USART1, (const byte*)"\x35\x5b\x06" "USART1")
QDEF(MP_QSTR_USART2, (const byte*)"\x36\x5b\x06" "USART2")
QDEF(MP_QSTR_USART3, (const byte*)"\x37\x5b\x06" "USART3")
QDEF(MP_QSTR_USART4, (const byte*)"\x30\x5b\x06" "USART4")
QDEF(MP_QSTR_USART5, (const byte*)"\x31\x5b\x06" "USART5")
QDEF(MP_QSTR_USART6, (const byte*)"\x32\x5b\x06" "USART6")
QDEF(MP_QSTR_USART7, (const byte*)"\x33\x5b\x06" "USART7")
QDEF(MP_QSTR_USART8, (const byte*)"\x3c\x5b\x06" "USART8")
QDEF(MP_QSTR_USART9, (const byte*)"\x3d\x5b\x06" "USART9")
QDEF(MP_QSTR_USART_ADDR, (const byte*)"\xe8\x45\x0a" "USART_ADDR")
QDEF(MP_QSTR_USART_BRG, (const byte*)"\xec\x6f\x09" "USART_BRG")
QDEF(MP_QSTR_USART_CFG, (const byte*)"\x39\x5d\x09" "USART_CFG")
QDEF(MP_QSTR_USART_CTL, (const byte*)"\x60\x5b\x09" "USART_CTL")
QDEF(MP_QSTR_USART_FIFOCFG, (const byte*)"\xbf\xc5\x0d" "USART_FIFOCFG")
QDEF(MP_QSTR_USART_FIFOINTENCLR, (const byte*)"\x38\xa9\x12" "USART_FIFOINTENCLR")
QDEF(MP_QSTR_USART_FIFOINTENSET, (const byte*)"\xc7\xec\x12" "USART_FIFOINTENSET")
QDEF(MP_QSTR_USART_FIFOINTSTAT, (const byte*)"\x3c\xb7\x11" "USART_FIFOINTSTAT")
QDEF(MP_QSTR_USART_FIFORD, (const byte*)"\x8b\xe4\x0c" "USART_FIFORD")
QDEF(MP_QSTR_USART_FIFORDNOPOP, (const byte*)"\xe5\x90\x11" "USART_FIFORDNOPOP")
QDEF(MP_QSTR_USART_FIFOSTAT, (const byte*)"\x8f\x13\x0e" "USART_FIFOSTAT")
QDEF(MP_QSTR_USART_FIFOTRIG, (const byte*)"\x75\x6e\x0e" "USART_FIFOTRIG")
QDEF(MP_QSTR_USART_FIFOWR, (const byte*)"\x78\xe4\x0c" "USART_FIFOWR")
QDEF(MP_QSTR_USART_ID, (const byte*)"\x76\xa5\x08" "USART_ID")
QDEF(MP_QSTR_USART_INTENCLR, (const byte*)"\xfe\xb1\x0e" "USART_INTENCLR")
QDEF(MP_QSTR_USART_INTENSET, (const byte*)"\x81\xf4\x0e" "USART_INTENSET")
QDEF(MP_QSTR_USART_INTSTAT, (const byte*)"\x3a\xa0\x0d" "USART_INTSTAT")
QDEF(MP_QSTR_USART_OSR, (const byte*)"\x55\x4a\x09" "USART_OSR")
QDEF(MP_QSTR_USART_STAT, (const byte*)"\x49\x8b\x0a" "USART_STAT")
QDEF(MP_QSTR_USB0, (const byte*)"\x51\xf0\x04" "USB0")
QDEF(MP_QSTR_USBFSH, (const byte*)"\x9c\x9f\x06" "USBFSH")
QDEF(MP_QSTR_USBHSD, (const byte*)"\x1e\x98\x06" "USBHSD")
QDEF(MP_QSTR_USBHSH, (const byte*)"\x12\x98\x06" "USBHSH")
QDEF(MP_QSTR_UTICK0, (const byte*)"\xd5\xc8\x06" "UTICK0")
QDEF(MP_QSTR_WWDT, (const byte*)"\x35\x29\x04" "WWDT")
QDEF(MP_QSTR_ALT, (const byte*)"\x7c\xb7\x03" "ALT")
QDEF(MP_QSTR_ALT_OPEN_DRAIN, (const byte*)"\xf8\xeb\x0e" "ALT_OPEN_DRAIN")
QDEF(MP_QSTR_ARRAY, (const byte*)"\x5c\x7a\x05" "ARRAY")
QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x8c\x0f" "ArithmeticError")
QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x5a\x0e" "AssertionError")
QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\xde\x0e" "AttributeError")
QDEF(MP_QSTR_BFINT16, (const byte*)"\x95\xe2\x07" "BFINT16")
QDEF(MP_QSTR_BFINT32, (const byte*)"\x53\xe2\x07" "BFINT32")
QDEF(MP_QSTR_BFINT8, (const byte*)"\x4a\x9a\x06" "BFINT8")
QDEF(MP_QSTR_BFUINT16, (const byte*)"\x40\xa6\x08" "BFUINT16")
QDEF(MP_QSTR_BFUINT32, (const byte*)"\x06\xa6\x08" "BFUINT32")
QDEF(MP_QSTR_BFUINT8, (const byte*)"\xbf\xaf\x07" "BFUINT8")
QDEF(MP_QSTR_BF_LEN, (const byte*)"\x19\xb0\x06" "BF_LEN")
QDEF(MP_QSTR_BF_POS, (const byte*)"\x52\x9d\x06" "BF_POS")
QDEF(MP_QSTR_BIG_ENDIAN, (const byte*)"\xff\x51\x0a" "BIG_ENDIAN")
QDEF(MP_QSTR_BLACK, (const byte*)"\x82\x4d\x05" "BLACK")
QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x92\x0d" "BaseException")
QDEF(MP_QSTR_BytesIO, (const byte*)"\x1a\xb7\x07" "BytesIO")
QDEF(MP_QSTR_DEBUG, (const byte*)"\x34\x6d\x05" "DEBUG")
QDEF(MP_QSTR_DEEPSLEEP_RESETABC, (const byte*)"\x54\x52\x12" "DEEPSLEEP_RESETABC")
QDEF(MP_QSTR_DecompIO, (const byte*)"\x93\xb7\x08" "DecompIO")
QDEF(MP_QSTR_EACCES, (const byte*)"\x37\xc2\x06" "EACCES")
QDEF(MP_QSTR_EADDRINUSE, (const byte*)"\x17\x11\x0a" "EADDRINUSE")
QDEF(MP_QSTR_EAGAIN, (const byte*)"\x20\xec\x06" "EAGAIN")
QDEF(MP_QSTR_EALREADY, (const byte*)"\x46\x15\x08" "EALREADY")
QDEF(MP_QSTR_EBADF, (const byte*)"\x61\xa3\x05" "EBADF")
QDEF(MP_QSTR_ECONNABORTED, (const byte*)"\x27\xab\x0c" "ECONNABORTED")
QDEF(MP_QSTR_ECONNREFUSED, (const byte*)"\x3a\x2c\x0c" "ECONNREFUSED")
QDEF(MP_QSTR_ECONNRESET, (const byte*)"\x19\xfb\x0a" "ECONNRESET")
QDEF(MP_QSTR_EEXIST, (const byte*)"\x53\xad\x06" "EEXIST")
QDEF(MP_QSTR_EHOSTUNREACH, (const byte*)"\x86\x25\x0c" "EHOSTUNREACH")
QDEF(MP_QSTR_EINPROGRESS, (const byte*)"\x9a\xa0\x0b" "EINPROGRESS")
QDEF(MP_QSTR_EINVAL, (const byte*)"\x5c\xff\x06" "EINVAL")
QDEF(MP_QSTR_EIO, (const byte*)"\x86\xa6\x03" "EIO")
QDEF(MP_QSTR_EISDIR, (const byte*)"\xa5\x4f\x06" "EISDIR")
QDEF(MP_QSTR_ENOBUFS, (const byte*)"\xe3\x87\x07" "ENOBUFS")
QDEF(MP_QSTR_ENODEV, (const byte*)"\xb6\x67\x06" "ENODEV")
QDEF(MP_QSTR_ENOENT, (const byte*)"\x5e\x65\x06" "ENOENT")
QDEF(MP_QSTR_ENOMEM, (const byte*)"\xa4\x85\x06" "ENOMEM")
QDEF(MP_QSTR_ENOTCONN, (const byte*)"\x79\xd7\x08" "ENOTCONN")
QDEF(MP_QSTR_EOFError, (const byte*)"\x91\xbf\x08" "EOFError")
QDEF(MP_QSTR_EOPNOTSUPP, (const byte*)"\xac\x97\x0a" "EOPNOTSUPP")
QDEF(MP_QSTR_EPERM, (const byte*)"\xea\x7f\x05" "EPERM")
QDEF(MP_QSTR_ETIMEDOUT, (const byte*)"\xff\xf8\x09" "ETIMEDOUT")
QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\xe0\x08" "Ellipsis")
QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x29\x09" "Exception")
QDEF(MP_QSTR_FLOAT32, (const byte*)"\xb4\x87\x07" "FLOAT32")
QDEF(MP_QSTR_FLOAT64, (const byte*)"\x17\x87\x07" "FLOAT64")
QDEF(MP_QSTR_FONT5x7, (const byte*)"\x6c\x1b\x07" "FONT5x7")
QDEF(MP_QSTR_FONT6x13, (const byte*)"\xba\xd3\x08" "FONT6x13")
QDEF(MP_QSTR_FileIO, (const byte*)"\xc5\x15\x06" "FileIO")
QDEF(MP_QSTR_Flash, (const byte*)"\x95\x91\x05" "Flash")
QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x62\x0d" "GeneratorExit")
QDEF(MP_QSTR_HARD_RESET, (const byte*)"\xb0\x51\x0a" "HARD_RESET")
QDEF(MP_QSTR_HID, (const byte*)"\x00\xec\x03" "HID")
QDEF(MP_QSTR_I2C, (const byte*)"\x5d\xdf\x03" "I2C")
QDEF(MP_QSTR_IMU, (const byte*)"\x14\xd7\x03" "IMU")
QDEF(MP_QSTR_IN, (const byte*)"\x22\x73\x02" "IN")
QDEF(MP_QSTR_INT16, (const byte*)"\x91\x76\x05" "INT16")
QDEF(MP_QSTR_INT32, (const byte*)"\x57\x76\x05" "INT32")
QDEF(MP_QSTR_INT64, (const byte*)"\xf4\x75\x05" "INT64")
QDEF(MP_QSTR_INT8, (const byte*)"\xce\xbd\x04" "INT8")
QDEF(MP_QSTR_INVERTER, (const byte*)"\x80\x15\x08" "INVERTER")
QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x9c\x0b" "ImportError")
QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x20\x10" "IndentationError")
QDEF(MP_QSTR_IndexError, (const byte*)"\x83\xad\x0a" "IndexError")
QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x00\x08" "KeyError")
QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\xe2\x11" "KeyboardInterrupt")
QDEF(MP_QSTR_LED, (const byte*)"\x88\xdc\x03" "LED")
QDEF(MP_QSTR_LITTLE_ENDIAN, (const byte*)"\xbf\x5b\x0d" "LITTLE_ENDIAN")
QDEF(MP_QSTR_LSB, (const byte*)"\xd8\xde\x03" "LSB")
QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x69\x0b" "LookupError")
QDEF(MP_QSTR_MASTER, (const byte*)"\x39\x8d\x06" "MASTER")
QDEF(MP_QSTR_MSB, (const byte*)"\x59\xca\x03" "MSB")
QDEF(MP_QSTR_MSC, (const byte*)"\x58\xca\x03" "MSC")
QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x83\x0b" "MemoryError")
QDEF(MP_QSTR_NATIVE, (const byte*)"\x04\x8e\x06" "NATIVE")
QDEF(MP_QSTR_NameError, (const byte*)"\xba\x2d\x09" "NameError")
QDEF(MP_QSTR_None, (const byte*)"\x6f\xd1\x04" "None")
QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x68\x08" "NoneType")
QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x98\x13" "NotImplementedError")
QDEF(MP_QSTR_OPEN_DRAIN, (const byte*)"\x5e\x48\x0a" "OPEN_DRAIN")
QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x65\x07" "OSError")
QDEF(MP_QSTR_OUT, (const byte*)"\x0b\xe3\x03" "OUT")
QDEF(MP_QSTR_OrderedDict, (const byte*)"\xf0\x7e\x0b" "OrderedDict")
QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\xe1\x0d" "OverflowError")
QDEF(MP_QSTR_POLLERR, (const byte*)"\xdf\xc0\x07" "POLLERR")
QDEF(MP_QSTR_POLLHUP, (const byte*)"\x77\x8a\x07" "POLLHUP")
QDEF(MP_QSTR_POLLIN, (const byte*)"\x7d\x61\x06" "POLLIN")
QDEF(MP_QSTR_POLLOUT, (const byte*)"\x74\x85\x07" "POLLOUT")
QDEF(MP_QSTR_PTR, (const byte*)"\xb3\x0c\x03" "PTR")
QDEF(MP_QSTR_PULL_DOWN, (const byte*)"\xad\xfb\x09" "PULL_DOWN")
QDEF(MP_QSTR_PULL_UP, (const byte*)"\xba\x5e\x07" "PULL_UP")
QDEF(MP_QSTR_PWRON_RESET, (const byte*)"\xdb\xcb\x0b" "PWRON_RESET")
QDEF(MP_QSTR_Pin, (const byte*)"\x12\x14\x03" "Pin")
QDEF(MP_QSTR_PinAF, (const byte*)"\x35\x58\x05" "PinAF")
QDEF(MP_QSTR_PinBase, (const byte*)"\x47\x43\x07" "PinBase")
QDEF(MP_QSTR_REPEATER, (const byte*)"\xc5\x38\x08" "REPEATER")
QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\xf1\x0c" "RuntimeError")
QDEF(MP_QSTR_SD, (const byte*)"\xf2\x74\x02" "SD")
QDEF(MP_QSTR_SDCard, (const byte*)"\xa6\xaf\x06" "SDCard")
QDEF(MP_QSTR_SLAVE, (const byte*)"\x68\x15\x05" "SLAVE")
QDEF(MP_QSTR_SOFT_RESET, (const byte*)"\x01\xc6\x0a" "SOFT_RESET")
QDEF(MP_QSTR_SPI, (const byte*)"\xef\x11\x03" "SPI")
QDEF(MP_QSTR_SWIM, (const byte*)"\x05\x3a\x04" "SWIM")
QDEF(MP_QSTR_Signal, (const byte*)"\x9b\xe4\x06" "Signal")
QDEF(MP_QSTR_SoftSPI, (const byte*)"\x21\x58\x07" "SoftSPI")
QDEF(MP_QSTR_StopAsyncIteration, (const byte*)"\xec\xf0\x12" "StopAsyncIteration")
QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x1c\x0d" "StopIteration")
QDEF(MP_QSTR_StringIO, (const byte*)"\x76\x76\x08" "StringIO")
QDEF(MP_QSTR_Switch, (const byte*)"\x97\x00\x06" "Switch")
QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x8f\x0b" "SyntaxError")
QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\xff\x0a" "SystemExit")
QDEF(MP_QSTR_TextIOWrapper, (const byte*)"\xad\x8d\x0d" "TextIOWrapper")
QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x96\x09" "TypeError")
QDEF(MP_QSTR_UART, (const byte*)"\xb7\x19\x04" "UART")
QDEF(MP_QSTR_UINT16, (const byte*)"\xc4\x17\x06" "UINT16")
QDEF(MP_QSTR_UINT32, (const byte*)"\x82\x17\x06" "UINT32")
QDEF(MP_QSTR_UINT64, (const byte*)"\x61\x18\x06" "UINT64")
QDEF(MP_QSTR_UINT8, (const byte*)"\xbb\xe1\x05" "UINT8")
QDEF(MP_QSTR_USB_HID, (const byte*)"\x5b\xb6\x07" "USB_HID")
QDEF(MP_QSTR_USB_VCP, (const byte*)"\x1b\x8a\x07" "USB_VCP")
QDEF(MP_QSTR_UnicodeError, (const byte*)"\x22\xd1\x0c" "UnicodeError")
QDEF(MP_QSTR_VCP, (const byte*)"\x40\xf6\x03" "VCP")
QDEF(MP_QSTR_VOID, (const byte*)"\x31\xf2\x04" "VOID")
QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x87\x0a" "ValueError")
QDEF(MP_QSTR_VfsFat, (const byte*)"\x15\x9b\x06" "VfsFat")
QDEF(MP_QSTR_ViperTypeError, (const byte*)"\xdd\x05\x0e" "ViperTypeError")
QDEF(MP_QSTR_WDT_RESET, (const byte*)"\x08\x72\x09" "WDT_RESET")
QDEF(MP_QSTR_WHITE, (const byte*)"\xa2\xc2\x05" "WHITE")
QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x27\x11" "ZeroDivisionError")
QDEF(MP_QSTR_a2b_base64, (const byte*)"\x3c\x0b\x0a" "a2b_base64")
QDEF(MP_QSTR_abs, (const byte*)"\x95\x32\x03" "abs")
QDEF(MP_QSTR_acos, (const byte*)"\x1b\xa0\x04" "acos")
QDEF(MP_QSTR_acosh, (const byte*)"\x13\xa3\x05" "acosh")
QDEF(MP_QSTR_add, (const byte*)"\x44\x32\x03" "add")
QDEF(MP_QSTR_addr, (const byte*)"\xb6\x7a\x04" "addr")
QDEF(MP_QSTR_addr_size, (const byte*)"\x4c\x40\x09" "addr_size")
QDEF(MP_QSTR_addressof, (const byte*)"\x5a\xf9\x09" "addressof")
QDEF(MP_QSTR_addrsize, (const byte*)"\x93\x91\x08" "addrsize")
QDEF(MP_QSTR_af, (const byte*)"\x22\x6e\x02" "af")
QDEF(MP_QSTR_af_list, (const byte*)"\x5f\x80\x07" "af_list")
QDEF(MP_QSTR_align, (const byte*)"\xa8\xfb\x05" "align")
QDEF(MP_QSTR_all, (const byte*)"\x44\x33\x03" "all")
QDEF(MP_QSTR_alloc_emergency_exception_buf, (const byte*)"\x78\x2a\x1d" "alloc_emergency_exception_buf")
QDEF(MP_QSTR_alt, (const byte*)"\x5c\x33\x03" "alt")
QDEF(MP_QSTR_and_, (const byte*)"\x91\x94\x04" "and_")
QDEF(MP_QSTR_any, (const byte*)"\x13\x33\x03" "any")
QDEF(MP_QSTR_append, (const byte*)"\x6b\x97\x06" "append")
QDEF(MP_QSTR_arg, (const byte*)"\x91\x34\x03" "arg")
QDEF(MP_QSTR_args, (const byte*)"\xc2\xc6\x04" "args")
QDEF(MP_QSTR_argv, (const byte*)"\xc7\xc6\x04" "argv")
QDEF(MP_QSTR_array, (const byte*)"\x7c\x72\x05" "array")
QDEF(MP_QSTR_asin, (const byte*)"\x50\xe5\x04" "asin")
QDEF(MP_QSTR_asinh, (const byte*)"\x38\x8f\x05" "asinh")
QDEF(MP_QSTR_asm_thumb, (const byte*)"\x43\x6d\x09" "asm_thumb")
QDEF(MP_QSTR_asr, (const byte*)"\x65\x35\x03" "asr")
QDEF(MP_QSTR_atan, (const byte*)"\x1f\xbe\x04" "atan")
QDEF(MP_QSTR_atan2, (const byte*)"\xcd\x81\x05" "atan2")
QDEF(MP_QSTR_atanh, (const byte*)"\x97\x81\x05" "atanh")
QDEF(MP_QSTR_b, (const byte*)"\xc7\xb5\x01" "b")
QDEF(MP_QSTR_b2a_base64, (const byte*)"\x3c\x8f\x0a" "b2a_base64")
QDEF(MP_QSTR_baudrate, (const byte*)"\xf5\xd8\x08" "baudrate")
QDEF(MP_QSTR_bin, (const byte*)"\xe0\x48\x03" "bin")
QDEF(MP_QSTR_binascii, (const byte*)"\x91\x3c\x08" "binascii")
QDEF(MP_QSTR_bits, (const byte*)"\x49\x68\x04" "bits")
QDEF(MP_QSTR_bkcolor, (const byte*)"\x31\xd8\x07" "bkcolor")
QDEF(MP_QSTR_bl, (const byte*)"\xcb\x6e\x02" "bl")
QDEF(MP_QSTR_board, (const byte*)"\x7f\xd4\x05" "board")
QDEF(MP_QSTR_bool, (const byte*)"\xeb\x3c\x04" "bool")
QDEF(MP_QSTR_bootloader, (const byte*)"\xe2\xef\x0a" "bootloader")
QDEF(MP_QSTR_border_width, (const byte*)"\x10\xcc\x0c" "border_width")
QDEF(MP_QSTR_bound_method, (const byte*)"\x97\xa2\x0c" "bound_method")
QDEF(MP_QSTR_buffer, (const byte*)"\xe5\xa0\x06" "buffer")
QDEF(MP_QSTR_buffering, (const byte*)"\x25\xdb\x09" "buffering")
QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x31\x08" "builtins")
QDEF(MP_QSTR_bx, (const byte*)"\xdf\x6e\x02" "bx")
QDEF(MP_QSTR_bytearray, (const byte*)"\x76\xa3\x09" "bytearray")
QDEF(MP_QSTR_bytearray_at, (const byte*)"\x9c\x5c\x0c" "bytearray_at")
QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x7d\x08" "bytecode")
QDEF(MP_QSTR_byteorder, (const byte*)"\x61\x99\x09" "byteorder")
QDEF(MP_QSTR_bytes, (const byte*)"\x5c\xb2\x05" "bytes")
QDEF(MP_QSTR_bytes_at, (const byte*)"\xb6\x5d\x08" "bytes_at")
QDEF(MP_QSTR_calcsize, (const byte*)"\x4d\x38\x08" "calcsize")
QDEF(MP_QSTR_callable, (const byte*)"\x0d\x70\x08" "callable")
QDEF(MP_QSTR_callback, (const byte*)"\x4c\xf0\x08" "callback")
QDEF(MP_QSTR_ceil, (const byte*)"\x06\xb0\x04" "ceil")
QDEF(MP_QSTR_center, (const byte*)"\x4e\xbf\x06" "center")
QDEF(MP_QSTR_chdir, (const byte*)"\xb1\xb2\x05" "chdir")
QDEF(MP_QSTR_choice, (const byte*)"\x2e\x33\x06" "choice")
QDEF(MP_QSTR_chr, (const byte*)"\xdc\x4c\x03" "chr")
QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x8c\x0b" "classmethod")
QDEF(MP_QSTR_clear, (const byte*)"\x7c\xa0\x05" "clear")
QDEF(MP_QSTR_clear_fb, (const byte*)"\x67\x31\x08" "clear_fb")
QDEF(MP_QSTR_clear_screen, (const byte*)"\xaf\x10\x0c" "clear_screen")
QDEF(MP_QSTR_close, (const byte*)"\x33\x67\x05" "close")
QDEF(MP_QSTR_closure, (const byte*)"\x74\xca\x07" "closure")
QDEF(MP_QSTR_clz, (const byte*)"\x50\x4c\x03" "clz")
QDEF(MP_QSTR_cmath, (const byte*)"\xb6\xf4\x05" "cmath")
QDEF(MP_QSTR_cmp, (const byte*)"\x3b\x4c\x03" "cmp")
QDEF(MP_QSTR_code, (const byte*)"\x68\xda\x04" "code")
QDEF(MP_QSTR_collect, (const byte*)"\x9b\x65\x07" "collect")
QDEF(MP_QSTR_collections, (const byte*)"\xe0\xc8\x0b" "collections")
QDEF(MP_QSTR_compile, (const byte*)"\xf4\xc9\x07" "compile")
QDEF(MP_QSTR_complex, (const byte*)"\xc5\x9d\x07" "complex")
QDEF(MP_QSTR_const, (const byte*)"\xc0\xff\x05" "const")
QDEF(MP_QSTR_copy, (const byte*)"\xe0\xdb\x04" "copy")
QDEF(MP_QSTR_copysign, (const byte*)"\x33\x14\x08" "copysign")
QDEF(MP_QSTR_cos, (const byte*)"\x7a\x4c\x03" "cos")
QDEF(MP_QSTR_cosh, (const byte*)"\xd2\xdb\x04" "cosh")
QDEF(MP_QSTR_count, (const byte*)"\xa6\x4d\x05" "count")
QDEF(MP_QSTR_cpsid, (const byte*)"\xe8\xc7\x05" "cpsid")
QDEF(MP_QSTR_cpsie, (const byte*)"\xe9\xc7\x05" "cpsie")
QDEF(MP_QSTR_cpu, (const byte*)"\xc3\x4d\x03" "cpu")
QDEF(MP_QSTR_crc, (const byte*)"\x17\x4d\x03" "crc")
QDEF(MP_QSTR_data, (const byte*)"\x15\xdc\x04" "data")
QDEF(MP_QSTR_debug, (const byte*)"\xd4\x55\x05" "debug")
QDEF(MP_QSTR_decode, (const byte*)"\xa9\x59\x06" "decode")
QDEF(MP_QSTR_decompress, (const byte*)"\x62\xfb\x0a" "decompress")
QDEF(MP_QSTR_deepsleep, (const byte*)"\x9e\xd2\x09" "deepsleep")
QDEF(MP_QSTR_default, (const byte*)"\xce\x7d\x07" "default")
QDEF(MP_QSTR_degrees, (const byte*)"\x02\x41\x07" "degrees")
QDEF(MP_QSTR_deinit, (const byte*)"\x9e\x8d\x06" "deinit")
QDEF(MP_QSTR_delattr, (const byte*)"\xdb\xc8\x07" "delattr")
QDEF(MP_QSTR_delay, (const byte*)"\x50\x4c\x05" "delay")
QDEF(MP_QSTR_deleter, (const byte*)"\x6e\xdb\x07" "deleter")
QDEF(MP_QSTR_delta_ms, (const byte*)"\x3c\xf5\x08" "delta_ms")
QDEF(MP_QSTR_dict, (const byte*)"\x3f\xfc\x04" "dict")
QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\xa9\x09" "dict_view")
QDEF(MP_QSTR_difference, (const byte*)"\x72\x24\x0a" "difference")
QDEF(MP_QSTR_difference_update, (const byte*)"\x9c\xfa\x11" "difference_update")
QDEF(MP_QSTR_digest, (const byte*)"\xcd\xc4\x06" "digest")
QDEF(MP_QSTR_dir, (const byte*)"\xfa\x1e\x03" "dir")
QDEF(MP_QSTR_disable, (const byte*)"\x91\x76\x07" "disable")
QDEF(MP_QSTR_disable_irq, (const byte*)"\x04\x3a\x0b" "disable_irq")
QDEF(MP_QSTR_discard, (const byte*)"\x0f\x71\x07" "discard")
QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x04\x06" "divmod")
QDEF(MP_QSTR_dma, (const byte*)"\x6d\x1f\x03" "dma")
QDEF(MP_QSTR_doc, (const byte*)"\x2d\x1f\x03" "doc")
QDEF(MP_QSTR_dumps, (const byte*)"\x7a\x2d\x05" "dumps")
QDEF(MP_QSTR_dupterm, (const byte*)"\xaa\x5a\x07" "dupterm")
QDEF(MP_QSTR_e, (const byte*)"\xc0\xb5\x01" "e")
QDEF(MP_QSTR_elapsed_micros, (const byte*)"\x39\xfa\x0e" "elapsed_micros")
QDEF(MP_QSTR_elapsed_millis, (const byte*)"\x8e\xc2\x0e" "elapsed_millis")
QDEF(MP_QSTR_enable, (const byte*)"\x04\xde\x06" "enable")
QDEF(MP_QSTR_enable_irq, (const byte*)"\x91\x60\x0a" "enable_irq")
QDEF(MP_QSTR_encode, (const byte*)"\x43\xca\x06" "encode")
QDEF(MP_QSTR_encoding, (const byte*)"\x06\x9c\x08" "encoding")
QDEF(MP_QSTR_end, (const byte*)"\x0a\x23\x03" "end")
QDEF(MP_QSTR_endswith, (const byte*)"\x1b\xa3\x08" "endswith")
QDEF(MP_QSTR_enumerate, (const byte*)"\x71\xba\x09" "enumerate")
QDEF(MP_QSTR_erf, (const byte*)"\x94\x23\x03" "erf")
QDEF(MP_QSTR_erfc, (const byte*)"\x77\x96\x04" "erfc")
QDEF(MP_QSTR_errno, (const byte*)"\xc1\x11\x05" "errno")
QDEF(MP_QSTR_errorcode, (const byte*)"\x10\xdd\x09" "errorcode")
QDEF(MP_QSTR_eval, (const byte*)"\x9b\xa6\x04" "eval")
QDEF(MP_QSTR_exec, (const byte*)"\x1e\xc0\x04" "exec")
QDEF(MP_QSTR_execfile, (const byte*)"\x58\x28\x08" "execfile")
QDEF(MP_QSTR_exit, (const byte*)"\x85\xbe\x04" "exit")
QDEF(MP_QSTR_exp, (const byte*)"\xc8\x24\x03" "exp")
QDEF(MP_QSTR_expm1, (const byte*)"\x74\x72\x05" "expm1")
QDEF(MP_QSTR_extend, (const byte*)"\x63\xe8\x06" "extend")
QDEF(MP_QSTR_fabs, (const byte*)"\x93\x12\x04" "fabs")
QDEF(MP_QSTR_fault_debug, (const byte*)"\x61\xc1\x0b" "fault_debug")
QDEF(MP_QSTR_fcolor, (const byte*)"\x5e\x9e\x06" "fcolor")
QDEF(MP_QSTR_file, (const byte*)"\xc3\x34\x04" "file")
QDEF(MP_QSTR_filter, (const byte*)"\x25\xbe\x06" "filter")
QDEF(MP_QSTR_find, (const byte*)"\x00\x34\x04" "find")
QDEF(MP_QSTR_firstbit, (const byte*)"\x20\x39\x08" "firstbit")
QDEF(MP_QSTR_float, (const byte*)"\x35\x44\x05" "float")
QDEF(MP_QSTR_floor, (const byte*)"\x7d\x46\x05" "floor")
QDEF(MP_QSTR_flow, (const byte*)"\x37\x40\x04" "flow")
QDEF(MP_QSTR_flt, (const byte*)"\x5b\x38\x03" "flt")
QDEF(MP_QSTR_flush, (const byte*)"\x61\xc1\x05" "flush")
QDEF(MP_QSTR_fmod, (const byte*)"\xe5\x44\x04" "fmod")
QDEF(MP_QSTR_font, (const byte*)"\x96\x2b\x04" "font")
QDEF(MP_QSTR_format, (const byte*)"\x26\x33\x06" "format")
QDEF(MP_QSTR_freq, (const byte*)"\xe5\x3a\x04" "freq")
QDEF(MP_QSTR_frexp, (const byte*)"\x1c\x98\x05" "frexp")
QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x74\x0a" "from_bytes")
QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\xbd\x08" "fromkeys")
QDEF(MP_QSTR_frozenset, (const byte*)"\xed\x9c\x09" "frozenset")
QDEF(MP_QSTR_function, (const byte*)"\x27\x02\x08" "function")
QDEF(MP_QSTR_gamma, (const byte*)"\x02\x90\x05" "gamma")
QDEF(MP_QSTR_gc, (const byte*)"\x61\x6e\x02" "gc")
QDEF(MP_QSTR_gencall, (const byte*)"\x8b\x06\x07" "gencall")
QDEF(MP_QSTR_generator, (const byte*)"\x96\xc3\x09" "generator")
QDEF(MP_QSTR_get, (const byte*)"\x33\x3b\x03" "get")
QDEF(MP_QSTR_get_font_height, (const byte*)"\x9f\xae\x0f" "get_font_height")
QDEF(MP_QSTR_get_pixel_physical, (const byte*)"\xce\x3e\x12" "get_pixel_physical")
QDEF(MP_QSTR_get_xy, (const byte*)"\xcd\x41\x06" "get_xy")
QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x17\x07" "getattr")
QDEF(MP_QSTR_getcwd, (const byte*)"\x03\xd0\x06" "getcwd")
QDEF(MP_QSTR_getrandbits, (const byte*)"\x66\x7d\x0b" "getrandbits")
QDEF(MP_QSTR_getter, (const byte*)"\x90\xb2\x06" "getter")
QDEF(MP_QSTR_getvalue, (const byte*)"\x78\xac\x08" "getvalue")
QDEF(MP_QSTR_globals, (const byte*)"\x9d\x49\x07" "globals")
QDEF(MP_QSTR_gpio, (const byte*)"\x54\xd8\x04" "gpio")
QDEF(MP_QSTR_group, (const byte*)"\xba\xb0\x05" "group")
QDEF(MP_QSTR_halfduplex, (const byte*)"\xb6\x56\x0a" "halfduplex")
QDEF(MP_QSTR_hard_reset, (const byte*)"\xd0\x51\x0a" "hard_reset")
QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\xb0\x07" "hasattr")
QDEF(MP_QSTR_hash, (const byte*)"\xb7\x70\x04" "hash")
QDEF(MP_QSTR_hashlib, (const byte*)"\x10\x6d\x07" "hashlib")
QDEF(MP_QSTR_have_cdc, (const byte*)"\x84\x08\x08" "have_cdc")
QDEF(MP_QSTR_heap_lock, (const byte*)"\xad\x8c\x09" "heap_lock")
QDEF(MP_QSTR_heap_unlock, (const byte*)"\x56\x2d\x0b" "heap_unlock")
QDEF(MP_QSTR_heapify, (const byte*)"\xaf\x2d\x07" "heapify")
QDEF(MP_QSTR_heappop, (const byte*)"\xd6\x27\x07" "heappop")
QDEF(MP_QSTR_heappush, (const byte*)"\x87\x6b\x08" "heappush")
QDEF(MP_QSTR_heapq, (const byte*)"\x68\x1d\x05" "heapq")
QDEF(MP_QSTR_help, (const byte*)"\x94\x5c\x04" "help")
QDEF(MP_QSTR_hex, (const byte*)"\x70\x50\x03" "hex")
QDEF(MP_QSTR_hexlify, (const byte*)"\x2a\x7f\x07" "hexlify")
QDEF(MP_QSTR_hid, (const byte*)"\xe0\x4f\x03" "hid")
QDEF(MP_QSTR_high, (const byte*)"\x2b\x4c\x04" "high")
QDEF(MP_QSTR_id, (const byte*)"\x28\x6f\x02" "id")
QDEF(MP_QSTR_idle, (const byte*)"\xa1\xdc\x04" "idle")
QDEF(MP_QSTR_ilistdir, (const byte*)"\x71\x6a\x08" "ilistdir")
QDEF(MP_QSTR_imag, (const byte*)"\x47\xb7\x04" "imag")
QDEF(MP_QSTR_implementation, (const byte*)"\x17\x2d\x0e" "implementation")
QDEF(MP_QSTR_imu, (const byte*)"\x34\x53\x03" "imu")
QDEF(MP_QSTR_index, (const byte*)"\x7b\x28\x05" "index")
QDEF(MP_QSTR_info, (const byte*)"\xeb\xb3\x04" "info")
QDEF(MP_QSTR_init, (const byte*)"\x1f\xb4\x04" "init")
QDEF(MP_QSTR_input, (const byte*)"\x73\x5a\x05" "input")
QDEF(MP_QSTR_insert, (const byte*)"\x12\x54\x06" "insert")
QDEF(MP_QSTR_int, (const byte*)"\x16\x53\x03" "int")
QDEF(MP_QSTR_intensity, (const byte*)"\xca\x3d\x09" "intensity")
QDEF(MP_QSTR_intersection, (const byte*)"\x28\x2a\x0c" "intersection")
QDEF(MP_QSTR_intersection_update, (const byte*)"\x06\xdd\x13" "intersection_update")
QDEF(MP_QSTR_inv, (const byte*)"\x14\x53\x03" "inv")
QDEF(MP_QSTR_invert, (const byte*)"\xb7\x00\x06" "invert")
QDEF(MP_QSTR_io, (const byte*)"\x23\x6f\x02" "io")
QDEF(MP_QSTR_ioctl, (const byte*)"\x78\xc2\x05" "ioctl")
QDEF(MP_QSTR_ipoll, (const byte*)"\x53\x5d\x05" "ipoll")
QDEF(MP_QSTR_is_ready, (const byte*)"\x0b\x00\x08" "is_ready")
QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x37\x07" "isalpha")
QDEF(MP_QSTR_isconnected, (const byte*)"\x80\x99\x0b" "isconnected")
QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x9a\x07" "isdigit")
QDEF(MP_QSTR_isdisjoint, (const byte*)"\xf7\x68\x0a" "isdisjoint")
QDEF(MP_QSTR_isenabled, (const byte*)"\x9a\xe5\x09" "isenabled")
QDEF(MP_QSTR_isfinite, (const byte*)"\xa6\xab\x08" "isfinite")
QDEF(MP_QSTR_isinf, (const byte*)"\x3e\x11\x05" "isinf")
QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\xbe\x0a" "isinstance")
QDEF(MP_QSTR_islower, (const byte*)"\xfc\x80\x07" "islower")
QDEF(MP_QSTR_isnan, (const byte*)"\x9e\x03\x05" "isnan")
QDEF(MP_QSTR_isspace, (const byte*)"\x5b\xf8\x07" "isspace")
QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x7f\x0a" "issubclass")
QDEF(MP_QSTR_issubset, (const byte*)"\xb9\xc1\x08" "issubset")
QDEF(MP_QSTR_issuperset, (const byte*)"\xfc\xec\x0a" "issuperset")
QDEF(MP_QSTR_isupper, (const byte*)"\xdd\xa7\x07" "isupper")
QDEF(MP_QSTR_items, (const byte*)"\xe3\x53\x05" "items")
QDEF(MP_QSTR_iter, (const byte*)"\x8f\x21\x04" "iter")
QDEF(MP_QSTR_iterable, (const byte*)"\x25\x92\x08" "iterable")
QDEF(MP_QSTR_iterator, (const byte*)"\x47\xbe\x08" "iterator")
QDEF(MP_QSTR_join, (const byte*)"\xa7\x5c\x04" "join")
QDEF(MP_QSTR_json, (const byte*)"\xfd\xd1\x04" "json")
QDEF(MP_QSTR_kbd_intr, (const byte*)"\xf6\x13\x08" "kbd_intr")
QDEF(MP_QSTR_keepends, (const byte*)"\x62\x8b\x08" "keepends")
QDEF(MP_QSTR_key, (const byte*)"\x32\x6d\x03" "key")
QDEF(MP_QSTR_keys, (const byte*)"\x01\x13\x04" "keys")
QDEF(MP_QSTR_label, (const byte*)"\x43\xe7\x05" "label")
QDEF(MP_QSTR_ldexp, (const byte*)"\x40\x6f\x05" "ldexp")
QDEF(MP_QSTR_ldr, (const byte*)"\x5f\x40\x03" "ldr")
QDEF(MP_QSTR_ldrb, (const byte*)"\x5d\x4c\x04" "ldrb")
QDEF(MP_QSTR_ldrex, (const byte*)"\xe2\xd7\x05" "ldrex")
QDEF(MP_QSTR_ldrh, (const byte*)"\x57\x4c\x04" "ldrh")
QDEF(MP_QSTR_len, (const byte*)"\x62\x40\x03" "len")
QDEF(MP_QSTR_lgamma, (const byte*)"\xce\x6c\x06" "lgamma")
QDEF(MP_QSTR_list, (const byte*)"\x27\x1d\x04" "list")
QDEF(MP_QSTR_listdir, (const byte*)"\x98\xe3\x07" "listdir")
QDEF(MP_QSTR_little, (const byte*)"\x89\x6a\x06" "little")
QDEF(MP_QSTR_load, (const byte*)"\x63\x24\x04" "load")
QDEF(MP_QSTR_loads, (const byte*)"\xb0\xb0\x05" "loads")
QDEF(MP_QSTR_locals, (const byte*)"\x3b\xa1\x06" "locals")
QDEF(MP_QSTR_localtime, (const byte*)"\x7d\x46\x09" "localtime")
QDEF(MP_QSTR_log, (const byte*)"\x21\x3f\x03" "log")
QDEF(MP_QSTR_log10, (const byte*)"\x40\x91\x05" "log10")
QDEF(MP_QSTR_log2, (const byte*)"\x73\x23\x04" "log2")
QDEF(MP_QSTR_low, (const byte*)"\x31\x3f\x03" "low")
QDEF(MP_QSTR_lower, (const byte*)"\xc6\xcb\x05" "lower")
QDEF(MP_QSTR_lsl, (const byte*)"\xb6\x41\x03" "lsl")
QDEF(MP_QSTR_lsr, (const byte*)"\xa8\x41\x03" "lsr")
QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\xb9\x06" "lstrip")
QDEF(MP_QSTR_machine, (const byte*)"\x60\xab\x07" "machine")
QDEF(MP_QSTR_main, (const byte*)"\xce\xb7\x04" "main")
QDEF(MP_QSTR_map, (const byte*)"\xb9\x43\x03" "map")
QDEF(MP_QSTR_mapper, (const byte*)"\x5e\x05\x06" "mapper")
QDEF(MP_QSTR_match, (const byte*)"\x96\x22\x05" "match")
QDEF(MP_QSTR_math, (const byte*)"\x35\xbb\x04" "math")
QDEF(MP_QSTR_max, (const byte*)"\xb1\x43\x03" "max")
QDEF(MP_QSTR_maxsize, (const byte*)"\xd4\x70\x07" "maxsize")
QDEF(MP_QSTR_mcu, (const byte*)"\x7e\x44\x03" "mcu")
QDEF(MP_QSTR_mem, (const byte*)"\x20\x44\x03" "mem")
QDEF(MP_QSTR_mem16, (const byte*)"\x07\xca\x05" "mem16")
QDEF(MP_QSTR_mem32, (const byte*)"\x41\xca\x05" "mem32")
QDEF(MP_QSTR_mem8, (const byte*)"\x18\xc8\x04" "mem8")
QDEF(MP_QSTR_mem_alloc, (const byte*)"\x52\x2b\x09" "mem_alloc")
QDEF(MP_QSTR_mem_free, (const byte*)"\xcb\x62\x08" "mem_free")
QDEF(MP_QSTR_mem_info, (const byte*)"\xd1\xf1\x08" "mem_info")
QDEF(MP_QSTR_mem_read, (const byte*)"\x8d\xeb\x08" "mem_read")
QDEF(MP_QSTR_mem_write, (const byte*)"\x62\x8c\x09" "mem_write")
QDEF(MP_QSTR_memaddr, (const byte*)"\x93\xe8\x07" "memaddr")
QDEF(MP_QSTR_memoryview, (const byte*)"\x69\x44\x0a" "memoryview")
QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x7c\x0b" "micropython")
QDEF(MP_QSTR_micros, (const byte*)"\xac\x88\x06" "micros")
QDEF(MP_QSTR_millis, (const byte*)"\x5b\x21\x06" "millis")
QDEF(MP_QSTR_min, (const byte*)"\xaf\x42\x03" "min")
QDEF(MP_QSTR_miso, (const byte*)"\x9d\x98\x04" "miso")
QDEF(MP_QSTR_mkdir, (const byte*)"\x9c\xb5\x05" "mkdir")
QDEF(MP_QSTR_mkfs, (const byte*)"\x76\xb0\x04" "mkfs")
QDEF(MP_QSTR_mktime, (const byte*)"\x96\x2b\x06" "mktime")
QDEF(MP_QSTR_mode, (const byte*)"\x26\xc0\x04" "mode")
QDEF(MP_QSTR_modf, (const byte*)"\x25\xc0\x04" "modf")
QDEF(MP_QSTR_modify, (const byte*)"\xf5\x66\x06" "modify")
QDEF(MP_QSTR_module, (const byte*)"\xbf\x99\x06" "module")
QDEF(MP_QSTR_modules, (const byte*)"\xec\xd1\x07" "modules")
QDEF(MP_QSTR_mosi, (const byte*)"\x1d\xc2\x04" "mosi")
QDEF(MP_QSTR_mount, (const byte*)"\xa8\x0d\x05" "mount")
QDEF(MP_QSTR_mov, (const byte*)"\xf1\x43\x03" "mov")
QDEF(MP_QSTR_movt, (const byte*)"\x65\xc2\x04" "movt")
QDEF(MP_QSTR_movw, (const byte*)"\x66\xc2\x04" "movw")
QDEF(MP_QSTR_movwt, (const byte*)"\x52\x0f\x05" "movwt")
QDEF(MP_QSTR_mrs, (const byte*)"\x89\x45\x03" "mrs")
QDEF(MP_QSTR_name, (const byte*)"\xa2\x75\x04" "name")
QDEF(MP_QSTR_namedtuple, (const byte*)"\x1e\x16\x0a" "namedtuple")
QDEF(MP_QSTR_names, (const byte*)"\x91\x29\x05" "names")
QDEF(MP_QSTR_native, (const byte*)"\x84\x0b\x06" "native")
QDEF(MP_QSTR_next, (const byte*)"\x42\x88\x04" "next")
QDEF(MP_QSTR_nodename, (const byte*)"\x62\xab\x08" "nodename")
QDEF(MP_QSTR_nop, (const byte*)"\xb4\x57\x03" "nop")
QDEF(MP_QSTR_nss, (const byte*)"\x2b\x5a\x03" "nss")
QDEF(MP_QSTR_object, (const byte*)"\x90\x8d\x06" "object")
QDEF(MP_QSTR_oct, (const byte*)"\xfd\x5c\x03" "oct")
QDEF(MP_QSTR_off, (const byte*)"\x8a\x5c\x03" "off")
QDEF(MP_QSTR_on, (const byte*)"\x64\x6f\x02" "on")
QDEF(MP_QSTR_open, (const byte*)"\xd1\x3a\x04" "open")
QDEF(MP_QSTR_opt, (const byte*)"\xce\x5e\x03" "opt")
QDEF(MP_QSTR_opt_level, (const byte*)"\x87\x67\x09" "opt_level")
QDEF(MP_QSTR_ord, (const byte*)"\x1c\x5e\x03" "ord")
QDEF(MP_QSTR_os, (const byte*)"\x79\x6f\x02" "os")
QDEF(MP_QSTR_pack, (const byte*)"\xbc\xd1\x04" "pack")
QDEF(MP_QSTR_pack_into, (const byte*)"\x1f\xa9\x09" "pack_into")
QDEF(MP_QSTR_parity, (const byte*)"\x42\x05\x06" "parity")
QDEF(MP_QSTR_partition, (const byte*)"\x87\xe5\x09" "partition")
QDEF(MP_QSTR_path, (const byte*)"\x88\xce\x04" "path")
QDEF(MP_QSTR_pcolor, (const byte*)"\x08\x07\x06" "pcolor")
QDEF(MP_QSTR_peektime, (const byte*)"\x8b\x5c\x08" "peektime")
QDEF(MP_QSTR_phase, (const byte*)"\x6a\xd5\x05" "phase")
QDEF(MP_QSTR_pi, (const byte*)"\x1c\x70\x02" "pi")
QDEF(MP_QSTR_pid, (const byte*)"\xf8\x73\x03" "pid")
QDEF(MP_QSTR_pin, (const byte*)"\xf2\x73\x03" "pin")
QDEF(MP_QSTR_platform, (const byte*)"\x3a\x19\x08" "platform")
QDEF(MP_QSTR_polar, (const byte*)"\x05\x0c\x05" "polar")
QDEF(MP_QSTR_polarity, (const byte*)"\x41\xed\x08" "polarity")
QDEF(MP_QSTR_poll, (const byte*)"\x9a\xd9\x04" "poll")
QDEF(MP_QSTR_pop, (const byte*)"\x2a\x73\x03" "pop")
QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x2c\x07" "popitem")
QDEF(MP_QSTR_port, (const byte*)"\x5c\xd8\x04" "port")
QDEF(MP_QSTR_pow, (const byte*)"\x2d\x73\x03" "pow")
QDEF(MP_QSTR_power, (const byte*)"\xda\xed\x05" "power")
QDEF(MP_QSTR_prescaler, (const byte*)"\x28\x15\x09" "prescaler")
QDEF(MP_QSTR_present, (const byte*)"\xee\x18\x07" "present")
QDEF(MP_QSTR_print, (const byte*)"\x54\xc6\x05" "print")
QDEF(MP_QSTR_print_exception, (const byte*)"\x1c\x22\x0f" "print_exception")
QDEF(MP_QSTR_property, (const byte*)"\xc2\x29\x08" "property")
QDEF(MP_QSTR_ptr, (const byte*)"\x53\x70\x03" "ptr")
QDEF(MP_QSTR_ptr16, (const byte*)"\xf4\xca\x05" "ptr16")
QDEF(MP_QSTR_ptr32, (const byte*)"\xb2\xca\x05" "ptr32")
QDEF(MP_QSTR_ptr8, (const byte*)"\x8b\x7a\x04" "ptr8")
QDEF(MP_QSTR_pull, (const byte*)"\x80\x7d\x04" "pull")
QDEF(MP_QSTR_push, (const byte*)"\xbb\x7e\x04" "push")
QDEF(MP_QSTR_put_box, (const byte*)"\xde\x1e\x07" "put_box")
QDEF(MP_QSTR_put_char, (const byte*)"\xf3\x2d\x08" "put_char")
QDEF(MP_QSTR_put_circle, (const byte*)"\x59\x5d\x0a" "put_circle")
QDEF(MP_QSTR_put_diamond, (const byte*)"\x6f\x72\x0b" "put_diamond")
QDEF(MP_QSTR_put_line, (const byte*)"\xe5\xd6\x08" "put_line")
QDEF(MP_QSTR_put_ltext, (const byte*)"\xfa\xe0\x09" "put_ltext")
QDEF(MP_QSTR_put_newline, (const byte*)"\x59\x8c\x0b" "put_newline")
QDEF(MP_QSTR_put_pixel, (const byte*)"\xe3\xe0\x09" "put_pixel")
QDEF(MP_QSTR_put_pixel_physical, (const byte*)"\xa9\x52\x12" "put_pixel_physical")
QDEF(MP_QSTR_put_text, (const byte*)"\x36\xcb\x08" "put_text")
QDEF(MP_QSTR_put_text_xy, (const byte*)"\xa8\x3c\x0b" "put_text_xy")
QDEF(MP_QSTR_pyb, (const byte*)"\xee\x71\x03" "pyb")
QDEF(MP_QSTR_qstr_info, (const byte*)"\xb0\x81\x09" "qstr_info")
QDEF(MP_QSTR_r, (const byte*)"\xd7\xb5\x01" "r")
QDEF(MP_QSTR_radians, (const byte*)"\x87\x3f\x07" "radians")
QDEF(MP_QSTR_randint, (const byte*)"\xaf\xdc\x07" "randint")
QDEF(MP_QSTR_random, (const byte*)"\xbe\x2c\x06" "random")
QDEF(MP_QSTR_randrange, (const byte*)"\xa3\x3e\x09" "randrange")
QDEF(MP_QSTR_range, (const byte*)"\x1a\x5e\x05" "range")
QDEF(MP_QSTR_rbit, (const byte*)"\xe8\xee\x04" "rbit")
QDEF(MP_QSTR_re, (const byte*)"\xd2\x70\x02" "re")
QDEF(MP_QSTR_read, (const byte*)"\xb7\xf9\x04" "read")
QDEF(MP_QSTR_read_buf_len, (const byte*)"\xa1\x09\x0c" "read_buf_len")
QDEF(MP_QSTR_readblocks, (const byte*)"\x2d\x1c\x0a" "readblocks")
QDEF(MP_QSTR_readchar, (const byte*)"\xef\x92\x08" "readchar")
QDEF(MP_QSTR_readfrom, (const byte*)"\x41\xb1\x08" "readfrom")
QDEF(MP_QSTR_readfrom_into, (const byte*)"\x82\x3f\x0d" "readfrom_into")
QDEF(MP_QSTR_readfrom_mem, (const byte*)"\x3b\x65\x0c" "readfrom_mem")
QDEF(MP_QSTR_readfrom_mem_into, (const byte*)"\x38\x8e\x11" "readfrom_mem_into")
QDEF(MP_QSTR_readinto, (const byte*)"\x4b\xbf\x08" "readinto")
QDEF(MP_QSTR_readline, (const byte*)"\xf9\x19\x08" "readline")
QDEF(MP_QSTR_readlines, (const byte*)"\x6a\x59\x09" "readlines")
QDEF(MP_QSTR_readonly, (const byte*)"\x03\x89\x08" "readonly")
QDEF(MP_QSTR_real, (const byte*)"\xbf\xf9\x04" "real")
QDEF(MP_QSTR_rect, (const byte*)"\xe5\xf9\x04" "rect")
QDEF(MP_QSTR_recv, (const byte*)"\xe7\xf9\x04" "recv")
QDEF(MP_QSTR_reg, (const byte*)"\x75\x8b\x03" "reg")
QDEF(MP_QSTR_register, (const byte*)"\xac\xa1\x08" "register")
QDEF(MP_QSTR_release, (const byte*)"\xec\x8f\x07" "release")
QDEF(MP_QSTR_remove, (const byte*)"\x63\x8a\x06" "remove")
QDEF(MP_QSTR_rename, (const byte*)"\x35\x18\x06" "rename")
QDEF(MP_QSTR_repl_info, (const byte*)"\xbf\x37\x09" "repl_info")
QDEF(MP_QSTR_repl_uart, (const byte*)"\x23\x58\x09" "repl_uart")
QDEF(MP_QSTR_replace, (const byte*)"\x49\x25\x07" "replace")
QDEF(MP_QSTR_repr, (const byte*)"\xd0\xf7\x04" "repr")
QDEF(MP_QSTR_reset, (const byte*)"\x10\xf4\x05" "reset")
QDEF(MP_QSTR_reset_cause, (const byte*)"\xce\x2f\x0b" "reset_cause")
QDEF(MP_QSTR_reverse, (const byte*)"\x25\x2a\x07" "reverse")
QDEF(MP_QSTR_reversed, (const byte*)"\xa1\x6e\x08" "reversed")
QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x9c\x05" "rfind")
QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x2b\x06" "rindex")
QDEF(MP_QSTR_rmdir, (const byte*)"\x45\xa7\x05" "rmdir")
QDEF(MP_QSTR_round, (const byte*)"\xe7\x25\x05" "round")
QDEF(MP_QSTR_rpartition, (const byte*)"\x15\xd0\x0a" "rpartition")
QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x00\x06" "rsplit")
QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x95\x06" "rstrip")
QDEF(MP_QSTR_scale_a, (const byte*)"\xe3\xa9\x07" "scale_a")
QDEF(MP_QSTR_scale_g, (const byte*)"\xe5\xa9\x07" "scale_g")
QDEF(MP_QSTR_scale_m, (const byte*)"\xef\xa9\x07" "scale_m")
QDEF(MP_QSTR_scan, (const byte*)"\x1a\x8e\x04" "scan")
QDEF(MP_QSTR_schedule, (const byte*)"\xe0\xac\x08" "schedule")
QDEF(MP_QSTR_sck, (const byte*)"\xfe\x8f\x03" "sck")
QDEF(MP_QSTR_scl, (const byte*)"\xf9\x8f\x03" "scl")
QDEF(MP_QSTR_sda, (const byte*)"\x53\x8f\x03" "sda")
QDEF(MP_QSTR_sdiv, (const byte*)"\xcd\x7a\x04" "sdiv")
QDEF(MP_QSTR_search, (const byte*)"\xab\xc1\x06" "search")
QDEF(MP_QSTR_seed, (const byte*)"\x92\x75\x04" "seed")
QDEF(MP_QSTR_seek, (const byte*)"\x9d\x75\x04" "seek")
QDEF(MP_QSTR_select, (const byte*)"\x8d\x41\x06" "select")
QDEF(MP_QSTR_send, (const byte*)"\xb9\x76\x04" "send")
QDEF(MP_QSTR_send_recv, (const byte*)"\xa4\x30\x09" "send_recv")
QDEF(MP_QSTR_sendbreak, (const byte*)"\xc6\x11\x09" "sendbreak")
QDEF(MP_QSTR_sep, (const byte*)"\x23\x8f\x03" "sep")
QDEF(MP_QSTR_set, (const byte*)"\x27\x8f\x03" "set")
QDEF(MP_QSTR_set_bkg_color, (const byte*)"\x14\x4b\x0d" "set_bkg_color")
QDEF(MP_QSTR_set_fill_color, (const byte*)"\xd5\x63\x0e" "set_fill_color")
QDEF(MP_QSTR_set_font, (const byte*)"\xcb\xd4\x08" "set_font")
QDEF(MP_QSTR_set_font_trasparency, (const byte*)"\xd2\x4c\x14" "set_font_trasparency")
QDEF(MP_QSTR_set_pen_color, (const byte*)"\x41\x6d\x0d" "set_pen_color")
QDEF(MP_QSTR_set_title, (const byte*)"\x98\x0a\x09" "set_title")
QDEF(MP_QSTR_set_xy, (const byte*)"\x59\xe3\x06" "set_xy")
QDEF(MP_QSTR_setattr, (const byte*)"\xd4\xa8\x07" "setattr")
QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\xa3\x0a" "setdefault")
QDEF(MP_QSTR_setinterrupt, (const byte*)"\xc0\x8b\x0c" "setinterrupt")
QDEF(MP_QSTR_setter, (const byte*)"\x04\x59\x06" "setter")
QDEF(MP_QSTR_sha256, (const byte*)"\x2e\x01\x06" "sha256")
QDEF(MP_QSTR_sin, (const byte*)"\xb1\x90\x03" "sin")
QDEF(MP_QSTR_single, (const byte*)"\x3f\x20\x06" "single")
QDEF(MP_QSTR_sinh, (const byte*)"\xb9\xa6\x04" "sinh")
QDEF(MP_QSTR_sizeof, (const byte*)"\x49\x73\x06" "sizeof")
QDEF(MP_QSTR_sleep, (const byte*)"\xea\x27\x05" "sleep")
QDEF(MP_QSTR_sleep_ms, (const byte*)"\x0b\x63\x08" "sleep_ms")
QDEF(MP_QSTR_sleep_us, (const byte*)"\x13\x60\x08" "sleep_us")
QDEF(MP_QSTR_slice, (const byte*)"\xb5\xf4\x05" "slice")
QDEF(MP_QSTR_soft_reset, (const byte*)"\xe1\x65\x0a" "soft_reset")
QDEF(MP_QSTR_sort, (const byte*)"\xbf\x9d\x04" "sort")
QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x15\x06" "sorted")
QDEF(MP_QSTR_split, (const byte*)"\xb7\x33\x05" "split")
QDEF(MP_QSTR_splitlines, (const byte*)"\x6a\xd3\x0a" "splitlines")
QDEF(MP_QSTR_sqrt, (const byte*)"\x21\x44\x04" "sqrt")
QDEF(MP_QSTR_stack_use, (const byte*)"\x97\xf7\x09" "stack_use")
QDEF(MP_QSTR_standby, (const byte*)"\xd2\xd9\x07" "standby")
QDEF(MP_QSTR_start, (const byte*)"\x85\xef\x05" "start")
QDEF(MP_QSTR_startswith, (const byte*)"\x74\xe8\x0a" "startswith")
QDEF(MP_QSTR_stat, (const byte*)"\xd7\x35\x04" "stat")
QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\xaf\x0c" "staticmethod")
QDEF(MP_QSTR_statvfs, (const byte*)"\x14\x19\x07" "statvfs")
QDEF(MP_QSTR_stderr, (const byte*)"\xa3\x58\x06" "stderr")
QDEF(MP_QSTR_stdin, (const byte*)"\x21\x04\x05" "stdin")
QDEF(MP_QSTR_stdout, (const byte*)"\x08\x83\x06" "stdout")
QDEF(MP_QSTR_step, (const byte*)"\x57\x36\x04" "step")
QDEF(MP_QSTR_stm, (const byte*)"\x4f\x8d\x03" "stm")
QDEF(MP_QSTR_stop, (const byte*)"\x9d\x36\x04" "stop")
QDEF(MP_QSTR_str, (const byte*)"\x50\x8d\x03" "str")
QDEF(MP_QSTR_strb, (const byte*)"\x32\x37\x04" "strb")
QDEF(MP_QSTR_strex, (const byte*)"\xad\x1d\x05" "strex")
QDEF(MP_QSTR_strh, (const byte*)"\x38\x37\x04" "strh")
QDEF(MP_QSTR_strip, (const byte*)"\x29\x1e\x05" "strip")
QDEF(MP_QSTR_struct, (const byte*)"\x12\x90\x06" "struct")
QDEF(MP_QSTR_sub, (const byte*)"\x21\x8d\x03" "sub")
QDEF(MP_QSTR_sum, (const byte*)"\x2e\x8d\x03" "sum")
QDEF(MP_QSTR_super, (const byte*)"\xc4\xb2\x05" "super")
QDEF(MP_QSTR_symmetric_difference, (const byte*)"\xce\x67\x14" "symmetric_difference")
QDEF(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\xf8\x1b" "symmetric_difference_update")
QDEF(MP_QSTR_sync, (const byte*)"\xa2\x62\x04" "sync")
QDEF(MP_QSTR_sys, (const byte*)"\xbc\x8e\x03" "sys")
QDEF(MP_QSTR_sysname, (const byte*)"\x9b\x36\x07" "sysname")
QDEF(MP_QSTR_tan, (const byte*)"\xfe\x61\x03" "tan")
QDEF(MP_QSTR_tanh, (const byte*)"\xd6\xa1\x04" "tanh")
QDEF(MP_QSTR_tell, (const byte*)"\x14\xb1\x04" "tell")
QDEF(MP_QSTR_threshold, (const byte*)"\xf2\x2f\x09" "threshold")
QDEF(MP_QSTR_throw, (const byte*)"\xb3\x44\x05" "throw")
QDEF(MP_QSTR_ti, (const byte*)"\x98\x6f\x02" "ti")
QDEF(MP_QSTR_ticks_add, (const byte*)"\x9d\xae\x09" "ticks_add")
QDEF(MP_QSTR_ticks_cpu, (const byte*)"\x1a\xa5\x09" "ticks_cpu")
QDEF(MP_QSTR_ticks_diff, (const byte*)"\xb1\xe0\x0a" "ticks_diff")
QDEF(MP_QSTR_ticks_ms, (const byte*)"\x42\x32\x08" "ticks_ms")
QDEF(MP_QSTR_ticks_us, (const byte*)"\x5a\x31\x08" "ticks_us")
QDEF(MP_QSTR_time, (const byte*)"\xf0\xc1\x04" "time")
QDEF(MP_QSTR_timeout, (const byte*)"\x3e\x54\x07" "timeout")
QDEF(MP_QSTR_timeout_char, (const byte*)"\x79\x4a\x0c" "timeout_char")
QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x3e\x08" "to_bytes")
QDEF(MP_QSTR_toggle, (const byte*)"\xb7\x43\x06" "toggle")
QDEF(MP_QSTR_trunc, (const byte*)"\x5b\x99\x05" "trunc")
QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x41\x05" "tuple")
QDEF(MP_QSTR_type, (const byte*)"\x9d\x7f\x04" "type")
QDEF(MP_QSTR_ubinascii, (const byte*)"\xc4\x88\x09" "ubinascii")
QDEF(MP_QSTR_ucollections, (const byte*)"\x15\x9a\x0c" "ucollections")
QDEF(MP_QSTR_uctypes, (const byte*)"\xf8\x71\x07" "uctypes")
QDEF(MP_QSTR_udelay, (const byte*)"\x25\xaf\x06" "udelay")
QDEF(MP_QSTR_udiv, (const byte*)"\x8b\x31\x04" "udiv")
QDEF(MP_QSTR_uerrno, (const byte*)"\xb4\xe9\x06" "uerrno")
QDEF(MP_QSTR_uhashlib, (const byte*)"\x65\x9d\x08" "uhashlib")
QDEF(MP_QSTR_uheapq, (const byte*)"\x1d\x43\x06" "uheapq")
QDEF(MP_QSTR_uint, (const byte*)"\xe3\x3d\x04" "uint")
QDEF(MP_QSTR_uio, (const byte*)"\xb6\x66\x03" "uio")
QDEF(MP_QSTR_ujson, (const byte*)"\xe8\x30\x05" "ujson")
QDEF(MP_QSTR_umachine, (const byte*)"\x95\x7f\x08" "umachine")
QDEF(MP_QSTR_umount, (const byte*)"\xdd\x9e\x06" "umount")
QDEF(MP_QSTR_uname, (const byte*)"\xb7\x9c\x05" "uname")
QDEF(MP_QSTR_unhexlify, (const byte*)"\xb1\xb9\x09" "unhexlify")
QDEF(MP_QSTR_uniform, (const byte*)"\x01\xf5\x07" "uniform")
QDEF(MP_QSTR_union, (const byte*)"\xf6\x7c\x05" "union")
QDEF(MP_QSTR_unique_id, (const byte*)"\x04\x89\x09" "unique_id")
QDEF(MP_QSTR_unlink, (const byte*)"\xfe\x8f\x06" "unlink")
QDEF(MP_QSTR_unpack, (const byte*)"\x07\x3c\x06" "unpack")
QDEF(MP_QSTR_unpack_from, (const byte*)"\x0e\x6d\x0b" "unpack_from")
QDEF(MP_QSTR_unregister, (const byte*)"\x17\xd4\x0a" "unregister")
QDEF(MP_QSTR_uos, (const byte*)"\xec\x67\x03" "uos")
QDEF(MP_QSTR_update, (const byte*)"\xb4\x76\x06" "update")
QDEF(MP_QSTR_update_display, (const byte*)"\xf1\x72\x0e" "update_display")
QDEF(MP_QSTR_upper, (const byte*)"\x27\x94\x05" "upper")
QDEF(MP_QSTR_urandom, (const byte*)"\xab\xae\x07" "urandom")
QDEF(MP_QSTR_ure, (const byte*)"\x87\x63\x03" "ure")
QDEF(MP_QSTR_usb_mode, (const byte*)"\xbd\x6d\x08" "usb_mode")
QDEF(MP_QSTR_uselect, (const byte*)"\x58\x8e\x07" "uselect")
QDEF(MP_QSTR_ustruct, (const byte*)"\x47\x08\x07" "ustruct")
QDEF(MP_QSTR_utime, (const byte*)"\xe5\x9d\x05" "utime")
QDEF(MP_QSTR_utimeq, (const byte*)"\xf4\x5a\x06" "utimeq")
QDEF(MP_QSTR_uzlib, (const byte*)"\x6d\x9b\x05" "uzlib")
QDEF(MP_QSTR_value, (const byte*)"\x4e\x34\x05" "value")
QDEF(MP_QSTR_values, (const byte*)"\x7d\xbe\x06" "values")
QDEF(MP_QSTR_vcmp, (const byte*)"\xad\xc1\x04" "vcmp")
QDEF(MP_QSTR_vcvt_f32_s32, (const byte*)"\x47\xc9\x0c" "vcvt_f32_s32")
QDEF(MP_QSTR_vcvt_s32_f32, (const byte*)"\x07\x33\x0c" "vcvt_s32_f32")
QDEF(MP_QSTR_version, (const byte*)"\xbf\xd3\x07" "version")
QDEF(MP_QSTR_version_info, (const byte*)"\x6e\x0a\x0c" "version_info")
QDEF(MP_QSTR_vid, (const byte*)"\xfe\x7b\x03" "vid")
QDEF(MP_QSTR_viper, (const byte*)"\x5d\x23\x05" "viper")
QDEF(MP_QSTR_vldr, (const byte*)"\xc9\x07\x04" "vldr")
QDEF(MP_QSTR_vmov, (const byte*)"\xe7\x0a\x04" "vmov")
QDEF(MP_QSTR_vmrs, (const byte*)"\x9f\x09\x04" "vmrs")
QDEF(MP_QSTR_vneg, (const byte*)"\xff\xee\x04" "vneg")
QDEF(MP_QSTR_vsqrt, (const byte*)"\xf7\x42\x05" "vsqrt")
QDEF(MP_QSTR_vstr, (const byte*)"\xc6\x7e\x04" "vstr")
QDEF(MP_QSTR_wfi, (const byte*)"\x9d\x7e\x03" "wfi")
QDEF(MP_QSTR_window_close, (const byte*)"\x60\xc9\x0c" "window_close")
QDEF(MP_QSTR_window_open, (const byte*)"\x22\x19\x0b" "window_open")
QDEF(MP_QSTR_window_scroll, (const byte*)"\xdb\xa9\x0d" "window_scroll")
QDEF(MP_QSTR_write, (const byte*)"\x98\xa8\x05" "write")
QDEF(MP_QSTR_write_readinto, (const byte*)"\x89\x84\x0e" "write_readinto")
QDEF(MP_QSTR_writeblocks, (const byte*)"\x02\xdf\x0b" "writeblocks")
QDEF(MP_QSTR_writechar, (const byte*)"\x40\xe0\x09" "writechar")
QDEF(MP_QSTR_writeto, (const byte*)"\x03\x39\x07" "writeto")
QDEF(MP_QSTR_writeto_mem, (const byte*)"\x79\xed\x0b" "writeto_mem")
QDEF(MP_QSTR_xwin_max, (const byte*)"\x86\x26\x08" "xwin_max")
QDEF(MP_QSTR_xwin_min, (const byte*)"\x98\x25\x08" "xwin_min")
QDEF(MP_QSTR_ywin_max, (const byte*)"\x67\x8a\x08" "ywin_max")
QDEF(MP_QSTR_ywin_min, (const byte*)"\x79\x89\x08" "ywin_min")
QDEF(MP_QSTR_zip, (const byte*)"\xe6\xac\x03" "zip")
QDEF(MP_QSTR_zlib, (const byte*)"\xf8\x37\x04" "zlib")
