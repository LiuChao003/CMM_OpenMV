// This file was automatically generated by makeqstrdata.py

QDEF(MP_QSTRnull, (const byte*)"\x00\x00\x00" "")
QDEF(MP_QSTR_, (const byte*)"\x05\x15\x00" "")
QDEF(MP_QSTR___dir__, (const byte*)"\x7a\x8f\x07" "__dir__")
QDEF(MP_QSTR__0x0a_, (const byte*)"\xaf\xb5\x01" "\x0a")
QDEF(MP_QSTR__space_, (const byte*)"\x85\xb5\x01" " ")
QDEF(MP_QSTR__star_, (const byte*)"\x8f\xb5\x01" "*")
QDEF(MP_QSTR__slash_, (const byte*)"\x8a\xb5\x01" "/")
QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x94\x08" "<module>")
QDEF(MP_QSTR__, (const byte*)"\xfa\xb5\x01" "_")
QDEF(MP_QSTR___call__, (const byte*)"\xa7\xf9\x08" "__call__")
QDEF(MP_QSTR___class__, (const byte*)"\x2b\xc5\x09" "__class__")
QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x35\x0b" "__delitem__")
QDEF(MP_QSTR___doc__, (const byte*)"\x2d\xac\x07" "__doc__")
QDEF(MP_QSTR___enter__, (const byte*)"\x6d\xba\x09" "__enter__")
QDEF(MP_QSTR___exit__, (const byte*)"\x45\xf8\x08" "__exit__")
QDEF(MP_QSTR___getattr__, (const byte*)"\x40\xf8\x0b" "__getattr__")
QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x39\x0b" "__getitem__")
QDEF(MP_QSTR___hash__, (const byte*)"\xf7\xc8\x08" "__hash__")
QDEF(MP_QSTR___init__, (const byte*)"\x5f\xa5\x08" "__init__")
QDEF(MP_QSTR___int__, (const byte*)"\x16\x1b\x07" "__int__")
QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x32\x08" "__iter__")
QDEF(MP_QSTR___len__, (const byte*)"\xe2\xb0\x07" "__len__")
QDEF(MP_QSTR___main__, (const byte*)"\x8e\x13\x08" "__main__")
QDEF(MP_QSTR___module__, (const byte*)"\xff\x30\x0a" "__module__")
QDEF(MP_QSTR___name__, (const byte*)"\xe2\x38\x08" "__name__")
QDEF(MP_QSTR___new__, (const byte*)"\x79\x15\x07" "__new__")
QDEF(MP_QSTR___next__, (const byte*)"\x02\x73\x08" "__next__")
QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x00\x0c" "__qualname__")
QDEF(MP_QSTR___repr__, (const byte*)"\x10\x0b\x08" "__repr__")
QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x3e\x0b" "__setitem__")
QDEF(MP_QSTR___str__, (const byte*)"\xd0\xcd\x07" "__str__")
QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x8c\x0f" "ArithmeticError")
QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x5a\x0e" "AssertionError")
QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\xde\x0e" "AttributeError")
QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x92\x0d" "BaseException")
QDEF(MP_QSTR_EOFError, (const byte*)"\x91\xbf\x08" "EOFError")
QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\xe0\x08" "Ellipsis")
QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x29\x09" "Exception")
QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x62\x0d" "GeneratorExit")
QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x9c\x0b" "ImportError")
QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x20\x10" "IndentationError")
QDEF(MP_QSTR_IndexError, (const byte*)"\x83\xad\x0a" "IndexError")
QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x00\x08" "KeyError")
QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\xe2\x11" "KeyboardInterrupt")
QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x69\x0b" "LookupError")
QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x83\x0b" "MemoryError")
QDEF(MP_QSTR_NameError, (const byte*)"\xba\x2d\x09" "NameError")
QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x68\x08" "NoneType")
QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x98\x13" "NotImplementedError")
QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x65\x07" "OSError")
QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\xe1\x0d" "OverflowError")
QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\xf1\x0c" "RuntimeError")
QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x1c\x0d" "StopIteration")
QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x8f\x0b" "SyntaxError")
QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\xff\x0a" "SystemExit")
QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x96\x09" "TypeError")
QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x87\x0a" "ValueError")
QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x27\x11" "ZeroDivisionError")
QDEF(MP_QSTR_abs, (const byte*)"\x95\x32\x03" "abs")
QDEF(MP_QSTR_all, (const byte*)"\x44\x33\x03" "all")
QDEF(MP_QSTR_any, (const byte*)"\x13\x33\x03" "any")
QDEF(MP_QSTR_append, (const byte*)"\x6b\x97\x06" "append")
QDEF(MP_QSTR_args, (const byte*)"\xc2\xc6\x04" "args")
QDEF(MP_QSTR_bool, (const byte*)"\xeb\x3c\x04" "bool")
QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x31\x08" "builtins")
QDEF(MP_QSTR_bytearray, (const byte*)"\x76\xa3\x09" "bytearray")
QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x7d\x08" "bytecode")
QDEF(MP_QSTR_bytes, (const byte*)"\x5c\xb2\x05" "bytes")
QDEF(MP_QSTR_callable, (const byte*)"\x0d\x70\x08" "callable")
QDEF(MP_QSTR_chr, (const byte*)"\xdc\x4c\x03" "chr")
QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x8c\x0b" "classmethod")
QDEF(MP_QSTR_clear, (const byte*)"\x7c\xa0\x05" "clear")
QDEF(MP_QSTR_close, (const byte*)"\x33\x67\x05" "close")
QDEF(MP_QSTR_const, (const byte*)"\xc0\xff\x05" "const")
QDEF(MP_QSTR_copy, (const byte*)"\xe0\xdb\x04" "copy")
QDEF(MP_QSTR_count, (const byte*)"\xa6\x4d\x05" "count")
QDEF(MP_QSTR_dict, (const byte*)"\x3f\xfc\x04" "dict")
QDEF(MP_QSTR_dir, (const byte*)"\xfa\x1e\x03" "dir")
QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x04\x06" "divmod")
QDEF(MP_QSTR_end, (const byte*)"\x0a\x23\x03" "end")
QDEF(MP_QSTR_endswith, (const byte*)"\x1b\xa3\x08" "endswith")
QDEF(MP_QSTR_eval, (const byte*)"\x9b\xa6\x04" "eval")
QDEF(MP_QSTR_exec, (const byte*)"\x1e\xc0\x04" "exec")
QDEF(MP_QSTR_extend, (const byte*)"\x63\xe8\x06" "extend")
QDEF(MP_QSTR_find, (const byte*)"\x00\x34\x04" "find")
QDEF(MP_QSTR_format, (const byte*)"\x26\x33\x06" "format")
QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x74\x0a" "from_bytes")
QDEF(MP_QSTR_get, (const byte*)"\x33\x3b\x03" "get")
QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x17\x07" "getattr")
QDEF(MP_QSTR_globals, (const byte*)"\x9d\x49\x07" "globals")
QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\xb0\x07" "hasattr")
QDEF(MP_QSTR_hash, (const byte*)"\xb7\x70\x04" "hash")
QDEF(MP_QSTR_id, (const byte*)"\x28\x6f\x02" "id")
QDEF(MP_QSTR_index, (const byte*)"\x7b\x28\x05" "index")
QDEF(MP_QSTR_insert, (const byte*)"\x12\x54\x06" "insert")
QDEF(MP_QSTR_int, (const byte*)"\x16\x53\x03" "int")
QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x37\x07" "isalpha")
QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x9a\x07" "isdigit")
QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\xbe\x0a" "isinstance")
QDEF(MP_QSTR_islower, (const byte*)"\xfc\x80\x07" "islower")
QDEF(MP_QSTR_isspace, (const byte*)"\x5b\xf8\x07" "isspace")
QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x7f\x0a" "issubclass")
QDEF(MP_QSTR_isupper, (const byte*)"\xdd\xa7\x07" "isupper")
QDEF(MP_QSTR_items, (const byte*)"\xe3\x53\x05" "items")
QDEF(MP_QSTR_iter, (const byte*)"\x8f\x21\x04" "iter")
QDEF(MP_QSTR_join, (const byte*)"\xa7\x5c\x04" "join")
QDEF(MP_QSTR_key, (const byte*)"\x32\x6d\x03" "key")
QDEF(MP_QSTR_keys, (const byte*)"\x01\x13\x04" "keys")
QDEF(MP_QSTR_len, (const byte*)"\x62\x40\x03" "len")
QDEF(MP_QSTR_list, (const byte*)"\x27\x1d\x04" "list")
QDEF(MP_QSTR_little, (const byte*)"\x89\x6a\x06" "little")
QDEF(MP_QSTR_locals, (const byte*)"\x3b\xa1\x06" "locals")
QDEF(MP_QSTR_lower, (const byte*)"\xc6\xcb\x05" "lower")
QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\xb9\x06" "lstrip")
QDEF(MP_QSTR_main, (const byte*)"\xce\xb7\x04" "main")
QDEF(MP_QSTR_map, (const byte*)"\xb9\x43\x03" "map")
QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x7c\x0b" "micropython")
QDEF(MP_QSTR_next, (const byte*)"\x42\x88\x04" "next")
QDEF(MP_QSTR_object, (const byte*)"\x90\x8d\x06" "object")
QDEF(MP_QSTR_open, (const byte*)"\xd1\x3a\x04" "open")
QDEF(MP_QSTR_ord, (const byte*)"\x1c\x5e\x03" "ord")
QDEF(MP_QSTR_pop, (const byte*)"\x2a\x73\x03" "pop")
QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x2c\x07" "popitem")
QDEF(MP_QSTR_pow, (const byte*)"\x2d\x73\x03" "pow")
QDEF(MP_QSTR_print, (const byte*)"\x54\xc6\x05" "print")
QDEF(MP_QSTR_range, (const byte*)"\x1a\x5e\x05" "range")
QDEF(MP_QSTR_read, (const byte*)"\xb7\xf9\x04" "read")
QDEF(MP_QSTR_readinto, (const byte*)"\x4b\xbf\x08" "readinto")
QDEF(MP_QSTR_readline, (const byte*)"\xf9\x19\x08" "readline")
QDEF(MP_QSTR_remove, (const byte*)"\x63\x8a\x06" "remove")
QDEF(MP_QSTR_replace, (const byte*)"\x49\x25\x07" "replace")
QDEF(MP_QSTR_repr, (const byte*)"\xd0\xf7\x04" "repr")
QDEF(MP_QSTR_reverse, (const byte*)"\x25\x2a\x07" "reverse")
QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x9c\x05" "rfind")
QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x2b\x06" "rindex")
QDEF(MP_QSTR_round, (const byte*)"\xe7\x25\x05" "round")
QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x00\x06" "rsplit")
QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x95\x06" "rstrip")
QDEF(MP_QSTR_self, (const byte*)"\x79\x77\x04" "self")
QDEF(MP_QSTR_send, (const byte*)"\xb9\x76\x04" "send")
QDEF(MP_QSTR_sep, (const byte*)"\x23\x8f\x03" "sep")
QDEF(MP_QSTR_set, (const byte*)"\x27\x8f\x03" "set")
QDEF(MP_QSTR_setattr, (const byte*)"\xd4\xa8\x07" "setattr")
QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\xa3\x0a" "setdefault")
QDEF(MP_QSTR_sort, (const byte*)"\xbf\x9d\x04" "sort")
QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x15\x06" "sorted")
QDEF(MP_QSTR_split, (const byte*)"\xb7\x33\x05" "split")
QDEF(MP_QSTR_start, (const byte*)"\x85\xef\x05" "start")
QDEF(MP_QSTR_startswith, (const byte*)"\x74\xe8\x0a" "startswith")
QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\xaf\x0c" "staticmethod")
QDEF(MP_QSTR_step, (const byte*)"\x57\x36\x04" "step")
QDEF(MP_QSTR_stop, (const byte*)"\x9d\x36\x04" "stop")
QDEF(MP_QSTR_str, (const byte*)"\x50\x8d\x03" "str")
QDEF(MP_QSTR_strip, (const byte*)"\x29\x1e\x05" "strip")
QDEF(MP_QSTR_sum, (const byte*)"\x2e\x8d\x03" "sum")
QDEF(MP_QSTR_super, (const byte*)"\xc4\xb2\x05" "super")
QDEF(MP_QSTR_throw, (const byte*)"\xb3\x44\x05" "throw")
QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x3e\x08" "to_bytes")
QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x41\x05" "tuple")
QDEF(MP_QSTR_type, (const byte*)"\x9d\x7f\x04" "type")
QDEF(MP_QSTR_update, (const byte*)"\xb4\x76\x06" "update")
QDEF(MP_QSTR_upper, (const byte*)"\x27\x94\x05" "upper")
QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x82\x05" "utf-8")
QDEF(MP_QSTR_value, (const byte*)"\x4e\x34\x05" "value")
QDEF(MP_QSTR_values, (const byte*)"\x7d\xbe\x06" "values")
QDEF(MP_QSTR_write, (const byte*)"\x98\xa8\x05" "write")
QDEF(MP_QSTR_zip, (const byte*)"\xe6\xac\x03" "zip")
QDEF(MP_QSTR___write_reg, (const byte*)"\xd7\xa5\x0b" "__write_reg")
QDEF(MP_QSTR___read_reg, (const byte*)"\x38\xbc\x0a" "__read_reg")
QDEF(MP_QSTR___abs__, (const byte*)"\x95\xd6\x07" "__abs__")
QDEF(MP_QSTR___add__, (const byte*)"\xc4\x82\x07" "__add__")
QDEF(MP_QSTR___aenter__, (const byte*)"\x4c\x84\x0a" "__aenter__")
QDEF(MP_QSTR___aexit__, (const byte*)"\xc4\xcf\x09" "__aexit__")
QDEF(MP_QSTR___aiter__, (const byte*)"\x4e\x2b\x09" "__aiter__")
QDEF(MP_QSTR___and__, (const byte*)"\x0e\xdb\x07" "__and__")
QDEF(MP_QSTR___anext__, (const byte*)"\x83\xb4\x09" "__anext__")
QDEF(MP_QSTR___bases__, (const byte*)"\x03\x30\x09" "__bases__")
QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x65\x08" "__bool__")
QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x88\x0f" "__build_class__")
QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x5f\x0c" "__contains__")
QDEF(MP_QSTR___del__, (const byte*)"\x68\x37\x07" "__del__")
QDEF(MP_QSTR___dict__, (const byte*)"\x7f\x54\x08" "__dict__")
QDEF(MP_QSTR___divmod__, (const byte*)"\x78\x11\x0a" "__divmod__")
QDEF(MP_QSTR___eq__, (const byte*)"\x71\x3e\x06" "__eq__")
QDEF(MP_QSTR___file__, (const byte*)"\x03\x54\x08" "__file__")
QDEF(MP_QSTR___floordiv__, (const byte*)"\x46\x5f\x0c" "__floordiv__")
QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x46\x06" "__ge__")
QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x82\x06" "__gt__")
QDEF(MP_QSTR___iadd__, (const byte*)"\x6d\x4a\x08" "__iadd__")
QDEF(MP_QSTR___import__, (const byte*)"\x38\x3e\x0a" "__import__")
QDEF(MP_QSTR___invert__, (const byte*)"\xf7\x77\x0a" "__invert__")
QDEF(MP_QSTR___isub__, (const byte*)"\x08\x78\x08" "__isub__")
QDEF(MP_QSTR___le__, (const byte*)"\xcc\x13\x06" "__le__")
QDEF(MP_QSTR___lshift__, (const byte*)"\x09\x88\x0a" "__lshift__")
QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x68\x06" "__lt__")
QDEF(MP_QSTR___matmul__, (const byte*)"\x49\xf3\x0a" "__matmul__")
QDEF(MP_QSTR___mod__, (const byte*)"\x63\x37\x07" "__mod__")
QDEF(MP_QSTR___mul__, (const byte*)"\x31\x42\x07" "__mul__")
QDEF(MP_QSTR___neg__, (const byte*)"\x69\xd5\x07" "__neg__")
QDEF(MP_QSTR___or__, (const byte*)"\x38\xbb\x06" "__or__")
QDEF(MP_QSTR___path__, (const byte*)"\xc8\x23\x08" "__path__")
QDEF(MP_QSTR___pos__, (const byte*)"\x29\xf0\x07" "__pos__")
QDEF(MP_QSTR___pow__, (const byte*)"\x2d\x00\x07" "__pow__")
QDEF(MP_QSTR___repl_print__, (const byte*)"\x00\xbb\x0e" "__repl_print__")
QDEF(MP_QSTR___reversed__, (const byte*)"\x61\xff\x0c" "__reversed__")
QDEF(MP_QSTR___rshift__, (const byte*)"\x57\x98\x0a" "__rshift__")
QDEF(MP_QSTR___sub__, (const byte*)"\x21\x09\x07" "__sub__")
QDEF(MP_QSTR___traceback__, (const byte*)"\x4f\xcf\x0d" "__traceback__")
QDEF(MP_QSTR___truediv__, (const byte*)"\x88\xef\x0b" "__truediv__")
QDEF(MP_QSTR___xor__, (const byte*)"\x20\xec\x07" "__xor__")
QDEF(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x1a\x03" "%#o")
QDEF(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x1a\x03" "%#x")
QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x37\x05" "{:#b}")
QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x1e\x20" "maximum recursion depth exceeded")
QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x8c\x08" "<lambda>")
QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x15\x0a" "<listcomp>")
QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x8d\x0a" "<dictcomp>")
QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x51\x09" "<setcomp>")
QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x6a\x09" "<genexpr>")
QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x53\x08" "<string>")
QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x63\x07" "<stdin>")
QDEF(MP_QSTR_boot_dot_py, (const byte*)"\x74\xb9\x07" "boot.py")
QDEF(MP_QSTR_main_dot_py, (const byte*)"\xa9\x9f\x07" "main.py")
QDEF(MP_QSTR__slash_flash, (const byte*)"\x1a\x4e\x06" "/flash")
QDEF(MP_QSTR__slash_flash_slash_lib, (const byte*)"\x92\x4d\x0a" "/flash/lib")
QDEF(MP_QSTR__slash_sd, (const byte*)"\xbd\x3d\x03" "/sd")
QDEF(MP_QSTR__slash_sd_slash_lib, (const byte*)"\xb5\x1e\x07" "/sd/lib")
QDEF(MP_QSTR_MSC_plus_HID, (const byte*)"\xb6\x0c\x07" "MSC+HID")
QDEF(MP_QSTR_VCP_plus_MSC, (const byte*)"\xf6\x7e\x07" "VCP+MSC")
QDEF(MP_QSTR_VCP_plus_HID, (const byte*)"\xae\x70\x07" "VCP+HID")
QDEF(MP_QSTR_CDC_plus_MSC, (const byte*)"\x17\x00\x07" "CDC+MSC")
QDEF(MP_QSTR_CDC_plus_HID, (const byte*)"\x4f\xda\x07" "CDC+HID")
QDEF(MP_QSTR_CDC, (const byte*)"\x61\xcf\x03" "CDC")
QDEF(MP_QSTR_flash, (const byte*)"\x75\x92\x05" "flash")
QDEF(MP_QSTR_A0, (const byte*)"\x54\x72\x02" "A0")
QDEF(MP_QSTR_A1, (const byte*)"\x55\x72\x02" "A1")
QDEF(MP_QSTR_A2, (const byte*)"\x56\x72\x02" "A2")
QDEF(MP_QSTR_A3, (const byte*)"\x57\x72\x02" "A3")
QDEF(MP_QSTR_A4, (const byte*)"\x50\x72\x02" "A4")
QDEF(MP_QSTR_A5, (const byte*)"\x51\x72\x02" "A5")
QDEF(MP_QSTR_AD_B0_01, (const byte*)"\xf3\x19\x08" "AD_B0_01")
QDEF(MP_QSTR_AD_B0_02, (const byte*)"\xf0\x19\x08" "AD_B0_02")
QDEF(MP_QSTR_AD_B0_03, (const byte*)"\xf1\x19\x08" "AD_B0_03")
QDEF(MP_QSTR_AD_B0_09, (const byte*)"\xfb\x19\x08" "AD_B0_09")
QDEF(MP_QSTR_AD_B0_10, (const byte*)"\xd3\x19\x08" "AD_B0_10")
QDEF(MP_QSTR_AD_B0_11, (const byte*)"\xd2\x19\x08" "AD_B0_11")
QDEF(MP_QSTR_AD_B0_12, (const byte*)"\xd1\x19\x08" "AD_B0_12")
QDEF(MP_QSTR_AD_B0_13, (const byte*)"\xd0\x19\x08" "AD_B0_13")
QDEF(MP_QSTR_AD_B1_00, (const byte*)"\xd3\x95\x08" "AD_B1_00")
QDEF(MP_QSTR_AD_B1_01, (const byte*)"\xd2\x95\x08" "AD_B1_01")
QDEF(MP_QSTR_AD_B1_02, (const byte*)"\xd1\x95\x08" "AD_B1_02")
QDEF(MP_QSTR_AD_B1_03, (const byte*)"\xd0\x95\x08" "AD_B1_03")
QDEF(MP_QSTR_AD_B1_04, (const byte*)"\xd7\x95\x08" "AD_B1_04")
QDEF(MP_QSTR_AD_B1_05, (const byte*)"\xd6\x95\x08" "AD_B1_05")
QDEF(MP_QSTR_AD_B1_06, (const byte*)"\xd5\x95\x08" "AD_B1_06")
QDEF(MP_QSTR_AD_B1_07, (const byte*)"\xd4\x95\x08" "AD_B1_07")
QDEF(MP_QSTR_AD_B1_08, (const byte*)"\xdb\x95\x08" "AD_B1_08")
QDEF(MP_QSTR_AD_B1_10, (const byte*)"\xf2\x95\x08" "AD_B1_10")
QDEF(MP_QSTR_AD_B1_11, (const byte*)"\xf3\x95\x08" "AD_B1_11")
QDEF(MP_QSTR_AF0_LPI2C4, (const byte*)"\xdd\xb1\x0a" "AF0_LPI2C4")
QDEF(MP_QSTR_AF0_PWM2, (const byte*)"\x55\x63\x08" "AF0_PWM2")
QDEF(MP_QSTR_AF1_GPT1, (const byte*)"\x7e\xcd\x08" "AF1_GPT1")
QDEF(MP_QSTR_AF1_LPI2C3, (const byte*)"\xbb\x35\x0a" "AF1_LPI2C3")
QDEF(MP_QSTR_AF1_PWM1, (const byte*)"\xf7\x83\x08" "AF1_PWM1")
QDEF(MP_QSTR_AF1_PWM2, (const byte*)"\xf4\x83\x08" "AF1_PWM2")
QDEF(MP_QSTR_AF1_PWM4, (const byte*)"\xf2\x83\x08" "AF1_PWM4")
QDEF(MP_QSTR_AF1_TMR3, (const byte*)"\x14\x9d\x08" "AF1_TMR3")
QDEF(MP_QSTR_AF2_LPI2C3, (const byte*)"\x98\xca\x0a" "AF2_LPI2C3")
QDEF(MP_QSTR_AF2_LPUART1, (const byte*)"\xb0\x59\x0b" "AF2_LPUART1")
QDEF(MP_QSTR_AF2_LPUART2, (const byte*)"\xb3\x59\x0b" "AF2_LPUART2")
QDEF(MP_QSTR_AF2_LPUART3, (const byte*)"\xb2\x59\x0b" "AF2_LPUART3")
QDEF(MP_QSTR_AF2_LPUART6, (const byte*)"\xb7\x59\x0b" "AF2_LPUART6")
QDEF(MP_QSTR_AF2_LPUART8, (const byte*)"\xb9\x59\x0b" "AF2_LPUART8")
QDEF(MP_QSTR_AF3_LPI2C1, (const byte*)"\x7b\xcd\x0a" "AF3_LPI2C1")
QDEF(MP_QSTR_AF3_SAI3, (const byte*)"\x46\xfb\x08" "AF3_SAI3")
QDEF(MP_QSTR_AF4_LPSPI1, (const byte*)"\x6e\x6d\x0a" "AF4_LPSPI1")
QDEF(MP_QSTR_AF4_PWM1, (const byte*)"\xd2\x62\x08" "AF4_PWM1")
QDEF(MP_QSTR_AF5_GPIO1, (const byte*)"\xa8\xfe\x09" "AF5_GPIO1")
QDEF(MP_QSTR_AF5_GPIO3, (const byte*)"\xaa\xfe\x09" "AF5_GPIO3")
QDEF(MP_QSTR_AF5_GPIO5, (const byte*)"\xac\xfe\x09" "AF5_GPIO5")
QDEF(MP_QSTR_AF7_GPT2, (const byte*)"\x3b\x8c\x08" "AF7_GPT2")
QDEF(MP_QSTR_AF7_LPSPI3, (const byte*)"\x4f\x47\x0a" "AF7_LPSPI3")
QDEF(MP_QSTR_D0_RX, (const byte*)"\x44\xed\x05" "D0_RX")
QDEF(MP_QSTR_D10_SS, (const byte*)"\xbf\x51\x06" "D10_SS")
QDEF(MP_QSTR_D11_MO, (const byte*)"\x9c\xd6\x06" "D11_MO")
QDEF(MP_QSTR_D12_MI, (const byte*)"\xb9\x39\x06" "D12_MI")
QDEF(MP_QSTR_D13_CK, (const byte*)"\x94\xbf\x06" "D13_CK")
QDEF(MP_QSTR_D14_SDA, (const byte*)"\xed\x86\x07" "D14_SDA")
QDEF(MP_QSTR_D15_SCL, (const byte*)"\x46\x9f\x07" "D15_SCL")
QDEF(MP_QSTR_D1_TX, (const byte*)"\x23\x89\x05" "D1_TX")
QDEF(MP_QSTR_D2_INT0, (const byte*)"\xcf\x73\x07" "D2_INT0")
QDEF(MP_QSTR_D3_INT1, (const byte*)"\xaf\x33\x07" "D3_INT1")
QDEF(MP_QSTR_D4, (const byte*)"\x35\x72\x02" "D4")
QDEF(MP_QSTR_D5_PWM1, (const byte*)"\x30\x9b\x07" "D5_PWM1")
QDEF(MP_QSTR_D6_PWM2, (const byte*)"\x90\xbb\x07" "D6_PWM2")
QDEF(MP_QSTR_D7_PWM3, (const byte*)"\x70\x7b\x07" "D7_PWM3")
QDEF(MP_QSTR_D8, (const byte*)"\x39\x72\x02" "D8")
QDEF(MP_QSTR_D9_PWM4, (const byte*)"\xb9\x5a\x07" "D9_PWM4")
QDEF(MP_QSTR_DBG_RXD, (const byte*)"\x95\xcd\x07" "DBG_RXD")
QDEF(MP_QSTR_DBG_TXD, (const byte*)"\x93\xf7\x07" "DBG_TXD")
QDEF(MP_QSTR_KEY, (const byte*)"\x12\xf1\x03" "KEY")
QDEF(MP_QSTR_LED, (const byte*)"\x88\xdc\x03" "LED")
QDEF(MP_QSTR_SD_B0_00, (const byte*)"\xa0\x34\x08" "SD_B0_00")
QDEF(MP_QSTR_SD_B0_01, (const byte*)"\xa1\x34\x08" "SD_B0_01")
QDEF(MP_QSTR_SD_B0_02, (const byte*)"\xa2\x34\x08" "SD_B0_02")
QDEF(MP_QSTR_SD_B0_03, (const byte*)"\xa3\x34\x08" "SD_B0_03")
QDEF(MP_QSTR_WAKEUP, (const byte*)"\x78\x36\x06" "WAKEUP")
QDEF(MP_QSTR_ADC1, (const byte*)"\xf2\x82\x04" "ADC1")
QDEF(MP_QSTR_ADC2, (const byte*)"\xf1\x82\x04" "ADC2")
QDEF(MP_QSTR_ADC_CAL, (const byte*)"\x72\xf2\x07" "ADC_CAL")
QDEF(MP_QSTR_ADC_CFG, (const byte*)"\xde\xf1\x07" "ADC_CFG")
QDEF(MP_QSTR_ADC_CV, (const byte*)"\x69\xa2\x06" "ADC_CV")
QDEF(MP_QSTR_ADC_ETC, (const byte*)"\x8e\xc6\x07" "ADC_ETC")
QDEF(MP_QSTR_ADC_GC, (const byte*)"\xf8\xa1\x06" "ADC_GC")
QDEF(MP_QSTR_ADC_GS, (const byte*)"\xe8\xa1\x06" "ADC_GS")
QDEF(MP_QSTR_ADC_HC0, (const byte*)"\x47\xb3\x07" "ADC_HC0")
QDEF(MP_QSTR_ADC_HC1, (const byte*)"\x46\xb3\x07" "ADC_HC1")
QDEF(MP_QSTR_ADC_HC2, (const byte*)"\x45\xb3\x07" "ADC_HC2")
QDEF(MP_QSTR_ADC_HC3, (const byte*)"\x44\xb3\x07" "ADC_HC3")
QDEF(MP_QSTR_ADC_HC4, (const byte*)"\x43\xb3\x07" "ADC_HC4")
QDEF(MP_QSTR_ADC_HC5, (const byte*)"\x42\xb3\x07" "ADC_HC5")
QDEF(MP_QSTR_ADC_HC6, (const byte*)"\x41\xb3\x07" "ADC_HC6")
QDEF(MP_QSTR_ADC_HC7, (const byte*)"\x40\xb3\x07" "ADC_HC7")
QDEF(MP_QSTR_ADC_HS, (const byte*)"\x87\xa0\x06" "ADC_HS")
QDEF(MP_QSTR_ADC_OFS, (const byte*)"\xc6\xbf\x07" "ADC_OFS")
QDEF(MP_QSTR_ADC_R0, (const byte*)"\x3e\xa0\x06" "ADC_R0")
QDEF(MP_QSTR_ADC_R1, (const byte*)"\x3f\xa0\x06" "ADC_R1")
QDEF(MP_QSTR_ADC_R2, (const byte*)"\x3c\xa0\x06" "ADC_R2")
QDEF(MP_QSTR_ADC_R3, (const byte*)"\x3d\xa0\x06" "ADC_R3")
QDEF(MP_QSTR_ADC_R4, (const byte*)"\x3a\xa0\x06" "ADC_R4")
QDEF(MP_QSTR_ADC_R5, (const byte*)"\x3b\xa0\x06" "ADC_R5")
QDEF(MP_QSTR_ADC_R6, (const byte*)"\x38\xa0\x06" "ADC_R6")
QDEF(MP_QSTR_ADC_R7, (const byte*)"\x39\xa0\x06" "ADC_R7")
QDEF(MP_QSTR_AIPSTZ1, (const byte*)"\xd1\x64\x07" "AIPSTZ1")
QDEF(MP_QSTR_AIPSTZ2, (const byte*)"\xd2\x64\x07" "AIPSTZ2")
QDEF(MP_QSTR_AIPSTZ3, (const byte*)"\xd3\x64\x07" "AIPSTZ3")
QDEF(MP_QSTR_AIPSTZ4, (const byte*)"\xd4\x64\x07" "AIPSTZ4")
QDEF(MP_QSTR_AOI1, (const byte*)"\x33\xb0\x04" "AOI1")
QDEF(MP_QSTR_AOI2, (const byte*)"\x30\xb0\x04" "AOI2")
QDEF(MP_QSTR_BEE, (const byte*)"\x87\xc2\x03" "BEE")
QDEF(MP_QSTR_CAL_CAL_CODE_BF, (const byte*)"\xf3\xd6\x0f" "CAL_CAL_CODE_BF")
QDEF(MP_QSTR_CAN1, (const byte*)"\x98\xc0\x04" "CAN1")
QDEF(MP_QSTR_CAN2, (const byte*)"\x9b\xc0\x04" "CAN2")
QDEF(MP_QSTR_CAPTCOMPA_EDGCMPA_BF, (const byte*)"\x4e\x87\x14" "CAPTCOMPA_EDGCMPA_BF")
QDEF(MP_QSTR_CAPTCOMPA_EDGCNTA_BF, (const byte*)"\xe9\x01\x14" "CAPTCOMPA_EDGCNTA_BF")
QDEF(MP_QSTR_CAPTCOMPB_EDGCMPB_BF, (const byte*)"\x4e\x27\x14" "CAPTCOMPB_EDGCMPB_BF")
QDEF(MP_QSTR_CAPTCOMPB_EDGCNTB_BF, (const byte*)"\x69\xf8\x14" "CAPTCOMPB_EDGCNTB_BF")
QDEF(MP_QSTR_CAPTCOMPX_EDGCMPX_BF, (const byte*)"\x4e\x8c\x14" "CAPTCOMPX_EDGCMPX_BF")
QDEF(MP_QSTR_CAPTCOMPX_EDGCNTX_BF, (const byte*)"\x69\xce\x14" "CAPTCOMPX_EDGCNTX_BF")
QDEF(MP_QSTR_CAPTCTRLA_ARMA, (const byte*)"\xab\x57\x0e" "CAPTCTRLA_ARMA")
QDEF(MP_QSTR_CAPTCTRLA_CA0CNT_BF, (const byte*)"\x84\xc7\x13" "CAPTCTRLA_CA0CNT_BF")
QDEF(MP_QSTR_CAPTCTRLA_CA1CNT_BF, (const byte*)"\x05\xfc\x13" "CAPTCTRLA_CA1CNT_BF")
QDEF(MP_QSTR_CAPTCTRLA_CFAWM_BF, (const byte*)"\x11\x82\x12" "CAPTCTRLA_CFAWM_BF")
QDEF(MP_QSTR_CAPTCTRLA_EDGA0_BF, (const byte*)"\x58\xed\x12" "CAPTCTRLA_EDGA0_BF")
QDEF(MP_QSTR_CAPTCTRLA_EDGA1_BF, (const byte*)"\xf9\x89\x12" "CAPTCTRLA_EDGA1_BF")
QDEF(MP_QSTR_CAPTCTRLA_EDGCNTA_EN, (const byte*)"\x3e\x4c\x14" "CAPTCTRLA_EDGCNTA_EN")
QDEF(MP_QSTR_CAPTCTRLA_INP_SELA, (const byte*)"\x27\xf0\x12" "CAPTCTRLA_INP_SELA")
QDEF(MP_QSTR_CAPTCTRLA_ONESHOTA, (const byte*)"\xb1\x43\x12" "CAPTCTRLA_ONESHOTA")
QDEF(MP_QSTR_CAPTCTRLB_ARMB, (const byte*)"\xcb\x17\x0e" "CAPTCTRLB_ARMB")
QDEF(MP_QSTR_CAPTCTRLB_CB0CNT_BF, (const byte*)"\x64\x57\x13" "CAPTCTRLB_CB0CNT_BF")
QDEF(MP_QSTR_CAPTCTRLB_CB1CNT_BF, (const byte*)"\x65\x9c\x13" "CAPTCTRLB_CB1CNT_BF")
QDEF(MP_QSTR_CAPTCTRLB_CFBWM_BF, (const byte*)"\x51\x12\x12" "CAPTCTRLB_CFBWM_BF")
QDEF(MP_QSTR_CAPTCTRLB_EDGB0_BF, (const byte*)"\x38\xe3\x12" "CAPTCTRLB_EDGB0_BF")
QDEF(MP_QSTR_CAPTCTRLB_EDGB1_BF, (const byte*)"\xd9\x5f\x12" "CAPTCTRLB_EDGB1_BF")
QDEF(MP_QSTR_CAPTCTRLB_EDGCNTB_EN, (const byte*)"\xbe\x61\x14" "CAPTCTRLB_EDGCNTB_EN")
QDEF(MP_QSTR_CAPTCTRLB_INP_SELB, (const byte*)"\x47\x68\x12" "CAPTCTRLB_INP_SELB")
QDEF(MP_QSTR_CAPTCTRLB_ONESHOTB, (const byte*)"\xd1\xb3\x12" "CAPTCTRLB_ONESHOTB")
QDEF(MP_QSTR_CAPTCTRLX_ARMX, (const byte*)"\x8b\xbb\x0e" "CAPTCTRLX_ARMX")
QDEF(MP_QSTR_CAPTCTRLX_CFXWM_BF, (const byte*)"\x51\x00\x12" "CAPTCTRLX_CFXWM_BF")
QDEF(MP_QSTR_CAPTCTRLX_CX0CNT_BF, (const byte*)"\xa4\x46\x13" "CAPTCTRLX_CX0CNT_BF")
QDEF(MP_QSTR_CAPTCTRLX_CX1CNT_BF, (const byte*)"\xa5\xe9\x13" "CAPTCTRLX_CX1CNT_BF")
QDEF(MP_QSTR_CAPTCTRLX_EDGCNTX_EN, (const byte*)"\xbe\x2c\x14" "CAPTCTRLX_EDGCNTX_EN")
QDEF(MP_QSTR_CAPTCTRLX_EDGX0_BF, (const byte*)"\xf8\x01\x12" "CAPTCTRLX_EDGX0_BF")
QDEF(MP_QSTR_CAPTCTRLX_EDGX1_BF, (const byte*)"\x99\x7d\x12" "CAPTCTRLX_EDGX1_BF")
QDEF(MP_QSTR_CAPTCTRLX_INP_SELX, (const byte*)"\x87\xcb\x12" "CAPTCTRLX_INP_SELX")
QDEF(MP_QSTR_CAPTCTRLX_ONESHOTX, (const byte*)"\x11\xc5\x12" "CAPTCTRLX_ONESHOTX")
QDEF(MP_QSTR_CAPT_CAPTURE_BF, (const byte*)"\xe3\x9f\x0f" "CAPT_CAPTURE_BF")
QDEF(MP_QSTR_CCM, (const byte*)"\xc8\xcf\x03" "CCM")
QDEF(MP_QSTR_CCM_ANALOG, (const byte*)"\xbd\xf9\x0a" "CCM_ANALOG")
QDEF(MP_QSTR_CCR_DBT_BF, (const byte*)"\xe1\x90\x0a" "CCR_DBT_BF")
QDEF(MP_QSTR_CCR_PCSSCK_BF, (const byte*)"\x08\x7b\x0d" "CCR_PCSSCK_BF")
QDEF(MP_QSTR_CCR_SCKDIV_BF, (const byte*)"\x13\x81\x0d" "CCR_SCKDIV_BF")
QDEF(MP_QSTR_CCR_SCKPCS_BF, (const byte*)"\x68\x5e\x0d" "CCR_SCKPCS_BF")
QDEF(MP_QSTR_CFGR0_CIRFIFO, (const byte*)"\x84\xe6\x0d" "CFGR0_CIRFIFO")
QDEF(MP_QSTR_CFGR0_HREN, (const byte*)"\xcb\xe4\x0a" "CFGR0_HREN")
QDEF(MP_QSTR_CFGR0_HRPOL, (const byte*)"\xd3\x9d\x0b" "CFGR0_HRPOL")
QDEF(MP_QSTR_CFGR0_HRSEL, (const byte*)"\x9a\xa8\x0b" "CFGR0_HRSEL")
QDEF(MP_QSTR_CFGR0_RDMO, (const byte*)"\x0e\xd4\x0a" "CFGR0_RDMO")
QDEF(MP_QSTR_CFGR1_AUTOPCS, (const byte*)"\x14\xf2\x0d" "CFGR1_AUTOPCS")
QDEF(MP_QSTR_CFGR1_MASTER, (const byte*)"\x27\x0c\x0c" "CFGR1_MASTER")
QDEF(MP_QSTR_CFGR1_MATCFG_BF, (const byte*)"\x5a\xcb\x0f" "CFGR1_MATCFG_BF")
QDEF(MP_QSTR_CFGR1_NOSTALL, (const byte*)"\xdc\x61\x0d" "CFGR1_NOSTALL")
QDEF(MP_QSTR_CFGR1_OUTCFG, (const byte*)"\xf7\x33\x0c" "CFGR1_OUTCFG")
QDEF(MP_QSTR_CFGR1_PCSCFG, (const byte*)"\x79\x92\x0c" "CFGR1_PCSCFG")
QDEF(MP_QSTR_CFGR1_PCSPOL_BF, (const byte*)"\x53\x74\x0f" "CFGR1_PCSPOL_BF")
QDEF(MP_QSTR_CFGR1_PINCFG_BF, (const byte*)"\x95\xc9\x0f" "CFGR1_PINCFG_BF")
QDEF(MP_QSTR_CFGR1_SAMPLE, (const byte*)"\x1d\xd2\x0c" "CFGR1_SAMPLE")
QDEF(MP_QSTR_CFG_ADHSC, (const byte*)"\xa5\xf0\x09" "CFG_ADHSC")
QDEF(MP_QSTR_CFG_ADICLK_BF, (const byte*)"\x0b\xc7\x0d" "CFG_ADICLK_BF")
QDEF(MP_QSTR_CFG_ADIV_BF, (const byte*)"\x99\x6f\x0b" "CFG_ADIV_BF")
QDEF(MP_QSTR_CFG_ADLPC, (const byte*)"\x82\xdf\x09" "CFG_ADLPC")
QDEF(MP_QSTR_CFG_ADLSMP, (const byte*)"\xdf\xd5\x0a" "CFG_ADLSMP")
QDEF(MP_QSTR_CFG_ADSTS_BF, (const byte*)"\x72\xad\x0c" "CFG_ADSTS_BF")
QDEF(MP_QSTR_CFG_ADTRG, (const byte*)"\x5c\xc2\x09" "CFG_ADTRG")
QDEF(MP_QSTR_CFG_AVGS_BF, (const byte*)"\x20\xdd\x0b" "CFG_AVGS_BF")
QDEF(MP_QSTR_CFG_MODE_BF, (const byte*)"\xc0\x79\x0b" "CFG_MODE_BF")
QDEF(MP_QSTR_CFG_OVWREN, (const byte*)"\x2f\xb0\x0a" "CFG_OVWREN")
QDEF(MP_QSTR_CFG_REFSEL_BF, (const byte*)"\x08\x7e\x0d" "CFG_REFSEL_BF")
QDEF(MP_QSTR_CMP1, (const byte*)"\x4a\xd3\x04" "CMP1")
QDEF(MP_QSTR_CMP2, (const byte*)"\x49\xd3\x04" "CMP2")
QDEF(MP_QSTR_CMP3, (const byte*)"\x48\xd3\x04" "CMP3")
QDEF(MP_QSTR_CMP4, (const byte*)"\x4f\xd3\x04" "CMP4")
QDEF(MP_QSTR_CMPLD1_COMPARATOR_LOAD_1_BF, (const byte*)"\xfb\x9e\x1b" "CMPLD1_COMPARATOR_LOAD_1_BF")
QDEF(MP_QSTR_CMPLD2_COMPARATOR_LOAD_2_BF, (const byte*)"\x3b\x29\x1b" "CMPLD2_COMPARATOR_LOAD_2_BF")
QDEF(MP_QSTR_CNTR_COUNTER_BF, (const byte*)"\x3e\x18\x0f" "CNTR_COUNTER_BF")
QDEF(MP_QSTR_CNT_CNT_BF, (const byte*)"\xc1\xb6\x0a" "CNT_CNT_BF")
QDEF(MP_QSTR_COMP1_COMPARISON_1_BF, (const byte*)"\x16\x14\x15" "COMP1_COMPARISON_1_BF")
QDEF(MP_QSTR_COMP2_COMPARISON_2_BF, (const byte*)"\x76\x0f\x15" "COMP2_COMPARISON_2_BF")
QDEF(MP_QSTR_CR_DBGEN, (const byte*)"\x61\xd2\x08" "CR_DBGEN")
QDEF(MP_QSTR_CR_DOZEN, (const byte*)"\xd1\xfb\x08" "CR_DOZEN")
QDEF(MP_QSTR_CR_MEN, (const byte*)"\x6d\xc8\x06" "CR_MEN")
QDEF(MP_QSTR_CR_RRF, (const byte*)"\x4d\x07\x06" "CR_RRF")
QDEF(MP_QSTR_CR_RST, (const byte*)"\xbe\x06\x06" "CR_RST")
QDEF(MP_QSTR_CR_RTF, (const byte*)"\x0b\x07\x06" "CR_RTF")
QDEF(MP_QSTR_CSCTRL_ALT_LOAD, (const byte*)"\xc3\x04\x0f" "CSCTRL_ALT_LOAD")
QDEF(MP_QSTR_CSCTRL_CL1_BF, (const byte*)"\xa6\x18\x0d" "CSCTRL_CL1_BF")
QDEF(MP_QSTR_CSCTRL_CL2_BF, (const byte*)"\x85\x7c\x0d" "CSCTRL_CL2_BF")
QDEF(MP_QSTR_CSCTRL_DBG_EN_BF, (const byte*)"\x0d\x41\x10" "CSCTRL_DBG_EN_BF")
QDEF(MP_QSTR_CSCTRL_FAULT, (const byte*)"\xc9\x72\x0c" "CSCTRL_FAULT")
QDEF(MP_QSTR_CSCTRL_ROC, (const byte*)"\xdd\x35\x0a" "CSCTRL_ROC")
QDEF(MP_QSTR_CSCTRL_TCF1, (const byte*)"\x23\xd7\x0b" "CSCTRL_TCF1")
QDEF(MP_QSTR_CSCTRL_TCF1EN, (const byte*)"\xc8\x34\x0d" "CSCTRL_TCF1EN")
QDEF(MP_QSTR_CSCTRL_TCF2, (const byte*)"\x20\xd7\x0b" "CSCTRL_TCF2")
QDEF(MP_QSTR_CSCTRL_TCF2EN, (const byte*)"\x4b\x28\x0d" "CSCTRL_TCF2EN")
QDEF(MP_QSTR_CSCTRL_TCI, (const byte*)"\xdd\x3c\x0a" "CSCTRL_TCI")
QDEF(MP_QSTR_CSCTRL_UP, (const byte*)"\x66\xfa\x09" "CSCTRL_UP")
QDEF(MP_QSTR_CSI, (const byte*)"\xdc\xd1\x03" "CSI")
QDEF(MP_QSTR_CSU, (const byte*)"\xc0\xd1\x03" "CSU")
QDEF(MP_QSTR_CTRL2_CLK_SEL_BF, (const byte*)"\x3b\x17\x10" "CTRL2_CLK_SEL_BF")
QDEF(MP_QSTR_CTRL2_DBGEN, (const byte*)"\x8b\x7c\x0b" "CTRL2_DBGEN")
QDEF(MP_QSTR_CTRL2_FORCE, (const byte*)"\xbc\x6a\x0b" "CTRL2_FORCE")
QDEF(MP_QSTR_CTRL2_FORCE_SEL_BF, (const byte*)"\x42\xf3\x12" "CTRL2_FORCE_SEL_BF")
QDEF(MP_QSTR_CTRL2_FRCEN, (const byte*)"\x1d\x43\x0b" "CTRL2_FRCEN")
QDEF(MP_QSTR_CTRL2_INDEP, (const byte*)"\xd7\x50\x0b" "CTRL2_INDEP")
QDEF(MP_QSTR_CTRL2_INIT_SEL_BF, (const byte*)"\xc5\xcf\x11" "CTRL2_INIT_SEL_BF")
QDEF(MP_QSTR_CTRL2_PWM23_INIT, (const byte*)"\xcf\x2a\x10" "CTRL2_PWM23_INIT")
QDEF(MP_QSTR_CTRL2_PWM45_INIT, (const byte*)"\x0f\xe4\x10" "CTRL2_PWM45_INIT")
QDEF(MP_QSTR_CTRL2_PWMX_INIT, (const byte*)"\xd6\xfd\x0f" "CTRL2_PWMX_INIT")
QDEF(MP_QSTR_CTRL2_RELOAD_SEL, (const byte*)"\xb5\xad\x10" "CTRL2_RELOAD_SEL")
QDEF(MP_QSTR_CTRL2_WAITEN, (const byte*)"\x21\xba\x0c" "CTRL2_WAITEN")
QDEF(MP_QSTR_CTRL_CM_BF, (const byte*)"\xe6\xb6\x0a" "CTRL_CM_BF")
QDEF(MP_QSTR_CTRL_COINIT, (const byte*)"\x05\xf3\x0b" "CTRL_COINIT")
QDEF(MP_QSTR_CTRL_COMPMODE, (const byte*)"\x81\x90\x0d" "CTRL_COMPMODE")
QDEF(MP_QSTR_CTRL_DBLEN, (const byte*)"\xb2\x8c\x0a" "CTRL_DBLEN")
QDEF(MP_QSTR_CTRL_DBLX, (const byte*)"\x61\xdd\x09" "CTRL_DBLX")
QDEF(MP_QSTR_CTRL_DIR, (const byte*)"\x2c\x9b\x08" "CTRL_DIR")
QDEF(MP_QSTR_CTRL_DMA_MODE_SEL, (const byte*)"\xe2\x9c\x11" "CTRL_DMA_MODE_SEL")
QDEF(MP_QSTR_CTRL_DT_BF, (const byte*)"\x18\x17\x0a" "CTRL_DT_BF")
QDEF(MP_QSTR_CTRL_EXT0_TRIG_ENABLE, (const byte*)"\xe3\x7b\x15" "CTRL_EXT0_TRIG_ENABLE")
QDEF(MP_QSTR_CTRL_EXT0_TRIG_PRIORITY_BF, (const byte*)"\x0b\xeb\x1a" "CTRL_EXT0_TRIG_PRIORITY_BF")
QDEF(MP_QSTR_CTRL_EXT1_TRIG_ENABLE, (const byte*)"\x62\xd2\x15" "CTRL_EXT1_TRIG_ENABLE")
QDEF(MP_QSTR_CTRL_EXT1_TRIG_PRIORITY_BF, (const byte*)"\xea\x99\x1a" "CTRL_EXT1_TRIG_PRIORITY_BF")
QDEF(MP_QSTR_CTRL_FULL, (const byte*)"\x60\x95\x09" "CTRL_FULL")
QDEF(MP_QSTR_CTRL_HALF, (const byte*)"\xb0\x11\x09" "CTRL_HALF")
QDEF(MP_QSTR_CTRL_LDFQ_BF, (const byte*)"\xf7\x5d\x0c" "CTRL_LDFQ_BF")
QDEF(MP_QSTR_CTRL_LDMOD, (const byte*)"\x3d\x32\x0a" "CTRL_LDMOD")
QDEF(MP_QSTR_CTRL_LENGTH, (const byte*)"\x2f\x91\x0b" "CTRL_LENGTH")
QDEF(MP_QSTR_CTRL_ONCE, (const byte*)"\x34\xa9\x09" "CTRL_ONCE")
QDEF(MP_QSTR_CTRL_OUTMODE_BF, (const byte*)"\x85\x52\x0f" "CTRL_OUTMODE_BF")
QDEF(MP_QSTR_CTRL_PCS_BF, (const byte*)"\x48\x0f\x0b" "CTRL_PCS_BF")
QDEF(MP_QSTR_CTRL_PRE_DIVIDER_BF, (const byte*)"\x51\x64\x13" "CTRL_PRE_DIVIDER_BF")
QDEF(MP_QSTR_CTRL_PRSC_BF, (const byte*)"\xba\xe6\x0c" "CTRL_PRSC_BF")
QDEF(MP_QSTR_CTRL_SCS_BF, (const byte*)"\x2b\x37\x0b" "CTRL_SCS_BF")
QDEF(MP_QSTR_CTRL_SOFTRST, (const byte*)"\x88\xa5\x0c" "CTRL_SOFTRST")
QDEF(MP_QSTR_CTRL_SPLIT, (const byte*)"\x21\x89\x0a" "CTRL_SPLIT")
QDEF(MP_QSTR_CTRL_TRIG_ENABLE_BF, (const byte*)"\xde\x3a\x13" "CTRL_TRIG_ENABLE_BF")
QDEF(MP_QSTR_CTRL_TSC_BYPASS, (const byte*)"\xe2\x3a\x0f" "CTRL_TSC_BYPASS")
QDEF(MP_QSTR_CVAL0CYC_CVAL0CYC_BF, (const byte*)"\x41\xe8\x14" "CVAL0CYC_CVAL0CYC_BF")
QDEF(MP_QSTR_CVAL0_CAPTVAL0_BF, (const byte*)"\x04\xa3\x11" "CVAL0_CAPTVAL0_BF")
QDEF(MP_QSTR_CVAL1CYC_CVAL1CYC_BF, (const byte*)"\xe1\xd9\x14" "CVAL1CYC_CVAL1CYC_BF")
QDEF(MP_QSTR_CVAL1_CAPTVAL1_BF, (const byte*)"\x64\x80\x11" "CVAL1_CAPTVAL1_BF")
QDEF(MP_QSTR_CVAL2CYC_CVAL2CYC_BF, (const byte*)"\x81\xc6\x14" "CVAL2CYC_CVAL2CYC_BF")
QDEF(MP_QSTR_CVAL2_CAPTVAL2_BF, (const byte*)"\xc4\xca\x11" "CVAL2_CAPTVAL2_BF")
QDEF(MP_QSTR_CVAL3CYC_CVAL3CYC_BF, (const byte*)"\x21\xf5\x14" "CVAL3CYC_CVAL3CYC_BF")
QDEF(MP_QSTR_CVAL3_CAPTVAL3_BF, (const byte*)"\x24\x47\x11" "CVAL3_CAPTVAL3_BF")
QDEF(MP_QSTR_CVAL4CYC_CVAL4CYC_BF, (const byte*)"\xc1\x66\x14" "CVAL4CYC_CVAL4CYC_BF")
QDEF(MP_QSTR_CVAL4_CAPTVAL4_BF, (const byte*)"\x84\x14\x11" "CVAL4_CAPTVAL4_BF")
QDEF(MP_QSTR_CVAL5CYC_CVAL5CYC_BF, (const byte*)"\x61\x58\x14" "CVAL5CYC_CVAL5CYC_BF")
QDEF(MP_QSTR_CVAL5_CAPTVAL5_BF, (const byte*)"\xe4\xf1\x11" "CVAL5_CAPTVAL5_BF")
QDEF(MP_QSTR_CV_CV1_BF, (const byte*)"\x50\xae\x09" "CV_CV1_BF")
QDEF(MP_QSTR_CV_CV2_BF, (const byte*)"\xb3\x21\x09" "CV_CV2_BF")
QDEF(MP_QSTR_DCDC, (const byte*)"\xc5\x13\x04" "DCDC")
QDEF(MP_QSTR_DCP, (const byte*)"\xd2\xba\x03" "DCP")
QDEF(MP_QSTR_DER_RDDE, (const byte*)"\xde\x58\x08" "DER_RDDE")
QDEF(MP_QSTR_DER_TDDE, (const byte*)"\x98\x70\x08" "DER_TDDE")
QDEF(MP_QSTR_DISMAP_DIS0A_BF, (const byte*)"\x8c\xaa\x0f" "DISMAP_DIS0A_BF")
QDEF(MP_QSTR_DISMAP_DIS0B_BF, (const byte*)"\xef\x1e\x0f" "DISMAP_DIS0B_BF")
QDEF(MP_QSTR_DISMAP_DIS0X_BF, (const byte*)"\x35\xe7\x0f" "DISMAP_DIS0X_BF")
QDEF(MP_QSTR_DISMAP_DIS1A_BF, (const byte*)"\xcd\xe3\x0f" "DISMAP_DIS1A_BF")
QDEF(MP_QSTR_DISMAP_DIS1B_BF, (const byte*)"\xee\x3e\x0f" "DISMAP_DIS1B_BF")
QDEF(MP_QSTR_DISMAP_DIS1X_BF, (const byte*)"\x34\x48\x0f" "DISMAP_DIS1X_BF")
QDEF(MP_QSTR_DMA0, (const byte*)"\x1d\x2d\x04" "DMA0")
QDEF(MP_QSTR_DMAEN_CA0DE, (const byte*)"\x0a\xe3\x0b" "DMAEN_CA0DE")
QDEF(MP_QSTR_DMAEN_CA1DE, (const byte*)"\x4b\xdf\x0b" "DMAEN_CA1DE")
QDEF(MP_QSTR_DMAEN_CAPTDE_BF, (const byte*)"\x85\xac\x0f" "DMAEN_CAPTDE_BF")
QDEF(MP_QSTR_DMAEN_CB0DE, (const byte*)"\x29\x4e\x0b" "DMAEN_CB0DE")
QDEF(MP_QSTR_DMAEN_CB1DE, (const byte*)"\x68\x42\x0b" "DMAEN_CB1DE")
QDEF(MP_QSTR_DMAEN_CX0DE, (const byte*)"\x73\xc6\x0b" "DMAEN_CX0DE")
QDEF(MP_QSTR_DMAEN_CX1DE, (const byte*)"\xb2\xb9\x0b" "DMAEN_CX1DE")
QDEF(MP_QSTR_DMAEN_FAND, (const byte*)"\xf4\xe6\x0a" "DMAEN_FAND")
QDEF(MP_QSTR_DMAEN_VALDE, (const byte*)"\x23\x35\x0b" "DMAEN_VALDE")
QDEF(MP_QSTR_DMAMUX, (const byte*)"\x8d\xff\x06" "DMAMUX")
QDEF(MP_QSTR_DMA_CMPLD1DE, (const byte*)"\x74\xd8\x0c" "DMA_CMPLD1DE")
QDEF(MP_QSTR_DMA_CMPLD2DE, (const byte*)"\x37\xdc\x0c" "DMA_CMPLD2DE")
QDEF(MP_QSTR_DMA_CTRL_TRIG0_ENABLE, (const byte*)"\x62\xa0\x15" "DMA_CTRL_TRIG0_ENABLE")
QDEF(MP_QSTR_DMA_CTRL_TRIG0_REQ, (const byte*)"\xa5\xa7\x12" "DMA_CTRL_TRIG0_REQ")
QDEF(MP_QSTR_DMA_CTRL_TRIG1_ENABLE, (const byte*)"\xc3\xc3\x15" "DMA_CTRL_TRIG1_ENABLE")
QDEF(MP_QSTR_DMA_CTRL_TRIG1_REQ, (const byte*)"\x24\x77\x12" "DMA_CTRL_TRIG1_REQ")
QDEF(MP_QSTR_DMA_CTRL_TRIG2_ENABLE, (const byte*)"\x20\xa8\x15" "DMA_CTRL_TRIG2_ENABLE")
QDEF(MP_QSTR_DMA_CTRL_TRIG2_REQ, (const byte*)"\x27\x77\x12" "DMA_CTRL_TRIG2_REQ")
QDEF(MP_QSTR_DMA_CTRL_TRIG3_ENABLE, (const byte*)"\x81\x4b\x15" "DMA_CTRL_TRIG3_ENABLE")
QDEF(MP_QSTR_DMA_CTRL_TRIG3_REQ, (const byte*)"\xa6\xa7\x12" "DMA_CTRL_TRIG3_REQ")
QDEF(MP_QSTR_DMA_CTRL_TRIG4_ENABLE, (const byte*)"\xe6\xb0\x15" "DMA_CTRL_TRIG4_ENABLE")
QDEF(MP_QSTR_DMA_CTRL_TRIG4_REQ, (const byte*)"\xa1\xa7\x12" "DMA_CTRL_TRIG4_REQ")
QDEF(MP_QSTR_DMA_CTRL_TRIG5_ENABLE, (const byte*)"\x47\xd4\x15" "DMA_CTRL_TRIG5_ENABLE")
QDEF(MP_QSTR_DMA_CTRL_TRIG5_REQ, (const byte*)"\x20\x77\x12" "DMA_CTRL_TRIG5_REQ")
QDEF(MP_QSTR_DMA_CTRL_TRIG6_ENABLE, (const byte*)"\xa4\xb8\x15" "DMA_CTRL_TRIG6_ENABLE")
QDEF(MP_QSTR_DMA_CTRL_TRIG6_REQ, (const byte*)"\x23\x77\x12" "DMA_CTRL_TRIG6_REQ")
QDEF(MP_QSTR_DMA_CTRL_TRIG7_ENABLE, (const byte*)"\x05\x5c\x15" "DMA_CTRL_TRIG7_ENABLE")
QDEF(MP_QSTR_DMA_CTRL_TRIG7_REQ, (const byte*)"\xa2\xa7\x12" "DMA_CTRL_TRIG7_REQ")
QDEF(MP_QSTR_DMA_IEFDE, (const byte*)"\x19\xcd\x09" "DMA_IEFDE")
QDEF(MP_QSTR_DMR0_MATCH0_BF, (const byte*)"\x29\xc7\x0e" "DMR0_MATCH0_BF")
QDEF(MP_QSTR_DMR1_MATCH1_BF, (const byte*)"\x89\x6e\x0e" "DMR1_MATCH1_BF")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG0_DONE0, (const byte*)"\xc6\xfe\x17" "DONE0_1_IRQ_TRIG0_DONE0")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG0_DONE1, (const byte*)"\xc7\xfe\x17" "DONE0_1_IRQ_TRIG0_DONE1")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG1_DONE0, (const byte*)"\x47\x2b\x17" "DONE0_1_IRQ_TRIG1_DONE0")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG1_DONE1, (const byte*)"\x46\x2b\x17" "DONE0_1_IRQ_TRIG1_DONE1")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG2_DONE0, (const byte*)"\xc4\x87\x17" "DONE0_1_IRQ_TRIG2_DONE0")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG2_DONE1, (const byte*)"\xc5\x87\x17" "DONE0_1_IRQ_TRIG2_DONE1")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG3_DONE0, (const byte*)"\x45\x53\x17" "DONE0_1_IRQ_TRIG3_DONE0")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG3_DONE1, (const byte*)"\x44\x53\x17" "DONE0_1_IRQ_TRIG3_DONE1")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG4_DONE0, (const byte*)"\xc2\x2e\x17" "DONE0_1_IRQ_TRIG4_DONE0")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG4_DONE1, (const byte*)"\xc3\x2e\x17" "DONE0_1_IRQ_TRIG4_DONE1")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG5_DONE0, (const byte*)"\x43\x5b\x17" "DONE0_1_IRQ_TRIG5_DONE0")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG5_DONE1, (const byte*)"\x42\x5b\x17" "DONE0_1_IRQ_TRIG5_DONE1")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG6_DONE0, (const byte*)"\xc0\xb7\x17" "DONE0_1_IRQ_TRIG6_DONE0")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG6_DONE1, (const byte*)"\xc1\xb7\x17" "DONE0_1_IRQ_TRIG6_DONE1")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG7_DONE0, (const byte*)"\x41\x83\x17" "DONE0_1_IRQ_TRIG7_DONE0")
QDEF(MP_QSTR_DONE0_1_IRQ_TRIG7_DONE1, (const byte*)"\x40\x83\x17" "DONE0_1_IRQ_TRIG7_DONE1")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG0_DONE2, (const byte*)"\xb2\x12\x19" "DONE2_ERR_IRQ_TRIG0_DONE2")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG0_ERR, (const byte*)"\x45\x04\x17" "DONE2_ERR_IRQ_TRIG0_ERR")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG1_DONE2, (const byte*)"\xb3\x6f\x19" "DONE2_ERR_IRQ_TRIG1_DONE2")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG1_ERR, (const byte*)"\x04\x2c\x17" "DONE2_ERR_IRQ_TRIG1_ERR")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG2_DONE2, (const byte*)"\xb0\xac\x19" "DONE2_ERR_IRQ_TRIG2_DONE2")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG2_ERR, (const byte*)"\x47\x45\x17" "DONE2_ERR_IRQ_TRIG2_ERR")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG3_DONE2, (const byte*)"\xb1\x47\x19" "DONE2_ERR_IRQ_TRIG3_DONE2")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG3_ERR, (const byte*)"\x06\x0c\x17" "DONE2_ERR_IRQ_TRIG3_ERR")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG4_DONE2, (const byte*)"\xb6\xe2\x19" "DONE2_ERR_IRQ_TRIG4_DONE2")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG4_ERR, (const byte*)"\x41\xe3\x17" "DONE2_ERR_IRQ_TRIG4_ERR")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG5_DONE2, (const byte*)"\xb7\x3f\x19" "DONE2_ERR_IRQ_TRIG5_DONE2")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG5_ERR, (const byte*)"\x00\x0b\x17" "DONE2_ERR_IRQ_TRIG5_ERR")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG6_DONE2, (const byte*)"\xb4\x7c\x19" "DONE2_ERR_IRQ_TRIG6_DONE2")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG6_ERR, (const byte*)"\x43\x24\x17" "DONE2_ERR_IRQ_TRIG6_ERR")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG7_DONE2, (const byte*)"\xb5\x17\x19" "DONE2_ERR_IRQ_TRIG7_DONE2")
QDEF(MP_QSTR_DONE2_ERR_IRQ_TRIG7_ERR, (const byte*)"\x02\xeb\x17" "DONE2_ERR_IRQ_TRIG7_ERR")
QDEF(MP_QSTR_DR_DR_BF, (const byte*)"\xe1\xe4\x08" "DR_DR_BF")
QDEF(MP_QSTR_DTCNT0_DTCNT0_BF, (const byte*)"\x41\x36\x10" "DTCNT0_DTCNT0_BF")
QDEF(MP_QSTR_DTCNT1_DTCNT1_BF, (const byte*)"\xa1\xdc\x10" "DTCNT1_DTCNT1_BF")
QDEF(MP_QSTR_DTSRCSEL_SM0SEL23_BF, (const byte*)"\xdc\xb0\x14" "DTSRCSEL_SM0SEL23_BF")
QDEF(MP_QSTR_DTSRCSEL_SM0SEL45_BF, (const byte*)"\x1c\xa8\x14" "DTSRCSEL_SM0SEL45_BF")
QDEF(MP_QSTR_DTSRCSEL_SM1SEL23_BF, (const byte*)"\x1d\x19\x14" "DTSRCSEL_SM1SEL23_BF")
QDEF(MP_QSTR_DTSRCSEL_SM1SEL45_BF, (const byte*)"\x5d\x11\x14" "DTSRCSEL_SM1SEL45_BF")
QDEF(MP_QSTR_DTSRCSEL_SM2SEL23_BF, (const byte*)"\xde\x30\x14" "DTSRCSEL_SM2SEL23_BF")
QDEF(MP_QSTR_DTSRCSEL_SM2SEL45_BF, (const byte*)"\x9e\x18\x14" "DTSRCSEL_SM2SEL45_BF")
QDEF(MP_QSTR_DTSRCSEL_SM3SEL23_BF, (const byte*)"\x1f\xf8\x14" "DTSRCSEL_SM3SEL23_BF")
QDEF(MP_QSTR_DTSRCSEL_SM3SEL45_BF, (const byte*)"\xdf\xe0\x14" "DTSRCSEL_SM3SEL45_BF")
QDEF(MP_QSTR_EDGE_SEL_GPIO_EDGE_SEL_BF, (const byte*)"\x4f\xad\x19" "EDGE_SEL_GPIO_EDGE_SEL_BF")
QDEF(MP_QSTR_ENBL_ENBL_BF, (const byte*)"\x81\xf9\x0c" "ENBL_ENBL_BF")
QDEF(MP_QSTR_ENC1, (const byte*)"\xfc\x8c\x04" "ENC1")
QDEF(MP_QSTR_ENC2, (const byte*)"\xff\x8c\x04" "ENC2")
QDEF(MP_QSTR_ENC3, (const byte*)"\xfe\x8c\x04" "ENC3")
QDEF(MP_QSTR_ENC4, (const byte*)"\xf9\x8c\x04" "ENC4")
QDEF(MP_QSTR_ENET, (const byte*)"\xdf\x8c\x04" "ENET")
QDEF(MP_QSTR_EWM, (const byte*)"\xda\xa8\x03" "EWM")
QDEF(MP_QSTR_FCR_RXWATER_BF, (const byte*)"\xa9\xa4\x0e" "FCR_RXWATER_BF")
QDEF(MP_QSTR_FCR_TXWATER_BF, (const byte*)"\xef\x34\x0e" "FCR_TXWATER_BF")
QDEF(MP_QSTR_FCTRL2_NOCOMB_BF, (const byte*)"\x5e\x00\x10" "FCTRL2_NOCOMB_BF")
QDEF(MP_QSTR_FCTRL_FAUTO_BF, (const byte*)"\x87\x37\x0e" "FCTRL_FAUTO_BF")
QDEF(MP_QSTR_FCTRL_FIE_BF, (const byte*)"\x64\x26\x0c" "FCTRL_FIE_BF")
QDEF(MP_QSTR_FCTRL_FLVL_BF, (const byte*)"\xbe\x46\x0d" "FCTRL_FLVL_BF")
QDEF(MP_QSTR_FCTRL_FSAFE_BF, (const byte*)"\x59\xe8\x0e" "FCTRL_FSAFE_BF")
QDEF(MP_QSTR_FFILT_FILT_CNT_BF, (const byte*)"\x41\xfa\x11" "FFILT_FILT_CNT_BF")
QDEF(MP_QSTR_FFILT_FILT_PER_BF, (const byte*)"\xff\xc6\x11" "FFILT_FILT_PER_BF")
QDEF(MP_QSTR_FFILT_GSTR, (const byte*)"\xd9\xda\x0a" "FFILT_GSTR")
QDEF(MP_QSTR_FILT_FILT_CNT_BF, (const byte*)"\xe7\x17\x10" "FILT_FILT_CNT_BF")
QDEF(MP_QSTR_FILT_FILT_PER_BF, (const byte*)"\x19\xf6\x10" "FILT_FILT_PER_BF")
QDEF(MP_QSTR_FLEXIO1, (const byte*)"\xe5\xe0\x07" "FLEXIO1")
QDEF(MP_QSTR_FLEXIO2, (const byte*)"\xe6\xe0\x07" "FLEXIO2")
QDEF(MP_QSTR_FLEXRAM, (const byte*)"\x4c\x6f\x07" "FLEXRAM")
QDEF(MP_QSTR_FLEXSPI, (const byte*)"\xf8\x64\x07" "FLEXSPI")
QDEF(MP_QSTR_FRACVAL1_FRACVAL1_BF, (const byte*)"\x61\x5a\x14" "FRACVAL1_FRACVAL1_BF")
QDEF(MP_QSTR_FRACVAL2_FRACVAL2_BF, (const byte*)"\x01\x7c\x14" "FRACVAL2_FRACVAL2_BF")
QDEF(MP_QSTR_FRACVAL3_FRACVAL3_BF, (const byte*)"\x21\x10\x14" "FRACVAL3_FRACVAL3_BF")
QDEF(MP_QSTR_FRACVAL4_FRACVAL4_BF, (const byte*)"\xc1\x74\x14" "FRACVAL4_FRACVAL4_BF")
QDEF(MP_QSTR_FRACVAL5_FRACVAL5_BF, (const byte*)"\xe1\xeb\x14" "FRACVAL5_FRACVAL5_BF")
QDEF(MP_QSTR_FRCTRL_FRAC1_EN, (const byte*)"\x74\x50\x0f" "FRCTRL_FRAC1_EN")
QDEF(MP_QSTR_FRCTRL_FRAC23_EN, (const byte*)"\x24\x05\x10" "FRCTRL_FRAC23_EN")
QDEF(MP_QSTR_FRCTRL_FRAC45_EN, (const byte*)"\xe4\x4e\x10" "FRCTRL_FRAC45_EN")
QDEF(MP_QSTR_FRCTRL_FRAC_PU, (const byte*)"\xeb\x02\x0e" "FRCTRL_FRAC_PU")
QDEF(MP_QSTR_FRCTRL_TEST, (const byte*)"\x11\x2f\x0b" "FRCTRL_TEST")
QDEF(MP_QSTR_FSR_RXCOUNT_BF, (const byte*)"\xcf\x2a\x0e" "FSR_RXCOUNT_BF")
QDEF(MP_QSTR_FSR_TXCOUNT_BF, (const byte*)"\x89\x18\x0e" "FSR_TXCOUNT_BF")
QDEF(MP_QSTR_FSTS_FFLAG_BF, (const byte*)"\xd9\xcc\x0d" "FSTS_FFLAG_BF")
QDEF(MP_QSTR_FSTS_FFPIN_BF, (const byte*)"\xa4\x90\x0d" "FSTS_FFPIN_BF")
QDEF(MP_QSTR_FSTS_FFULL_BF, (const byte*)"\x06\xa9\x0d" "FSTS_FFULL_BF")
QDEF(MP_QSTR_FSTS_FHALF_BF, (const byte*)"\xd6\x86\x0d" "FSTS_FHALF_BF")
QDEF(MP_QSTR_FTST_FTEST, (const byte*)"\x7f\x9a\x0a" "FTST_FTEST")
QDEF(MP_QSTR_GC_ACFE, (const byte*)"\x3f\x9d\x07" "GC_ACFE")
QDEF(MP_QSTR_GC_ACFGT, (const byte*)"\x89\x44\x08" "GC_ACFGT")
QDEF(MP_QSTR_GC_ACREN, (const byte*)"\x45\x11\x08" "GC_ACREN")
QDEF(MP_QSTR_GC_ADACKEN, (const byte*)"\x99\xa9\x0a" "GC_ADACKEN")
QDEF(MP_QSTR_GC_ADCO, (const byte*)"\x57\x99\x07" "GC_ADCO")
QDEF(MP_QSTR_GC_AVGE, (const byte*)"\x4b\x5e\x07" "GC_AVGE")
QDEF(MP_QSTR_GC_CAL, (const byte*)"\xf0\xbd\x06" "GC_CAL")
QDEF(MP_QSTR_GC_DMAEN, (const byte*)"\x9d\xfe\x08" "GC_DMAEN")
QDEF(MP_QSTR_GDIR_GDIR_BF, (const byte*)"\xe1\xec\x0c" "GDIR_GDIR_BF")
QDEF(MP_QSTR_GPC, (const byte*)"\xf1\xc0\x03" "GPC")
QDEF(MP_QSTR_GPIO1, (const byte*)"\xa5\xe2\x05" "GPIO1")
QDEF(MP_QSTR_GPIO2, (const byte*)"\xa6\xe2\x05" "GPIO2")
QDEF(MP_QSTR_GPIO3, (const byte*)"\xa7\xe2\x05" "GPIO3")
QDEF(MP_QSTR_GPIO4, (const byte*)"\xa0\xe2\x05" "GPIO4")
QDEF(MP_QSTR_GPIO5, (const byte*)"\xa1\xe2\x05" "GPIO5")
QDEF(MP_QSTR_GPIO_DR, (const byte*)"\x1d\xca\x07" "GPIO_DR")
QDEF(MP_QSTR_GPIO_EDGE_SEL, (const byte*)"\x4d\x82\x0d" "GPIO_EDGE_SEL")
QDEF(MP_QSTR_GPIO_GDIR, (const byte*)"\x53\xdb\x09" "GPIO_GDIR")
QDEF(MP_QSTR_GPIO_ICR1, (const byte*)"\x82\x8f\x09" "GPIO_ICR1")
QDEF(MP_QSTR_GPIO_ICR2, (const byte*)"\x81\x8f\x09" "GPIO_ICR2")
QDEF(MP_QSTR_GPIO_IMR, (const byte*)"\x9d\xe6\x08" "GPIO_IMR")
QDEF(MP_QSTR_GPIO_ISR, (const byte*)"\x43\xe7\x08" "GPIO_ISR")
QDEF(MP_QSTR_GPIO_PSR, (const byte*)"\xda\x3c\x08" "GPIO_PSR")
QDEF(MP_QSTR_GPT1, (const byte*)"\x97\xdd\x04" "GPT1")
QDEF(MP_QSTR_GPT2, (const byte*)"\x94\xdd\x04" "GPT2")
QDEF(MP_QSTR_GS_ADACT, (const byte*)"\x7d\x74\x08" "GS_ADACT")
QDEF(MP_QSTR_GS_AWKST, (const byte*)"\x14\x92\x08" "GS_AWKST")
QDEF(MP_QSTR_GS_CALF, (const byte*)"\xa6\xf5\x07" "GS_CALF")
QDEF(MP_QSTR_HC_ADCH_BF, (const byte*)"\x24\x9f\x0a" "HC_ADCH_BF")
QDEF(MP_QSTR_HC_AIEN, (const byte*)"\x92\x08\x07" "HC_AIEN")
QDEF(MP_QSTR_HOLD_HOLD_BF, (const byte*)"\x81\xa7\x0c" "HOLD_HOLD_BF")
QDEF(MP_QSTR_HS_COCO0, (const byte*)"\x91\xc2\x08" "HS_COCO0")
QDEF(MP_QSTR_ICR1_ICR0_BF, (const byte*)"\xa0\x3b\x0c" "ICR1_ICR0_BF")
QDEF(MP_QSTR_ICR1_ICR10_BF, (const byte*)"\xb1\x08\x0d" "ICR1_ICR10_BF")
QDEF(MP_QSTR_ICR1_ICR11_BF, (const byte*)"\x10\xad\x0d" "ICR1_ICR11_BF")
QDEF(MP_QSTR_ICR1_ICR12_BF, (const byte*)"\x73\x21\x0d" "ICR1_ICR12_BF")
QDEF(MP_QSTR_ICR1_ICR13_BF, (const byte*)"\xd2\x84\x0d" "ICR1_ICR13_BF")
QDEF(MP_QSTR_ICR1_ICR14_BF, (const byte*)"\x35\x18\x0d" "ICR1_ICR14_BF")
QDEF(MP_QSTR_ICR1_ICR15_BF, (const byte*)"\x94\xbc\x0d" "ICR1_ICR15_BF")
QDEF(MP_QSTR_ICR1_ICR1_BF, (const byte*)"\x41\xb8\x0c" "ICR1_ICR1_BF")
QDEF(MP_QSTR_ICR1_ICR2_BF, (const byte*)"\x62\x13\x0c" "ICR1_ICR2_BF")
QDEF(MP_QSTR_ICR1_ICR3_BF, (const byte*)"\x03\x8f\x0c" "ICR1_ICR3_BF")
QDEF(MP_QSTR_ICR1_ICR4_BF, (const byte*)"\x24\x4b\x0c" "ICR1_ICR4_BF")
QDEF(MP_QSTR_ICR1_ICR5_BF, (const byte*)"\xc5\xc7\x0c" "ICR1_ICR5_BF")
QDEF(MP_QSTR_ICR1_ICR6_BF, (const byte*)"\xe6\x22\x0c" "ICR1_ICR6_BF")
QDEF(MP_QSTR_ICR1_ICR7_BF, (const byte*)"\x87\x9e\x0c" "ICR1_ICR7_BF")
QDEF(MP_QSTR_ICR1_ICR8_BF, (const byte*)"\xa8\x1c\x0c" "ICR1_ICR8_BF")
QDEF(MP_QSTR_ICR1_ICR9_BF, (const byte*)"\x49\x99\x0c" "ICR1_ICR9_BF")
QDEF(MP_QSTR_ICR2_ICR16_BF, (const byte*)"\x54\x99\x0d" "ICR2_ICR16_BF")
QDEF(MP_QSTR_ICR2_ICR17_BF, (const byte*)"\xf5\x35\x0d" "ICR2_ICR17_BF")
QDEF(MP_QSTR_ICR2_ICR18_BF, (const byte*)"\x9a\x82\x0d" "ICR2_ICR18_BF")
QDEF(MP_QSTR_ICR2_ICR19_BF, (const byte*)"\x3b\xde\x0d" "ICR2_ICR19_BF")
QDEF(MP_QSTR_ICR2_ICR20_BF, (const byte*)"\xd1\x89\x0d" "ICR2_ICR20_BF")
QDEF(MP_QSTR_ICR2_ICR21_BF, (const byte*)"\x30\x0d\x0d" "ICR2_ICR21_BF")
QDEF(MP_QSTR_ICR2_ICR22_BF, (const byte*)"\x93\x60\x0d" "ICR2_ICR22_BF")
QDEF(MP_QSTR_ICR2_ICR23_BF, (const byte*)"\xf2\xe4\x0d" "ICR2_ICR23_BF")
QDEF(MP_QSTR_ICR2_ICR24_BF, (const byte*)"\x55\x99\x0d" "ICR2_ICR24_BF")
QDEF(MP_QSTR_ICR2_ICR25_BF, (const byte*)"\xb4\x1c\x0d" "ICR2_ICR25_BF")
QDEF(MP_QSTR_ICR2_ICR26_BF, (const byte*)"\x17\x70\x0d" "ICR2_ICR26_BF")
QDEF(MP_QSTR_ICR2_ICR27_BF, (const byte*)"\x76\xf4\x0d" "ICR2_ICR27_BF")
QDEF(MP_QSTR_ICR2_ICR28_BF, (const byte*)"\xd9\x6a\x0d" "ICR2_ICR28_BF")
QDEF(MP_QSTR_ICR2_ICR29_BF, (const byte*)"\x38\xee\x0d" "ICR2_ICR29_BF")
QDEF(MP_QSTR_ICR2_ICR30_BF, (const byte*)"\x90\xb1\x0d" "ICR2_ICR30_BF")
QDEF(MP_QSTR_ICR2_ICR31_BF, (const byte*)"\x31\x0d\x0d" "ICR2_ICR31_BF")
QDEF(MP_QSTR_IER_DMIE, (const byte*)"\xc1\xd1\x08" "IER_DMIE")
QDEF(MP_QSTR_IER_FCIE, (const byte*)"\x8d\xe1\x08" "IER_FCIE")
QDEF(MP_QSTR_IER_RDIE, (const byte*)"\x9e\xcc\x08" "IER_RDIE")
QDEF(MP_QSTR_IER_REIE, (const byte*)"\x1f\xc0\x08" "IER_REIE")
QDEF(MP_QSTR_IER_TCIE, (const byte*)"\xdf\x7f\x08" "IER_TCIE")
QDEF(MP_QSTR_IER_TDIE, (const byte*)"\x58\x84\x08" "IER_TDIE")
QDEF(MP_QSTR_IER_TEIE, (const byte*)"\xd9\x77\x08" "IER_TEIE")
QDEF(MP_QSTR_IER_WCIE, (const byte*)"\x3c\x0b\x08" "IER_WCIE")
QDEF(MP_QSTR_IMR_IMR_BF, (const byte*)"\x01\xc5\x0a" "IMR_IMR_BF")
QDEF(MP_QSTR_INIT_INIT_BF, (const byte*)"\xa1\xab\x0c" "INIT_INIT_BF")
QDEF(MP_QSTR_INTEN_CA0IE, (const byte*)"\x5c\x0d\x0b" "INTEN_CA0IE")
QDEF(MP_QSTR_INTEN_CA1IE, (const byte*)"\xdd\x00\x0b" "INTEN_CA1IE")
QDEF(MP_QSTR_INTEN_CB0IE, (const byte*)"\xff\xa1\x0b" "INTEN_CB0IE")
QDEF(MP_QSTR_INTEN_CB1IE, (const byte*)"\xfe\x9d\x0b" "INTEN_CB1IE")
QDEF(MP_QSTR_INTEN_CMPIE_BF, (const byte*)"\xab\x14\x0e" "INTEN_CMPIE_BF")
QDEF(MP_QSTR_INTEN_CX0IE, (const byte*)"\xa5\x27\x0b" "INTEN_CX0IE")
QDEF(MP_QSTR_INTEN_CX1IE, (const byte*)"\xa4\x23\x0b" "INTEN_CX1IE")
QDEF(MP_QSTR_INTEN_REIE, (const byte*)"\x19\xc4\x0a" "INTEN_REIE")
QDEF(MP_QSTR_INTEN_RIE, (const byte*)"\x5c\xa9\x09" "INTEN_RIE")
QDEF(MP_QSTR_IOMUXC, (const byte*)"\x80\xb9\x06" "IOMUXC")
QDEF(MP_QSTR_IOMUXC_GPR, (const byte*)"\xfa\x79\x0a" "IOMUXC_GPR")
QDEF(MP_QSTR_IOMUXC_SNVS, (const byte*)"\xe7\x2d\x0b" "IOMUXC_SNVS")
QDEF(MP_QSTR_IOMUXC_SNVS_GPR, (const byte*)"\x9d\x37\x0f" "IOMUXC_SNVS_GPR")
QDEF(MP_QSTR_ISR_ISR_BF, (const byte*)"\x81\x7b\x0a" "ISR_ISR_BF")
QDEF(MP_QSTR_KPP, (const byte*)"\xee\xf3\x03" "KPP")
QDEF(MP_QSTR_LCDIF, (const byte*)"\xe1\x4f\x05" "LCDIF")
QDEF(MP_QSTR_LOAD_LOAD_BF, (const byte*)"\x21\x46\x0c" "LOAD_LOAD_BF")
QDEF(MP_QSTR_LPI2C1, (const byte*)"\x10\xa4\x06" "LPI2C1")
QDEF(MP_QSTR_LPI2C2, (const byte*)"\x13\xa4\x06" "LPI2C2")
QDEF(MP_QSTR_LPI2C3, (const byte*)"\x12\xa4\x06" "LPI2C3")
QDEF(MP_QSTR_LPI2C4, (const byte*)"\x15\xa4\x06" "LPI2C4")
QDEF(MP_QSTR_LPI2C_MCCR0, (const byte*)"\xb1\x9b\x0b" "LPI2C_MCCR0")
QDEF(MP_QSTR_LPI2C_MCCR1, (const byte*)"\xb0\x9b\x0b" "LPI2C_MCCR1")
QDEF(MP_QSTR_LPI2C_MCFGR0, (const byte*)"\x33\xde\x0c" "LPI2C_MCFGR0")
QDEF(MP_QSTR_LPI2C_MCFGR1, (const byte*)"\x32\xde\x0c" "LPI2C_MCFGR1")
QDEF(MP_QSTR_LPI2C_MCFGR2, (const byte*)"\x31\xde\x0c" "LPI2C_MCFGR2")
QDEF(MP_QSTR_LPI2C_MCFGR3, (const byte*)"\x30\xde\x0c" "LPI2C_MCFGR3")
QDEF(MP_QSTR_LPI2C_MCR, (const byte*)"\xc2\x14\x09" "LPI2C_MCR")
QDEF(MP_QSTR_LPI2C_MDER, (const byte*)"\x20\xbb\x0a" "LPI2C_MDER")
QDEF(MP_QSTR_LPI2C_MDMR, (const byte*)"\x28\xbc\x0a" "LPI2C_MDMR")
QDEF(MP_QSTR_LPI2C_MFCR, (const byte*)"\x64\xc4\x0a" "LPI2C_MFCR")
QDEF(MP_QSTR_LPI2C_MFSR, (const byte*)"\x74\xc2\x0a" "LPI2C_MFSR")
QDEF(MP_QSTR_LPI2C_MIER, (const byte*)"\x2d\xc9\x0a" "LPI2C_MIER")
QDEF(MP_QSTR_LPI2C_MRDR, (const byte*)"\xd7\x6f\x0a" "LPI2C_MRDR")
QDEF(MP_QSTR_LPI2C_MSR, (const byte*)"\xd2\x12\x09" "LPI2C_MSR")
QDEF(MP_QSTR_LPI2C_MTDR, (const byte*)"\xd1\x77\x0a" "LPI2C_MTDR")
QDEF(MP_QSTR_LPI2C_PARAM, (const byte*)"\x31\x93\x0b" "LPI2C_PARAM")
QDEF(MP_QSTR_LPI2C_SAMR, (const byte*)"\xf3\x7b\x0a" "LPI2C_SAMR")
QDEF(MP_QSTR_LPI2C_SASR, (const byte*)"\x2d\x7f\x0a" "LPI2C_SASR")
QDEF(MP_QSTR_LPI2C_SCFGR1, (const byte*)"\x6c\x0e\x0c" "LPI2C_SCFGR1")
QDEF(MP_QSTR_LPI2C_SCFGR2, (const byte*)"\x6f\x0e\x0c" "LPI2C_SCFGR2")
QDEF(MP_QSTR_LPI2C_SCR, (const byte*)"\x5c\x0c\x09" "LPI2C_SCR")
QDEF(MP_QSTR_LPI2C_SDER, (const byte*)"\xfe\x70\x0a" "LPI2C_SDER")
QDEF(MP_QSTR_LPI2C_SIER, (const byte*)"\xf3\x5a\x0a" "LPI2C_SIER")
QDEF(MP_QSTR_LPI2C_SRDR, (const byte*)"\x89\xdd\x0a" "LPI2C_SRDR")
QDEF(MP_QSTR_LPI2C_SSR, (const byte*)"\x4c\x0e\x09" "LPI2C_SSR")
QDEF(MP_QSTR_LPI2C_STAR, (const byte*)"\x6a\xb4\x0a" "LPI2C_STAR")
QDEF(MP_QSTR_LPI2C_STDR, (const byte*)"\x8f\xb4\x0a" "LPI2C_STDR")
QDEF(MP_QSTR_LPI2C_VERID, (const byte*)"\xb2\x00\x0b" "LPI2C_VERID")
QDEF(MP_QSTR_LPSPI1, (const byte*)"\xa2\x50\x06" "LPSPI1")
QDEF(MP_QSTR_LPSPI2, (const byte*)"\xa1\x50\x06" "LPSPI2")
QDEF(MP_QSTR_LPSPI3, (const byte*)"\xa0\x50\x06" "LPSPI3")
QDEF(MP_QSTR_LPSPI4, (const byte*)"\xa7\x50\x06" "LPSPI4")
QDEF(MP_QSTR_LPSPI_CCR, (const byte*)"\x7e\x21\x09" "LPSPI_CCR")
QDEF(MP_QSTR_LPSPI_CFGR0, (const byte*)"\xac\x75\x0b" "LPSPI_CFGR0")
QDEF(MP_QSTR_LPSPI_CFGR1, (const byte*)"\xad\x75\x0b" "LPSPI_CFGR1")
QDEF(MP_QSTR_LPSPI_CR, (const byte*)"\xbd\xab\x08" "LPSPI_CR")
QDEF(MP_QSTR_LPSPI_DER, (const byte*)"\xbf\x14\x09" "LPSPI_DER")
QDEF(MP_QSTR_LPSPI_DMR0, (const byte*)"\xa7\x8a\x0a" "LPSPI_DMR0")
QDEF(MP_QSTR_LPSPI_DMR1, (const byte*)"\xa6\x8a\x0a" "LPSPI_DMR1")
QDEF(MP_QSTR_LPSPI_FCR, (const byte*)"\x7b\x0c\x09" "LPSPI_FCR")
QDEF(MP_QSTR_LPSPI_FSR, (const byte*)"\x6b\x0e\x09" "LPSPI_FSR")
QDEF(MP_QSTR_LPSPI_IER, (const byte*)"\xb2\x06\x09" "LPSPI_IER")
QDEF(MP_QSTR_LPSPI_PARAM, (const byte*)"\x43\x79\x0b" "LPSPI_PARAM")
QDEF(MP_QSTR_LPSPI_RDR, (const byte*)"\x88\x60\x09" "LPSPI_RDR")
QDEF(MP_QSTR_LPSPI_RSR, (const byte*)"\x7f\x5f\x09" "LPSPI_RSR")
QDEF(MP_QSTR_LPSPI_SR, (const byte*)"\xad\xad\x08" "LPSPI_SR")
QDEF(MP_QSTR_LPSPI_TCR, (const byte*)"\xe9\x58\x09" "LPSPI_TCR")
QDEF(MP_QSTR_LPSPI_TDR, (const byte*)"\x8e\x58\x09" "LPSPI_TDR")
QDEF(MP_QSTR_LPSPI_VERID, (const byte*)"\xc0\x26\x0b" "LPSPI_VERID")
QDEF(MP_QSTR_LPUART1, (const byte*)"\x7a\x1b\x07" "LPUART1")
QDEF(MP_QSTR_LPUART2, (const byte*)"\x79\x1b\x07" "LPUART2")
QDEF(MP_QSTR_LPUART3, (const byte*)"\x78\x1b\x07" "LPUART3")
QDEF(MP_QSTR_LPUART4, (const byte*)"\x7f\x1b\x07" "LPUART4")
QDEF(MP_QSTR_LPUART5, (const byte*)"\x7e\x1b\x07" "LPUART5")
QDEF(MP_QSTR_LPUART6, (const byte*)"\x7d\x1b\x07" "LPUART6")
QDEF(MP_QSTR_LPUART7, (const byte*)"\x7c\x1b\x07" "LPUART7")
QDEF(MP_QSTR_LPUART8, (const byte*)"\x73\x1b\x07" "LPUART8")
QDEF(MP_QSTR_MASK_MASKA_BF, (const byte*)"\xc0\x31\x0d" "MASK_MASKA_BF")
QDEF(MP_QSTR_MASK_MASKB_BF, (const byte*)"\x23\xa5\x0d" "MASK_MASKB_BF")
QDEF(MP_QSTR_MASK_MASKX_BF, (const byte*)"\x79\x71\x0d" "MASK_MASKX_BF")
QDEF(MP_QSTR_MASK_UPDATE_MASK_BF, (const byte*)"\xaf\x8e\x13" "MASK_UPDATE_MASK_BF")
QDEF(MP_QSTR_MCCR0_CLKHI_BF, (const byte*)"\x4b\x42\x0e" "MCCR0_CLKHI_BF")
QDEF(MP_QSTR_MCCR0_CLKLO_BF, (const byte*)"\x09\x5a\x0e" "MCCR0_CLKLO_BF")
QDEF(MP_QSTR_MCCR0_DATAVD_BF, (const byte*)"\x8c\x64\x0f" "MCCR0_DATAVD_BF")
QDEF(MP_QSTR_MCCR0_SETHOLD_BF, (const byte*)"\xe3\xae\x10" "MCCR0_SETHOLD_BF")
QDEF(MP_QSTR_MCCR1_CLKHI_BF, (const byte*)"\x2a\xc9\x0e" "MCCR1_CLKHI_BF")
QDEF(MP_QSTR_MCCR1_CLKLO_BF, (const byte*)"\xe8\xe1\x0e" "MCCR1_CLKLO_BF")
QDEF(MP_QSTR_MCCR1_DATAVD_BF, (const byte*)"\x8d\x08\x0f" "MCCR1_DATAVD_BF")
QDEF(MP_QSTR_MCCR1_SETHOLD_BF, (const byte*)"\xc2\x1a\x10" "MCCR1_SETHOLD_BF")
QDEF(MP_QSTR_MCFGR0_CIRFIFO, (const byte*)"\x49\x4f\x0e" "MCFGR0_CIRFIFO")
QDEF(MP_QSTR_MCFGR0_HREN, (const byte*)"\x26\x48\x0b" "MCFGR0_HREN")
QDEF(MP_QSTR_MCFGR0_HRPOL, (const byte*)"\xde\xb5\x0c" "MCFGR0_HRPOL")
QDEF(MP_QSTR_MCFGR0_HRSEL, (const byte*)"\x97\xba\x0c" "MCFGR0_HRSEL")
QDEF(MP_QSTR_MCFGR0_RDMO, (const byte*)"\x63\x54\x0b" "MCFGR0_RDMO")
QDEF(MP_QSTR_MCFGR1_AUTOSTOP, (const byte*)"\x41\x7e\x0f" "MCFGR1_AUTOSTOP")
QDEF(MP_QSTR_MCFGR1_IGNACK, (const byte*)"\x3f\x55\x0d" "MCFGR1_IGNACK")
QDEF(MP_QSTR_MCFGR1_MATCFG_BF, (const byte*)"\x57\x6b\x10" "MCFGR1_MATCFG_BF")
QDEF(MP_QSTR_MCFGR1_PINCFG_BF, (const byte*)"\x18\x95\x10" "MCFGR1_PINCFG_BF")
QDEF(MP_QSTR_MCFGR1_PRESCALE_BF, (const byte*)"\x92\xd3\x12" "MCFGR1_PRESCALE_BF")
QDEF(MP_QSTR_MCFGR1_TIMECFG, (const byte*)"\x61\xf9\x0e" "MCFGR1_TIMECFG")
QDEF(MP_QSTR_MCFGR2_BUSIDLE_BF, (const byte*)"\x4e\x5f\x11" "MCFGR2_BUSIDLE_BF")
QDEF(MP_QSTR_MCFGR2_FILTSCL_BF, (const byte*)"\xe5\xca\x11" "MCFGR2_FILTSCL_BF")
QDEF(MP_QSTR_MCFGR2_FILTSDA_BF, (const byte*)"\x8f\x16\x11" "MCFGR2_FILTSDA_BF")
QDEF(MP_QSTR_MCFGR3_PINLOW_BF, (const byte*)"\x6c\xea\x10" "MCFGR3_PINLOW_BF")
QDEF(MP_QSTR_MCR_DBGEN, (const byte*)"\x8c\x2c\x09" "MCR_DBGEN")
QDEF(MP_QSTR_MCR_DOZEN, (const byte*)"\xbc\x39\x09" "MCR_DOZEN")
QDEF(MP_QSTR_MCR_MEN, (const byte*)"\x40\xd7\x07" "MCR_MEN")
QDEF(MP_QSTR_MCR_RRF, (const byte*)"\x60\xfb\x07" "MCR_RRF")
QDEF(MP_QSTR_MCR_RST, (const byte*)"\x13\xfb\x07" "MCR_RST")
QDEF(MP_QSTR_MCR_RTF, (const byte*)"\x26\xfa\x07" "MCR_RTF")
QDEF(MP_QSTR_MCTRL2_MONPLL_BF, (const byte*)"\x0b\x56\x10" "MCTRL2_MONPLL_BF")
QDEF(MP_QSTR_MCTRL_CLDOK_BF, (const byte*)"\xea\x5a\x0e" "MCTRL_CLDOK_BF")
QDEF(MP_QSTR_MCTRL_IPOL_BF, (const byte*)"\xff\x15\x0d" "MCTRL_IPOL_BF")
QDEF(MP_QSTR_MCTRL_LDOK_BF, (const byte*)"\x89\x86\x0d" "MCTRL_LDOK_BF")
QDEF(MP_QSTR_MCTRL_RUN_BF, (const byte*)"\xac\x03\x0c" "MCTRL_RUN_BF")
QDEF(MP_QSTR_MDER_RDDE, (const byte*)"\xb3\x40\x09" "MDER_RDDE")
QDEF(MP_QSTR_MDER_TDDE, (const byte*)"\x75\x38\x09" "MDER_TDDE")
QDEF(MP_QSTR_MDMR_MATCH0_BF, (const byte*)"\x94\x17\x0e" "MDMR_MATCH0_BF")
QDEF(MP_QSTR_MDMR_MATCH1_BF, (const byte*)"\x35\x73\x0e" "MDMR_MATCH1_BF")
QDEF(MP_QSTR_MFCR_RXWATER_BF, (const byte*)"\x04\x27\x0f" "MFCR_RXWATER_BF")
QDEF(MP_QSTR_MFCR_TXWATER_BF, (const byte*)"\x42\x36\x0f" "MFCR_TXWATER_BF")
QDEF(MP_QSTR_MFSR_RXCOUNT_BF, (const byte*)"\x62\x88\x0f" "MFSR_RXCOUNT_BF")
QDEF(MP_QSTR_MFSR_TXCOUNT_BF, (const byte*)"\x24\x37\x0f" "MFSR_TXCOUNT_BF")
QDEF(MP_QSTR_MIER_ALIE, (const byte*)"\x08\xd2\x09" "MIER_ALIE")
QDEF(MP_QSTR_MIER_DMIE, (const byte*)"\xac\x59\x09" "MIER_DMIE")
QDEF(MP_QSTR_MIER_EPIE, (const byte*)"\x90\x56\x09" "MIER_EPIE")
QDEF(MP_QSTR_MIER_FEIE, (const byte*)"\x66\xb3\x09" "MIER_FEIE")
QDEF(MP_QSTR_MIER_NDIE, (const byte*)"\x6f\x56\x09" "MIER_NDIE")
QDEF(MP_QSTR_MIER_PLTIE, (const byte*)"\x0d\x3a\x0a" "MIER_PLTIE")
QDEF(MP_QSTR_MIER_RDIE, (const byte*)"\xf3\x6d\x09" "MIER_RDIE")
QDEF(MP_QSTR_MIER_SDIE, (const byte*)"\xd2\xb0\x09" "MIER_SDIE")
QDEF(MP_QSTR_MIER_TDIE, (const byte*)"\xb5\x43\x09" "MIER_TDIE")
QDEF(MP_QSTR_MRDR_DATA_BF, (const byte*)"\x98\xc5\x0c" "MRDR_DATA_BF")
QDEF(MP_QSTR_MRDR_RXEMPTY, (const byte*)"\x2c\x19\x0c" "MRDR_RXEMPTY")
QDEF(MP_QSTR_MSR_ALF, (const byte*)"\x7d\xcc\x07" "MSR_ALF")
QDEF(MP_QSTR_MSR_BBF, (const byte*)"\x70\xbf\x07" "MSR_BBF")
QDEF(MP_QSTR_MSR_DMF, (const byte*)"\xd9\xa7\x07" "MSR_DMF")
QDEF(MP_QSTR_MSR_EPF, (const byte*)"\xe5\xb8\x07" "MSR_EPF")
QDEF(MP_QSTR_MSR_FEF, (const byte*)"\xd3\xae\x07" "MSR_FEF")
QDEF(MP_QSTR_MSR_MBF, (const byte*)"\x3f\xdc\x07" "MSR_MBF")
QDEF(MP_QSTR_MSR_NDF, (const byte*)"\x3a\xd0\x07" "MSR_NDF")
QDEF(MP_QSTR_MSR_PLTF, (const byte*)"\xb8\xda\x08" "MSR_PLTF")
QDEF(MP_QSTR_MSR_RDF, (const byte*)"\x26\x7a\x07" "MSR_RDF")
QDEF(MP_QSTR_MSR_SDF, (const byte*)"\x67\x6e\x07" "MSR_SDF")
QDEF(MP_QSTR_MSR_TDF, (const byte*)"\x20\x62\x07" "MSR_TDF")
QDEF(MP_QSTR_MTDR_CMD_BF, (const byte*)"\x04\x4a\x0b" "MTDR_CMD_BF")
QDEF(MP_QSTR_MTDR_DATA_BF, (const byte*)"\x9e\x3c\x0c" "MTDR_DATA_BF")
QDEF(MP_QSTR_OCOTP, (const byte*)"\x42\x34\x05" "OCOTP")
QDEF(MP_QSTR_OCTRL_POLA, (const byte*)"\xae\xed\x0a" "OCTRL_POLA")
QDEF(MP_QSTR_OCTRL_POLB, (const byte*)"\xad\xed\x0a" "OCTRL_POLB")
QDEF(MP_QSTR_OCTRL_POLX, (const byte*)"\xb7\xed\x0a" "OCTRL_POLX")
QDEF(MP_QSTR_OCTRL_PWMAFS_BF, (const byte*)"\x99\x4d\x0f" "OCTRL_PWMAFS_BF")
QDEF(MP_QSTR_OCTRL_PWMA_IN, (const byte*)"\xcf\x35\x0d" "OCTRL_PWMA_IN")
QDEF(MP_QSTR_OCTRL_PWMBFS_BF, (const byte*)"\xfa\x85\x0f" "OCTRL_PWMBFS_BF")
QDEF(MP_QSTR_OCTRL_PWMB_IN, (const byte*)"\x6c\xca\x0d" "OCTRL_PWMB_IN")
QDEF(MP_QSTR_OCTRL_PWMXFS_BF, (const byte*)"\xa0\xf0\x0f" "OCTRL_PWMXFS_BF")
QDEF(MP_QSTR_OCTRL_PWMX_IN, (const byte*)"\x36\x94\x0d" "OCTRL_PWMX_IN")
QDEF(MP_QSTR_OFS_OFS_BF, (const byte*)"\x81\xe7\x0a" "OFS_OFS_BF")
QDEF(MP_QSTR_OFS_SIGN, (const byte*)"\x13\xb1\x08" "OFS_SIGN")
QDEF(MP_QSTR_OUTEN_PWMA_EN_BF, (const byte*)"\xfb\x2d\x10" "OUTEN_PWMA_EN_BF")
QDEF(MP_QSTR_OUTEN_PWMB_EN_BF, (const byte*)"\x78\x7a\x10" "OUTEN_PWMB_EN_BF")
QDEF(MP_QSTR_OUTEN_PWMX_EN_BF, (const byte*)"\xe2\xef\x10" "OUTEN_PWMX_EN_BF")
QDEF(MP_QSTR_PARAM_MRXFIFO_BF, (const byte*)"\xcf\xe9\x10" "PARAM_MRXFIFO_BF")
QDEF(MP_QSTR_PARAM_MTXFIFO_BF, (const byte*)"\xc9\x1a\x10" "PARAM_MTXFIFO_BF")
QDEF(MP_QSTR_PARAM_PCSNUM_BF, (const byte*)"\xd8\x7d\x0f" "PARAM_PCSNUM_BF")
QDEF(MP_QSTR_PARAM_RXFIFO_BF, (const byte*)"\x02\x45\x0f" "PARAM_RXFIFO_BF")
QDEF(MP_QSTR_PARAM_TXFIFO_BF, (const byte*)"\x04\x34\x0f" "PARAM_TXFIFO_BF")
QDEF(MP_QSTR_PGC, (const byte*)"\x51\x0f\x03" "PGC")
QDEF(MP_QSTR_PIT, (const byte*)"\x08\x10\x03" "PIT")
QDEF(MP_QSTR_PMU, (const byte*)"\x8d\x0f\x03" "PMU")
QDEF(MP_QSTR_PSR_PSR_BF, (const byte*)"\x01\x7a\x0a" "PSR_PSR_BF")
QDEF(MP_QSTR_PWM1, (const byte*)"\x1e\xb7\x04" "PWM1")
QDEF(MP_QSTR_PWM2, (const byte*)"\x1d\xb7\x04" "PWM2")
QDEF(MP_QSTR_PWM3, (const byte*)"\x1c\xb7\x04" "PWM3")
QDEF(MP_QSTR_PWM4, (const byte*)"\x1b\xb7\x04" "PWM4")
QDEF(MP_QSTR_PWM_CAPTCOMPA, (const byte*)"\x66\xdb\x0d" "PWM_CAPTCOMPA")
QDEF(MP_QSTR_PWM_CAPTCOMPB, (const byte*)"\x65\xdb\x0d" "PWM_CAPTCOMPB")
QDEF(MP_QSTR_PWM_CAPTCOMPX, (const byte*)"\x7f\xdb\x0d" "PWM_CAPTCOMPX")
QDEF(MP_QSTR_PWM_CAPTCTRLA, (const byte*)"\x5e\x72\x0d" "PWM_CAPTCTRLA")
QDEF(MP_QSTR_PWM_CAPTCTRLB, (const byte*)"\x5d\x72\x0d" "PWM_CAPTCTRLB")
QDEF(MP_QSTR_PWM_CAPTCTRLX, (const byte*)"\x47\x72\x0d" "PWM_CAPTCTRLX")
QDEF(MP_QSTR_PWM_CNT, (const byte*)"\x29\xc7\x07" "PWM_CNT")
QDEF(MP_QSTR_PWM_CTRL, (const byte*)"\xd9\x63\x08" "PWM_CTRL")
QDEF(MP_QSTR_PWM_CTRL2, (const byte*)"\xcb\xde\x09" "PWM_CTRL2")
QDEF(MP_QSTR_PWM_CVAL0, (const byte*)"\xd8\x65\x09" "PWM_CVAL0")
QDEF(MP_QSTR_PWM_CVAL0CYC, (const byte*)"\xa1\xa7\x0c" "PWM_CVAL0CYC")
QDEF(MP_QSTR_PWM_CVAL1, (const byte*)"\xd9\x65\x09" "PWM_CVAL1")
QDEF(MP_QSTR_PWM_CVAL1CYC, (const byte*)"\x40\x2c\x0c" "PWM_CVAL1CYC")
QDEF(MP_QSTR_PWM_CVAL2, (const byte*)"\xda\x65\x09" "PWM_CVAL2")
QDEF(MP_QSTR_PWM_CVAL2CYC, (const byte*)"\x63\xd0\x0c" "PWM_CVAL2CYC")
QDEF(MP_QSTR_PWM_CVAL3, (const byte*)"\xdb\x65\x09" "PWM_CVAL3")
QDEF(MP_QSTR_PWM_CVAL3CYC, (const byte*)"\x02\x54\x0c" "PWM_CVAL3CYC")
QDEF(MP_QSTR_PWM_CVAL4, (const byte*)"\xdc\x65\x09" "PWM_CVAL4")
QDEF(MP_QSTR_PWM_CVAL4CYC, (const byte*)"\x25\xd9\x0c" "PWM_CVAL4CYC")
QDEF(MP_QSTR_PWM_CVAL5, (const byte*)"\xdd\x65\x09" "PWM_CVAL5")
QDEF(MP_QSTR_PWM_CVAL5CYC, (const byte*)"\xc4\x5d\x0c" "PWM_CVAL5CYC")
QDEF(MP_QSTR_PWM_DISMAP0, (const byte*)"\x02\x29\x0b" "PWM_DISMAP0")
QDEF(MP_QSTR_PWM_DISMAP1, (const byte*)"\x03\x29\x0b" "PWM_DISMAP1")
QDEF(MP_QSTR_PWM_DMAEN, (const byte*)"\xf3\xf9\x09" "PWM_DMAEN")
QDEF(MP_QSTR_PWM_DTCNT0, (const byte*)"\xe9\xfc\x0a" "PWM_DTCNT0")
QDEF(MP_QSTR_PWM_DTCNT1, (const byte*)"\xe8\xfc\x0a" "PWM_DTCNT1")
QDEF(MP_QSTR_PWM_DTSRCSEL, (const byte*)"\xd8\x92\x0c" "PWM_DTSRCSEL")
QDEF(MP_QSTR_PWM_FCTRL, (const byte*)"\x9f\x50\x09" "PWM_FCTRL")
QDEF(MP_QSTR_PWM_FCTRL2, (const byte*)"\x4d\x64\x0a" "PWM_FCTRL2")
QDEF(MP_QSTR_PWM_FFILT, (const byte*)"\xa1\x2b\x09" "PWM_FFILT")
QDEF(MP_QSTR_PWM_FRACVAL1, (const byte*)"\x2c\x92\x0c" "PWM_FRACVAL1")
QDEF(MP_QSTR_PWM_FRACVAL2, (const byte*)"\x2f\x92\x0c" "PWM_FRACVAL2")
QDEF(MP_QSTR_PWM_FRACVAL3, (const byte*)"\x2e\x92\x0c" "PWM_FRACVAL3")
QDEF(MP_QSTR_PWM_FRACVAL4, (const byte*)"\x29\x92\x0c" "PWM_FRACVAL4")
QDEF(MP_QSTR_PWM_FRACVAL5, (const byte*)"\x28\x92\x0c" "PWM_FRACVAL5")
QDEF(MP_QSTR_PWM_FRCTRL, (const byte*)"\x0d\x53\x0a" "PWM_FRCTRL")
QDEF(MP_QSTR_PWM_FSTS, (const byte*)"\x62\xc2\x08" "PWM_FSTS")
QDEF(MP_QSTR_PWM_FTST, (const byte*)"\x85\xb5\x08" "PWM_FTST")
QDEF(MP_QSTR_PWM_INIT, (const byte*)"\x2a\xa6\x08" "PWM_INIT")
QDEF(MP_QSTR_PWM_INTEN, (const byte*)"\x48\x0c\x09" "PWM_INTEN")
QDEF(MP_QSTR_PWM_MASK, (const byte*)"\x64\xea\x08" "PWM_MASK")
QDEF(MP_QSTR_PWM_MCTRL, (const byte*)"\x54\x04\x09" "PWM_MCTRL")
QDEF(MP_QSTR_PWM_MCTRL2, (const byte*)"\xe6\x8e\x0a" "PWM_MCTRL2")
QDEF(MP_QSTR_PWM_OCTRL, (const byte*)"\x56\x45\x09" "PWM_OCTRL")
QDEF(MP_QSTR_PWM_OUTEN, (const byte*)"\x75\x2e\x09" "PWM_OUTEN")
QDEF(MP_QSTR_PWM_STS, (const byte*)"\xe4\x84\x07" "PWM_STS")
QDEF(MP_QSTR_PWM_SWCOUT, (const byte*)"\xd9\x9b\x0a" "PWM_SWCOUT")
QDEF(MP_QSTR_PWM_TCTRL, (const byte*)"\x8d\x6c\x09" "PWM_TCTRL")
QDEF(MP_QSTR_PWM_VAL0, (const byte*)"\x1b\x58\x08" "PWM_VAL0")
QDEF(MP_QSTR_PWM_VAL1, (const byte*)"\x1a\x58\x08" "PWM_VAL1")
QDEF(MP_QSTR_PWM_VAL2, (const byte*)"\x19\x58\x08" "PWM_VAL2")
QDEF(MP_QSTR_PWM_VAL3, (const byte*)"\x18\x58\x08" "PWM_VAL3")
QDEF(MP_QSTR_PWM_VAL4, (const byte*)"\x1f\x58\x08" "PWM_VAL4")
QDEF(MP_QSTR_PWM_VAL5, (const byte*)"\x1e\x58\x08" "PWM_VAL5")
QDEF(MP_QSTR_PXP, (const byte*)"\x3d\x0e\x03" "PXP")
QDEF(MP_QSTR_RDR_DATA_BF, (const byte*)"\xd5\x34\x0b" "RDR_DATA_BF")
QDEF(MP_QSTR_ROMC, (const byte*)"\x36\x02\x04" "ROMC")
QDEF(MP_QSTR_RSR_RXEMPTY, (const byte*)"\xd6\x3c\x0b" "RSR_RXEMPTY")
QDEF(MP_QSTR_RSR_SOF, (const byte*)"\x93\xe6\x07" "RSR_SOF")
QDEF(MP_QSTR_RTWDOG, (const byte*)"\x58\x31\x06" "RTWDOG")
QDEF(MP_QSTR_R_CDATA_BF, (const byte*)"\x60\x16\x0a" "R_CDATA_BF")
QDEF(MP_QSTR_SAI1, (const byte*)"\x6f\x87\x04" "SAI1")
QDEF(MP_QSTR_SAI2, (const byte*)"\x6c\x87\x04" "SAI2")
QDEF(MP_QSTR_SAI3, (const byte*)"\x6d\x87\x04" "SAI3")
QDEF(MP_QSTR_SAMR_ADDR0_BF, (const byte*)"\x0f\x0c\x0d" "SAMR_ADDR0_BF")
QDEF(MP_QSTR_SAMR_ADDR1_BF, (const byte*)"\x6e\x90\x0d" "SAMR_ADDR1_BF")
QDEF(MP_QSTR_SASR_ANV, (const byte*)"\x70\xaa\x08" "SASR_ANV")
QDEF(MP_QSTR_SASR_RADDR_BF, (const byte*)"\x93\xe4\x0d" "SASR_RADDR_BF")
QDEF(MP_QSTR_SCFGR1_ACKSTALL, (const byte*)"\xa7\x68\x0f" "SCFGR1_ACKSTALL")
QDEF(MP_QSTR_SCFGR1_ADDRCFG_BF, (const byte*)"\x42\xc7\x11" "SCFGR1_ADDRCFG_BF")
QDEF(MP_QSTR_SCFGR1_ADRSTALL, (const byte*)"\x59\x1e\x0f" "SCFGR1_ADRSTALL")
QDEF(MP_QSTR_SCFGR1_GCEN, (const byte*)"\xe7\xc9\x0b" "SCFGR1_GCEN")
QDEF(MP_QSTR_SCFGR1_HSMEN, (const byte*)"\x35\xd2\x0c" "SCFGR1_HSMEN")
QDEF(MP_QSTR_SCFGR1_IGNACK, (const byte*)"\xa1\xec\x0d" "SCFGR1_IGNACK")
QDEF(MP_QSTR_SCFGR1_RXCFG, (const byte*)"\xa0\x58\x0c" "SCFGR1_RXCFG")
QDEF(MP_QSTR_SCFGR1_RXSTALL, (const byte*)"\x64\xdc\x0e" "SCFGR1_RXSTALL")
QDEF(MP_QSTR_SCFGR1_SAEN, (const byte*)"\x71\x78\x0b" "SCFGR1_SAEN")
QDEF(MP_QSTR_SCFGR1_TXCFG, (const byte*)"\x26\xda\x0c" "SCFGR1_TXCFG")
QDEF(MP_QSTR_SCFGR1_TXDSTALL, (const byte*)"\xa6\x49\x0f" "SCFGR1_TXDSTALL")
QDEF(MP_QSTR_SCFGR2_CLKHOLD_BF, (const byte*)"\x3b\x2e\x11" "SCFGR2_CLKHOLD_BF")
QDEF(MP_QSTR_SCFGR2_DATAVD_BF, (const byte*)"\xf2\x57\x10" "SCFGR2_DATAVD_BF")
QDEF(MP_QSTR_SCFGR2_FILTSCL_BF, (const byte*)"\x7b\xce\x11" "SCFGR2_FILTSCL_BF")
QDEF(MP_QSTR_SCFGR2_FILTSDA_BF, (const byte*)"\x11\x59\x11" "SCFGR2_FILTSDA_BF")
QDEF(MP_QSTR_SCR_FILTDZ, (const byte*)"\xb1\x84\x0a" "SCR_FILTDZ")
QDEF(MP_QSTR_SCR_FILTEN, (const byte*)"\x84\x84\x0a" "SCR_FILTEN")
QDEF(MP_QSTR_SCR_RRF, (const byte*)"\xfe\xb7\x07" "SCR_RRF")
QDEF(MP_QSTR_SCR_RST, (const byte*)"\x8d\xb7\x07" "SCR_RST")
QDEF(MP_QSTR_SCR_RTF, (const byte*)"\x38\xb8\x07" "SCR_RTF")
QDEF(MP_QSTR_SCR_SEN, (const byte*)"\x40\xcb\x07" "SCR_SEN")
QDEF(MP_QSTR_SCTRL_CAPTURE_MODE_BF, (const byte*)"\xa3\x0a\x15" "SCTRL_CAPTURE_MODE_BF")
QDEF(MP_QSTR_SCTRL_EEOF, (const byte*)"\xe9\x08\x0a" "SCTRL_EEOF")
QDEF(MP_QSTR_SCTRL_FORCE, (const byte*)"\xfd\x7d\x0b" "SCTRL_FORCE")
QDEF(MP_QSTR_SCTRL_IEF, (const byte*)"\xca\x40\x09" "SCTRL_IEF")
QDEF(MP_QSTR_SCTRL_IEFIE, (const byte*)"\xe6\xa2\x0b" "SCTRL_IEFIE")
QDEF(MP_QSTR_SCTRL_INPUT, (const byte*)"\x56\x0f\x0b" "SCTRL_INPUT")
QDEF(MP_QSTR_SCTRL_IPS, (const byte*)"\x6a\x42\x09" "SCTRL_IPS")
QDEF(MP_QSTR_SCTRL_MSTR, (const byte*)"\x18\xb4\x0a" "SCTRL_MSTR")
QDEF(MP_QSTR_SCTRL_OEN, (const byte*)"\xc4\x69\x09" "SCTRL_OEN")
QDEF(MP_QSTR_SCTRL_OPS, (const byte*)"\x6c\x6c\x09" "SCTRL_OPS")
QDEF(MP_QSTR_SCTRL_TCF, (const byte*)"\x91\x7f\x09" "SCTRL_TCF")
QDEF(MP_QSTR_SCTRL_TCFIE, (const byte*)"\xbd\xb0\x0b" "SCTRL_TCFIE")
QDEF(MP_QSTR_SCTRL_TOF, (const byte*)"\x1d\x80\x09" "SCTRL_TOF")
QDEF(MP_QSTR_SCTRL_TOFIE, (const byte*)"\x31\x02\x0b" "SCTRL_TOFIE")
QDEF(MP_QSTR_SCTRL_VAL, (const byte*)"\xdb\x77\x09" "SCTRL_VAL")
QDEF(MP_QSTR_SDER_AVDE, (const byte*)"\xcc\x10\x09" "SDER_AVDE")
QDEF(MP_QSTR_SDER_RDDE, (const byte*)"\xad\xf1\x09" "SDER_RDDE")
QDEF(MP_QSTR_SDER_TDDE, (const byte*)"\xeb\x3b\x09" "SDER_TDDE")
QDEF(MP_QSTR_SEMC, (const byte*)"\x9d\x76\x04" "SEMC")
QDEF(MP_QSTR_SIER_AM0IE, (const byte*)"\x87\xcf\x0a" "SIER_AM0IE")
QDEF(MP_QSTR_SIER_AM1F, (const byte*)"\xec\xdf\x09" "SIER_AM1F")
QDEF(MP_QSTR_SIER_AVIE, (const byte*)"\x8c\x63\x09" "SIER_AVIE")
QDEF(MP_QSTR_SIER_BEIE, (const byte*)"\xfc\x1f\x09" "SIER_BEIE")
QDEF(MP_QSTR_SIER_FEIE, (const byte*)"\x78\x10\x09" "SIER_FEIE")
QDEF(MP_QSTR_SIER_GCIE, (const byte*)"\xdf\x73\x09" "SIER_GCIE")
QDEF(MP_QSTR_SIER_RDIE, (const byte*)"\xed\x5d\x09" "SIER_RDIE")
QDEF(MP_QSTR_SIER_RSIE, (const byte*)"\xfa\xc7\x09" "SIER_RSIE")
QDEF(MP_QSTR_SIER_SARIE, (const byte*)"\xbb\xae\x0a" "SIER_SARIE")
QDEF(MP_QSTR_SIER_SDIE, (const byte*)"\xcc\xc1\x09" "SIER_SDIE")
QDEF(MP_QSTR_SIER_TAIE, (const byte*)"\x2e\x31\x09" "SIER_TAIE")
QDEF(MP_QSTR_SIER_TDIE, (const byte*)"\x2b\x46\x09" "SIER_TDIE")
QDEF(MP_QSTR_SNVS, (const byte*)"\x3d\x89\x04" "SNVS")
QDEF(MP_QSTR_SPDIF, (const byte*)"\x8d\x1b\x05" "SPDIF")
QDEF(MP_QSTR_SRC, (const byte*)"\x27\x11\x03" "SRC")
QDEF(MP_QSTR_SRDR_DATA_BF, (const byte*)"\xc6\x76\x0c" "SRDR_DATA_BF")
QDEF(MP_QSTR_SRDR_RXEMPTY, (const byte*)"\xf2\x0d\x0c" "SRDR_RXEMPTY")
QDEF(MP_QSTR_SRDR_SOF, (const byte*)"\xb7\x57\x08" "SRDR_SOF")
QDEF(MP_QSTR_SR_DMF, (const byte*)"\x74\xf3\x06" "SR_DMF")
QDEF(MP_QSTR_SR_FCF, (const byte*)"\xb8\xdb\x06" "SR_FCF")
QDEF(MP_QSTR_SR_MBF, (const byte*)"\x12\xce\x06" "SR_MBF")
QDEF(MP_QSTR_SR_RDF, (const byte*)"\x0b\x87\x06" "SR_RDF")
QDEF(MP_QSTR_SR_REF, (const byte*)"\x6a\x87\x06" "SR_REF")
QDEF(MP_QSTR_SR_TCF, (const byte*)"\x2a\xb0\x06" "SR_TCF")
QDEF(MP_QSTR_SR_TDF, (const byte*)"\x0d\xb0\x06" "SR_TDF")
QDEF(MP_QSTR_SR_TEF, (const byte*)"\x6c\xb0\x06" "SR_TEF")
QDEF(MP_QSTR_SR_WCF, (const byte*)"\xa9\x93\x06" "SR_WCF")
QDEF(MP_QSTR_SSR_AM0F, (const byte*)"\xf2\xd5\x08" "SSR_AM0F")
QDEF(MP_QSTR_SSR_AM1F, (const byte*)"\x93\xd5\x08" "SSR_AM1F")
QDEF(MP_QSTR_SSR_AVF, (const byte*)"\x39\xf2\x07" "SSR_AVF")
QDEF(MP_QSTR_SSR_BBF, (const byte*)"\xee\xf3\x07" "SSR_BBF")
QDEF(MP_QSTR_SSR_BEF, (const byte*)"\xc9\xf4\x07" "SSR_BEF")
QDEF(MP_QSTR_SSR_FEF, (const byte*)"\xcd\x04\x07" "SSR_FEF")
QDEF(MP_QSTR_SSR_GCF, (const byte*)"\x0a\x19\x07" "SSR_GCF")
QDEF(MP_QSTR_SSR_RDF, (const byte*)"\x38\x38\x07" "SSR_RDF")
QDEF(MP_QSTR_SSR_RSF, (const byte*)"\x8f\x35\x07" "SSR_RSF")
QDEF(MP_QSTR_SSR_SARF, (const byte*)"\x8e\xe5\x08" "SSR_SARF")
QDEF(MP_QSTR_SSR_SBF, (const byte*)"\x3f\x4c\x07" "SSR_SBF")
QDEF(MP_QSTR_SSR_SDF, (const byte*)"\x79\x4d\x07" "SSR_SDF")
QDEF(MP_QSTR_SSR_TAF, (const byte*)"\x5b\x51\x07" "SSR_TAF")
QDEF(MP_QSTR_SSR_TDF, (const byte*)"\x3e\x50\x07" "SSR_TDF")
QDEF(MP_QSTR_STAR_TXNACK, (const byte*)"\x05\x0e\x0b" "STAR_TXNACK")
QDEF(MP_QSTR_STDR_DATA_BF, (const byte*)"\xc0\x62\x0c" "STDR_DATA_BF")
QDEF(MP_QSTR_STS_CFA0, (const byte*)"\x3a\xf2\x08" "STS_CFA0")
QDEF(MP_QSTR_STS_CFA1, (const byte*)"\x3b\xf2\x08" "STS_CFA1")
QDEF(MP_QSTR_STS_CFB0, (const byte*)"\xd9\xf1\x08" "STS_CFB0")
QDEF(MP_QSTR_STS_CFB1, (const byte*)"\xd8\xf1\x08" "STS_CFB1")
QDEF(MP_QSTR_STS_CFX0, (const byte*)"\x03\xf3\x08" "STS_CFX0")
QDEF(MP_QSTR_STS_CFX1, (const byte*)"\x02\xf3\x08" "STS_CFX1")
QDEF(MP_QSTR_STS_CMPF_BF, (const byte*)"\xad\xf1\x0b" "STS_CMPF_BF")
QDEF(MP_QSTR_STS_REF, (const byte*)"\x7f\x18\x07" "STS_REF")
QDEF(MP_QSTR_STS_RF, (const byte*)"\x1a\x75\x06" "STS_RF")
QDEF(MP_QSTR_STS_RUF, (const byte*)"\x6f\x16\x07" "STS_RUF")
QDEF(MP_QSTR_SWCOUT_SM0OUT23, (const byte*)"\xd2\x30\x0f" "SWCOUT_SM0OUT23")
QDEF(MP_QSTR_SWCOUT_SM0OUT45, (const byte*)"\x92\x31\x0f" "SWCOUT_SM0OUT45")
QDEF(MP_QSTR_SWCOUT_SM1OUT23, (const byte*)"\x33\x41\x0f" "SWCOUT_SM1OUT23")
QDEF(MP_QSTR_SWCOUT_SM1OUT45, (const byte*)"\xf3\x41\x0f" "SWCOUT_SM1OUT45")
QDEF(MP_QSTR_SWCOUT_SM2OUT23, (const byte*)"\x90\x00\x0f" "SWCOUT_SM2OUT23")
QDEF(MP_QSTR_SWCOUT_SM2OUT45, (const byte*)"\xd0\x00\x0f" "SWCOUT_SM2OUT45")
QDEF(MP_QSTR_SWCOUT_SM3OUT23, (const byte*)"\xf1\xcf\x0f" "SWCOUT_SM3OUT23")
QDEF(MP_QSTR_SWCOUT_SM3OUT45, (const byte*)"\x31\xd0\x0f" "SWCOUT_SM3OUT45")
QDEF(MP_QSTR_TCR_BYSW, (const byte*)"\x60\x6d\x08" "TCR_BYSW")
QDEF(MP_QSTR_TCR_CONT, (const byte*)"\xe9\x33\x08" "TCR_CONT")
QDEF(MP_QSTR_TCR_CONTC, (const byte*)"\x4a\xb1\x09" "TCR_CONTC")
QDEF(MP_QSTR_TCR_CPHA, (const byte*)"\xe5\x13\x08" "TCR_CPHA")
QDEF(MP_QSTR_TCR_CPOL, (const byte*)"\xcf\x13\x08" "TCR_CPOL")
QDEF(MP_QSTR_TCR_FRAMESZ_BF, (const byte*)"\x10\x91\x0e" "TCR_FRAMESZ_BF")
QDEF(MP_QSTR_TCR_LSBF, (const byte*)"\x84\x18\x08" "TCR_LSBF")
QDEF(MP_QSTR_TCR_PCS_BF, (const byte*)"\xe4\xfd\x0a" "TCR_PCS_BF")
QDEF(MP_QSTR_TCR_PRESCALE_BF, (const byte*)"\xdb\x4a\x0f" "TCR_PRESCALE_BF")
QDEF(MP_QSTR_TCR_RXMSK, (const byte*)"\xc0\x56\x09" "TCR_RXMSK")
QDEF(MP_QSTR_TCR_TXMSK, (const byte*)"\x46\x88\x09" "TCR_TXMSK")
QDEF(MP_QSTR_TCR_WIDTH_BF, (const byte*)"\xa2\x16\x0c" "TCR_WIDTH_BF")
QDEF(MP_QSTR_TCTRL_OUT_TRIG_EN_BF, (const byte*)"\x31\xc2\x14" "TCTRL_OUT_TRIG_EN_BF")
QDEF(MP_QSTR_TCTRL_PWAOT0, (const byte*)"\xca\xd1\x0c" "TCTRL_PWAOT0")
QDEF(MP_QSTR_TCTRL_PWBOT1, (const byte*)"\x68\x76\x0c" "TCTRL_PWBOT1")
QDEF(MP_QSTR_TCTRL_TRGFRQ, (const byte*)"\xa3\xab\x0c" "TCTRL_TRGFRQ")
QDEF(MP_QSTR_TDR_DATA_BF, (const byte*)"\xd3\xcd\x0b" "TDR_DATA_BF")
QDEF(MP_QSTR_TEMPMON, (const byte*)"\xa5\xe8\x07" "TEMPMON")
QDEF(MP_QSTR_TMR1, (const byte*)"\x7f\xf1\x04" "TMR1")
QDEF(MP_QSTR_TMR2, (const byte*)"\x7c\xf1\x04" "TMR2")
QDEF(MP_QSTR_TMR3, (const byte*)"\x7d\xf1\x04" "TMR3")
QDEF(MP_QSTR_TMR4, (const byte*)"\x7a\xf1\x04" "TMR4")
QDEF(MP_QSTR_TMR_CAPT, (const byte*)"\x37\xc0\x08" "TMR_CAPT")
QDEF(MP_QSTR_TMR_CMPLD1, (const byte*)"\x96\x50\x0a" "TMR_CMPLD1")
QDEF(MP_QSTR_TMR_CMPLD2, (const byte*)"\x95\x50\x0a" "TMR_CMPLD2")
QDEF(MP_QSTR_TMR_CNTR, (const byte*)"\x7a\xe6\x08" "TMR_CNTR")
QDEF(MP_QSTR_TMR_COMP1, (const byte*)"\xb1\x6b\x09" "TMR_COMP1")
QDEF(MP_QSTR_TMR_COMP2, (const byte*)"\xb2\x6b\x09" "TMR_COMP2")
QDEF(MP_QSTR_TMR_CSCTRL, (const byte*)"\x08\x9a\x0a" "TMR_CSCTRL")
QDEF(MP_QSTR_TMR_CTRL, (const byte*)"\x38\x9d\x08" "TMR_CTRL")
QDEF(MP_QSTR_TMR_DMA, (const byte*)"\x19\xcd\x07" "TMR_DMA")
QDEF(MP_QSTR_TMR_ENBL, (const byte*)"\xf4\xcf\x08" "TMR_ENBL")
QDEF(MP_QSTR_TMR_FILT, (const byte*)"\x86\x77\x08" "TMR_FILT")
QDEF(MP_QSTR_TMR_HOLD, (const byte*)"\x5e\x99\x08" "TMR_HOLD")
QDEF(MP_QSTR_TMR_LOAD, (const byte*)"\x77\xa8\x08" "TMR_LOAD")
QDEF(MP_QSTR_TMR_SCTRL, (const byte*)"\xcb\xdb\x09" "TMR_SCTRL")
QDEF(MP_QSTR_TRNG, (const byte*)"\xca\x9a\x04" "TRNG")
QDEF(MP_QSTR_TSC, (const byte*)"\xc1\xfc\x03" "TSC")
QDEF(MP_QSTR_USB1, (const byte*)"\x50\xf0\x04" "USB1")
QDEF(MP_QSTR_USB2, (const byte*)"\x53\xf0\x04" "USB2")
QDEF(MP_QSTR_USBNC1, (const byte*)"\xfd\xbf\x06" "USBNC1")
QDEF(MP_QSTR_USBNC2, (const byte*)"\xfe\xbf\x06" "USBNC2")
QDEF(MP_QSTR_USBPHY1, (const byte*)"\x51\xe5\x07" "USBPHY1")
QDEF(MP_QSTR_USBPHY2, (const byte*)"\x52\xe5\x07" "USBPHY2")
QDEF(MP_QSTR_USB_ANALOG, (const byte*)"\xd4\x05\x0a" "USB_ANALOG")
QDEF(MP_QSTR_USDHC1, (const byte*)"\xbd\x00\x06" "USDHC1")
QDEF(MP_QSTR_USDHC2, (const byte*)"\xbe\x00\x06" "USDHC2")
QDEF(MP_QSTR_VAL0_VAL0_BF, (const byte*)"\x01\xaa\x0c" "VAL0_VAL0_BF")
QDEF(MP_QSTR_VAL1_VAL1_BF, (const byte*)"\xe1\xfe\x0c" "VAL1_VAL1_BF")
QDEF(MP_QSTR_VAL2_VAL2_BF, (const byte*)"\xc1\x90\x0c" "VAL2_VAL2_BF")
QDEF(MP_QSTR_VAL3_VAL3_BF, (const byte*)"\xa1\x84\x0c" "VAL3_VAL3_BF")
QDEF(MP_QSTR_VAL4_VAL4_BF, (const byte*)"\x81\x39\x0c" "VAL4_VAL4_BF")
QDEF(MP_QSTR_VAL5_VAL5_BF, (const byte*)"\x61\x8e\x0c" "VAL5_VAL5_BF")
QDEF(MP_QSTR_VERID_FEATURE_BF, (const byte*)"\x39\x9d\x10" "VERID_FEATURE_BF")
QDEF(MP_QSTR_VERID_MAJOR_BF, (const byte*)"\x36\x86\x0e" "VERID_MAJOR_BF")
QDEF(MP_QSTR_VERID_MINOR_BF, (const byte*)"\xba\xe6\x0e" "VERID_MINOR_BF")
QDEF(MP_QSTR_WDOG1, (const byte*)"\xaf\xce\x05" "WDOG1")
QDEF(MP_QSTR_WDOG2, (const byte*)"\xac\xce\x05" "WDOG2")
QDEF(MP_QSTR_XBARA1, (const byte*)"\xfc\x94\x06" "XBARA1")
QDEF(MP_QSTR_XBARB2, (const byte*)"\xdc\x94\x06" "XBARB2")
QDEF(MP_QSTR_XBARB3, (const byte*)"\xdd\x94\x06" "XBARB3")
QDEF(MP_QSTR_XTALOSC24M, (const byte*)"\x30\x68\x0a" "XTALOSC24M")
QDEF(MP_QSTR_omv, (const byte*)"\x31\x5c\x03" "omv")
QDEF(MP_QSTR_version_major, (const byte*)"\x7b\x35\x0d" "version_major")
QDEF(MP_QSTR_version_minor, (const byte*)"\x77\x04\x0d" "version_minor")
QDEF(MP_QSTR_version_patch, (const byte*)"\x6e\x6d\x0d" "version_patch")
QDEF(MP_QSTR_version_string, (const byte*)"\xf5\xcf\x0e" "version_string")
QDEF(MP_QSTR_arch, (const byte*)"\x5d\xc7\x04" "arch")
QDEF(MP_QSTR_board_type, (const byte*)"\x98\x4f\x0a" "board_type")
QDEF(MP_QSTR_board_id, (const byte*)"\xed\x71\x08" "board_id")
QDEF(MP_QSTR_image, (const byte*)"\x42\xa0\x05" "image")
QDEF(MP_QSTR_binary_to_grayscale, (const byte*)"\x44\xa7\x13" "binary_to_grayscale")
QDEF(MP_QSTR_binary_to_rgb, (const byte*)"\xe6\xc7\x0d" "binary_to_rgb")
QDEF(MP_QSTR_binary_to_lab, (const byte*)"\x3e\x46\x0d" "binary_to_lab")
QDEF(MP_QSTR_binary_to_yuv, (const byte*)"\x6b\xf8\x0d" "binary_to_yuv")
QDEF(MP_QSTR_grayscale_to_binary, (const byte*)"\xc4\xf1\x13" "grayscale_to_binary")
QDEF(MP_QSTR_grayscale_to_rgb, (const byte*)"\x7c\xfd\x10" "grayscale_to_rgb")
QDEF(MP_QSTR_grayscale_to_lab, (const byte*)"\x24\x9f\x10" "grayscale_to_lab")
QDEF(MP_QSTR_grayscale_to_yuv, (const byte*)"\x71\xd5\x10" "grayscale_to_yuv")
QDEF(MP_QSTR_rgb_to_binary, (const byte*)"\xe6\xd1\x0d" "rgb_to_binary")
QDEF(MP_QSTR_rgb_to_grayscale, (const byte*)"\xfc\xc1\x10" "rgb_to_grayscale")
QDEF(MP_QSTR_rgb_to_lab, (const byte*)"\xc6\x91\x0a" "rgb_to_lab")
QDEF(MP_QSTR_rgb_to_yuv, (const byte*)"\x13\xc7\x0a" "rgb_to_yuv")
QDEF(MP_QSTR_lab_to_binary, (const byte*)"\x3e\x29\x0d" "lab_to_binary")
QDEF(MP_QSTR_lab_to_grayscale, (const byte*)"\xa4\x95\x10" "lab_to_grayscale")
QDEF(MP_QSTR_lab_to_rgb, (const byte*)"\x46\x56\x0a" "lab_to_rgb")
QDEF(MP_QSTR_lab_to_yuv, (const byte*)"\xcb\x65\x0a" "lab_to_yuv")
QDEF(MP_QSTR_yuv_to_binary, (const byte*)"\xab\xa5\x0d" "yuv_to_binary")
QDEF(MP_QSTR_yuv_to_grayscale, (const byte*)"\x51\x41\x10" "yuv_to_grayscale")
QDEF(MP_QSTR_yuv_to_rgb, (const byte*)"\x33\x0d\x0a" "yuv_to_rgb")
QDEF(MP_QSTR_yuv_to_lab, (const byte*)"\x6b\xe3\x0a" "yuv_to_lab")
QDEF(MP_QSTR_HaarCascade, (const byte*)"\x6d\xe8\x0b" "HaarCascade")
QDEF(MP_QSTR_search, (const byte*)"\xab\xc1\x06" "search")
QDEF(MP_QSTR_SEARCH_EX, (const byte*)"\xa9\x97\x09" "SEARCH_EX")
QDEF(MP_QSTR_SEARCH_DS, (const byte*)"\x83\x97\x09" "SEARCH_DS")
QDEF(MP_QSTR_EDGE_CANNY, (const byte*)"\x02\x57\x0a" "EDGE_CANNY")
QDEF(MP_QSTR_EDGE_SIMPLE, (const byte*)"\x17\x47\x0b" "EDGE_SIMPLE")
QDEF(MP_QSTR_CORNER_FAST, (const byte*)"\xfd\x2b\x0b" "CORNER_FAST")
QDEF(MP_QSTR_CORNER_AGAST, (const byte*)"\xbd\x23\x0c" "CORNER_AGAST")
QDEF(MP_QSTR_load_descriptor, (const byte*)"\x4f\x2f\x0f" "load_descriptor")
QDEF(MP_QSTR_save_descriptor, (const byte*)"\xa8\x37\x0f" "save_descriptor")
QDEF(MP_QSTR_match_descriptor, (const byte*)"\xda\x35\x10" "match_descriptor")
QDEF(MP_QSTR_find_template, (const byte*)"\x2f\x7f\x0d" "find_template")
QDEF(MP_QSTR_kp_desc, (const byte*)"\x10\xc7\x07" "kp_desc")
QDEF(MP_QSTR_lbp_desc, (const byte*)"\x15\xca\x08" "lbp_desc")
QDEF(MP_QSTR_Cascade, (const byte*)"\xf7\x46\x07" "Cascade")
QDEF(MP_QSTR_cmp_lbp, (const byte*)"\xfa\xfa\x07" "cmp_lbp")
QDEF(MP_QSTR_find_features, (const byte*)"\xf8\x12\x0d" "find_features")
QDEF(MP_QSTR_find_keypoints, (const byte*)"\x57\xb6\x0e" "find_keypoints")
QDEF(MP_QSTR_find_lbp, (const byte*)"\x81\xa4\x08" "find_lbp")
QDEF(MP_QSTR_find_eye, (const byte*)"\x26\xc8\x08" "find_eye")
QDEF(MP_QSTR_find_edges, (const byte*)"\x6f\x1a\x0a" "find_edges")
QDEF(MP_QSTR_find_hog, (const byte*)"\x3f\xb6\x08" "find_hog")
QDEF(MP_QSTR_normalized, (const byte*)"\xa4\xa6\x0a" "normalized")
QDEF(MP_QSTR_filter_outliers, (const byte*)"\x55\xeb\x0f" "filter_outliers")
QDEF(MP_QSTR_scale_factor, (const byte*)"\x8f\x49\x0c" "scale_factor")
QDEF(MP_QSTR_max_keypoints, (const byte*)"\x26\xd1\x0d" "max_keypoints")
QDEF(MP_QSTR_corner_detector, (const byte*)"\x47\x24\x0f" "corner_detector")
QDEF(MP_QSTR_kptmatch, (const byte*)"\xb9\x42\x08" "kptmatch")
QDEF(MP_QSTR_selective_search, (const byte*)"\x86\xcb\x10" "selective_search")
QDEF(MP_QSTR_a1, (const byte*)"\x75\x6e\x02" "a1")
QDEF(MP_QSTR_a2, (const byte*)"\x76\x6e\x02" "a2")
QDEF(MP_QSTR_a3, (const byte*)"\x77\x6e\x02" "a3")
QDEF(MP_QSTR_lcd, (const byte*)"\xae\x3f\x03" "lcd")
QDEF(MP_QSTR_set_backlight, (const byte*)"\xcd\xbe\x0d" "set_backlight")
QDEF(MP_QSTR_get_backlight, (const byte*)"\xd9\xac\x0d" "get_backlight")
QDEF(MP_QSTR_display, (const byte*)"\x1f\x55\x07" "display")
QDEF(MP_QSTR_tv, (const byte*)"\x87\x6f\x02" "tv")
QDEF(MP_QSTR_channel, (const byte*)"\x26\x91\x07" "channel")
QDEF(MP_QSTR_palettes, (const byte*)"\xab\xac\x08" "palettes")
QDEF(MP_QSTR_gif, (const byte*)"\xad\x3b\x03" "gif")
QDEF(MP_QSTR_Gif, (const byte*)"\xcd\xbb\x03" "Gif")
QDEF(MP_QSTR_add_frame, (const byte*)"\xa6\xc1\x09" "add_frame")
QDEF(MP_QSTR_loop, (const byte*)"\x39\x24\x04" "loop")
QDEF(MP_QSTR_mjpeg, (const byte*)"\xf0\x2b\x05" "mjpeg")
QDEF(MP_QSTR_Mjpeg, (const byte*)"\x10\x2b\x05" "Mjpeg")
QDEF(MP_QSTR_led, (const byte*)"\x68\x40\x03" "led")
QDEF(MP_QSTR_RED, (const byte*)"\x96\x06\x03" "RED")
QDEF(MP_QSTR_GREEN, (const byte*)"\xde\x98\x05" "GREEN")
QDEF(MP_QSTR_BLUE, (const byte*)"\x3b\x3b\x04" "BLUE")
QDEF(MP_QSTR_IR, (const byte*)"\x3e\x73\x02" "IR")
QDEF(MP_QSTR_on, (const byte*)"\x64\x6f\x02" "on")
QDEF(MP_QSTR_off, (const byte*)"\x8a\x5c\x03" "off")
QDEF(MP_QSTR_toggle, (const byte*)"\xb7\x43\x06" "toggle")
QDEF(MP_QSTR_time, (const byte*)"\xf0\xc1\x04" "time")
QDEF(MP_QSTR_ticks, (const byte*)"\x43\x08\x05" "ticks")
QDEF(MP_QSTR_sleep, (const byte*)"\xea\x27\x05" "sleep")
QDEF(MP_QSTR_clock, (const byte*)"\x2d\x65\x05" "clock")
QDEF(MP_QSTR_Clock, (const byte*)"\x4d\x86\x05" "Clock")
QDEF(MP_QSTR_tick, (const byte*)"\x30\xc2\x04" "tick")
QDEF(MP_QSTR_fps, (const byte*)"\xc0\x38\x03" "fps")
QDEF(MP_QSTR_avg, (const byte*)"\x15\x34\x03" "avg")
QDEF(MP_QSTR_sensor, (const byte*)"\x53\xcc\x06" "sensor")
QDEF(MP_QSTR_BINARY, (const byte*)"\xca\x52\x06" "BINARY")
QDEF(MP_QSTR_GRAYSCALE, (const byte*)"\x70\x1b\x09" "GRAYSCALE")
QDEF(MP_QSTR_RGB565, (const byte*)"\x64\xcc\x06" "RGB565")
QDEF(MP_QSTR_YUV422, (const byte*)"\x0b\xfa\x06" "YUV422")
QDEF(MP_QSTR_BAYER, (const byte*)"\xa8\xfd\x05" "BAYER")
QDEF(MP_QSTR_JPEG, (const byte*)"\x3d\xce\x04" "JPEG")
QDEF(MP_QSTR_OV9650, (const byte*)"\x76\x56\x06" "OV9650")
QDEF(MP_QSTR_OV2640, (const byte*)"\x3c\x45\x06" "OV2640")
QDEF(MP_QSTR_OV7725, (const byte*)"\x5b\xb5\x06" "OV7725")
QDEF(MP_QSTR_MT9V034, (const byte*)"\xc4\x53\x07" "MT9V034")
QDEF(MP_QSTR_LEPTON, (const byte*)"\xa9\x99\x06" "LEPTON")
QDEF(MP_QSTR_shutdown, (const byte*)"\xed\x80\x08" "shutdown")
QDEF(MP_QSTR_load, (const byte*)"\x63\x24\x04" "load")
QDEF(MP_QSTR_Net, (const byte*)"\x9a\xd8\x03" "Net")
QDEF(MP_QSTR_forward, (const byte*)"\x1e\x40\x07" "forward")
QDEF(MP_QSTR_dry_run, (const byte*)"\xfc\x16\x07" "dry_run")
QDEF(MP_QSTR_softmax, (const byte*)"\xdf\xbb\x07" "softmax")
QDEF(MP_QSTR_min_scale, (const byte*)"\x88\xbc\x09" "min_scale")
QDEF(MP_QSTR_scale_mul, (const byte*)"\x96\xde\x09" "scale_mul")
QDEF(MP_QSTR_x_overlap, (const byte*)"\x71\x18\x09" "x_overlap")
QDEF(MP_QSTR_y_overlap, (const byte*)"\xb0\x0f\x09" "y_overlap")
QDEF(MP_QSTR_contrast_threshold, (const byte*)"\xaf\x18\x12" "contrast_threshold")
QDEF(MP_QSTR_nn_class, (const byte*)"\xb4\xbb\x08" "nn_class")
QDEF(MP_QSTR_QQCIF, (const byte*)"\xa9\x2a\x05" "QQCIF")
QDEF(MP_QSTR_QCIF, (const byte*)"\x58\x67\x04" "QCIF")
QDEF(MP_QSTR_CIF, (const byte*)"\x89\xd0\x03" "CIF")
QDEF(MP_QSTR_QQSIF, (const byte*)"\xb9\x6e\x05" "QQSIF")
QDEF(MP_QSTR_QSIF, (const byte*)"\x48\x23\x04" "QSIF")
QDEF(MP_QSTR_SIF, (const byte*)"\x99\x14\x03" "SIF")
QDEF(MP_QSTR_QQQQVGA, (const byte*)"\x95\x34\x07" "QQQQVGA")
QDEF(MP_QSTR_QQQVGA, (const byte*)"\x24\xec\x06" "QQQVGA")
QDEF(MP_QSTR_QQVGA, (const byte*)"\x75\x61\x05" "QQVGA")
QDEF(MP_QSTR_QVGA, (const byte*)"\x84\xfc\x04" "QVGA")
QDEF(MP_QSTR_VGA, (const byte*)"\xd5\xf6\x03" "VGA")
QDEF(MP_QSTR_HQQQVGA, (const byte*)"\x8c\x9a\x07" "HQQQVGA")
QDEF(MP_QSTR_HQQVGA, (const byte*)"\xdd\xf3\x06" "HQQVGA")
QDEF(MP_QSTR_HQVGA, (const byte*)"\xec\xd1\x05" "HQVGA")
QDEF(MP_QSTR_B64X32, (const byte*)"\xfc\xca\x06" "B64X32")
QDEF(MP_QSTR_B64X64, (const byte*)"\x5f\xca\x06" "B64X64")
QDEF(MP_QSTR_B128X64, (const byte*)"\xa6\x50\x07" "B128X64")
QDEF(MP_QSTR_B128X128, (const byte*)"\x9f\x69\x08" "B128X128")
QDEF(MP_QSTR_LCD, (const byte*)"\xce\xdc\x03" "LCD")
QDEF(MP_QSTR_QQVGA2, (const byte*)"\x27\x90\x06" "QQVGA2")
QDEF(MP_QSTR_WVGA, (const byte*)"\x42\x15\x04" "WVGA")
QDEF(MP_QSTR_WVGA2, (const byte*)"\xb0\xbd\x05" "WVGA2")
QDEF(MP_QSTR_SVGA, (const byte*)"\xc6\x25\x04" "SVGA")
QDEF(MP_QSTR_SXGA, (const byte*)"\x48\x70\x04" "SXGA")
QDEF(MP_QSTR_UXGA, (const byte*)"\x8e\x06\x04" "UXGA")
QDEF(MP_QSTR_NORMAL, (const byte*)"\xf6\x79\x06" "NORMAL")
QDEF(MP_QSTR_NEGATIVE, (const byte*)"\xe6\xf1\x08" "NEGATIVE")
QDEF(MP_QSTR_IOCTL_SET_TRIGGERED_MODE, (const byte*)"\x5f\xc0\x18" "IOCTL_SET_TRIGGERED_MODE")
QDEF(MP_QSTR_IOCTL_GET_TRIGGERED_MODE, (const byte*)"\xcb\xb1\x18" "IOCTL_GET_TRIGGERED_MODE")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_WIDTH, (const byte*)"\xfb\x7f\x16" "IOCTL_LEPTON_GET_WIDTH")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_HEIGHT, (const byte*)"\x82\x1c\x17" "IOCTL_LEPTON_GET_HEIGHT")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_RADIOMETRY, (const byte*)"\x7b\x88\x1b" "IOCTL_LEPTON_GET_RADIOMETRY")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_REFRESH, (const byte*)"\xc0\xcb\x18" "IOCTL_LEPTON_GET_REFRESH")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_RESOLUTION, (const byte*)"\x33\xf1\x1b" "IOCTL_LEPTON_GET_RESOLUTION")
QDEF(MP_QSTR_IOCTL_LEPTON_RUN_COMMAND, (const byte*)"\x85\xc6\x18" "IOCTL_LEPTON_RUN_COMMAND")
QDEF(MP_QSTR_IOCTL_LEPTON_SET_ATTRIBUTE, (const byte*)"\xd5\xc7\x1a" "IOCTL_LEPTON_SET_ATTRIBUTE")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_ATTRIBUTE, (const byte*)"\xc1\x09\x1a" "IOCTL_LEPTON_GET_ATTRIBUTE")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_FPA_TEMPERATURE, (const byte*)"\x59\xfc\x20" "IOCTL_LEPTON_GET_FPA_TEMPERATURE")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_AUX_TEMPERATURE, (const byte*)"\xa2\x8c\x20" "IOCTL_LEPTON_GET_AUX_TEMPERATURE")
QDEF(MP_QSTR_IOCTL_LEPTON_SET_MEASUREMENT_MODE, (const byte*)"\xbf\x6d\x21" "IOCTL_LEPTON_SET_MEASUREMENT_MODE")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_MEASUREMENT_MODE, (const byte*)"\x2b\x78\x21" "IOCTL_LEPTON_GET_MEASUREMENT_MODE")
QDEF(MP_QSTR_IOCTL_LEPTON_SET_MEASUREMENT_RANGE, (const byte*)"\xc3\x7e\x22" "IOCTL_LEPTON_SET_MEASUREMENT_RANGE")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_MEASUREMENT_RANGE, (const byte*)"\xd7\x85\x22" "IOCTL_LEPTON_GET_MEASUREMENT_RANGE")
QDEF(MP_QSTR_PALETTE_RAINBOW, (const byte*)"\x49\xc0\x0f" "PALETTE_RAINBOW")
QDEF(MP_QSTR_PALETTE_IRONBOW, (const byte*)"\xe7\x72\x0f" "PALETTE_IRONBOW")
QDEF(MP_QSTR_reset, (const byte*)"\x10\xf4\x05" "reset")
QDEF(MP_QSTR_flush, (const byte*)"\x61\xc1\x05" "flush")
QDEF(MP_QSTR_snapshot, (const byte*)"\x49\xb8\x08" "snapshot")
QDEF(MP_QSTR_skip_frames, (const byte*)"\x55\xcb\x0b" "skip_frames")
QDEF(MP_QSTR_get_fb, (const byte*)"\x08\x40\x06" "get_fb")
QDEF(MP_QSTR_get_id, (const byte*)"\xa1\x3f\x06" "get_id")
QDEF(MP_QSTR_alloc_extra_fb, (const byte*)"\xd6\xa4\x0e" "alloc_extra_fb")
QDEF(MP_QSTR_dealloc_extra_fb, (const byte*)"\xd7\x78\x10" "dealloc_extra_fb")
QDEF(MP_QSTR_set_pixformat, (const byte*)"\x3a\x5c\x0d" "set_pixformat")
QDEF(MP_QSTR_set_framerate, (const byte*)"\x47\x05\x0d" "set_framerate")
QDEF(MP_QSTR_set_framesize, (const byte*)"\x20\xa2\x0d" "set_framesize")
QDEF(MP_QSTR_set_vsync_output, (const byte*)"\x69\xb2\x10" "set_vsync_output")
QDEF(MP_QSTR_set_binning, (const byte*)"\x13\x30\x0b" "set_binning")
QDEF(MP_QSTR_set_windowing, (const byte*)"\xf4\x61\x0d" "set_windowing")
QDEF(MP_QSTR_set_gainceiling, (const byte*)"\xba\x38\x0f" "set_gainceiling")
QDEF(MP_QSTR_set_contrast, (const byte*)"\x5a\x7f\x0c" "set_contrast")
QDEF(MP_QSTR_set_brightness, (const byte*)"\x91\xbe\x0e" "set_brightness")
QDEF(MP_QSTR_set_saturation, (const byte*)"\x84\xfc\x0e" "set_saturation")
QDEF(MP_QSTR_set_quality, (const byte*)"\xd5\x79\x0b" "set_quality")
QDEF(MP_QSTR_set_colorbar, (const byte*)"\xd4\xed\x0c" "set_colorbar")
QDEF(MP_QSTR_set_auto_gain, (const byte*)"\xc9\x83\x0d" "set_auto_gain")
QDEF(MP_QSTR_gain_db, (const byte*)"\xdd\x07\x07" "gain_db")
QDEF(MP_QSTR_gain_db_ceiling, (const byte*)"\x61\xb7\x0f" "gain_db_ceiling")
QDEF(MP_QSTR_get_gain_db, (const byte*)"\xb4\xc8\x0b" "get_gain_db")
QDEF(MP_QSTR_set_auto_exposure, (const byte*)"\x1b\xd0\x11" "set_auto_exposure")
QDEF(MP_QSTR_exposure_us, (const byte*)"\x6f\x63\x0b" "exposure_us")
QDEF(MP_QSTR_get_exposure_us, (const byte*)"\x06\xc5\x0f" "get_exposure_us")
QDEF(MP_QSTR_set_auto_whitebal, (const byte*)"\x80\x67\x11" "set_auto_whitebal")
QDEF(MP_QSTR_rgb_gain_db, (const byte*)"\x75\x67\x0b" "rgb_gain_db")
QDEF(MP_QSTR_get_rgb_gain_db, (const byte*)"\xdc\x8b\x0f" "get_rgb_gain_db")
QDEF(MP_QSTR_set_hmirror, (const byte*)"\x69\x72\x0b" "set_hmirror")
QDEF(MP_QSTR_set_vflip, (const byte*)"\xdd\x73\x09" "set_vflip")
QDEF(MP_QSTR_set_special_effect, (const byte*)"\xd1\x2a\x12" "set_special_effect")
QDEF(MP_QSTR_set_lens_correction, (const byte*)"\xa5\x50\x13" "set_lens_correction")
QDEF(MP_QSTR_ioctl, (const byte*)"\x78\xc2\x05" "ioctl")
QDEF(MP_QSTR_set_color_palette, (const byte*)"\xa7\x5b\x11" "set_color_palette")
QDEF(MP_QSTR_get_color_palette, (const byte*)"\xb3\xb8\x11" "get_color_palette")
QDEF(MP_QSTR_P1, (const byte*)"\xa4\x74\x02" "P1")
QDEF(MP_QSTR_P2, (const byte*)"\xa7\x74\x02" "P2")
QDEF(MP_QSTR_P3, (const byte*)"\xa6\x74\x02" "P3")
QDEF(MP_QSTR_P4, (const byte*)"\xa1\x74\x02" "P4")
QDEF(MP_QSTR_P5, (const byte*)"\xa0\x74\x02" "P5")
QDEF(MP_QSTR_P6, (const byte*)"\xa3\x74\x02" "P6")
QDEF(MP_QSTR_PA1, (const byte*)"\x65\x0f\x03" "PA1")
QDEF(MP_QSTR_PA2, (const byte*)"\x66\x0f\x03" "PA2")
QDEF(MP_QSTR_PA3, (const byte*)"\x67\x0f\x03" "PA3")
QDEF(MP_QSTR_PA4, (const byte*)"\x60\x0f\x03" "PA4")
QDEF(MP_QSTR_PA5, (const byte*)"\x61\x0f\x03" "PA5")
QDEF(MP_QSTR_PA6, (const byte*)"\x62\x0f\x03" "PA6")
QDEF(MP_QSTR_PA7, (const byte*)"\x63\x0f\x03" "PA7")
QDEF(MP_QSTR_PA8, (const byte*)"\x6c\x0f\x03" "PA8")
QDEF(MP_QSTR_PB1, (const byte*)"\x86\x0f\x03" "PB1")
QDEF(MP_QSTR_PB2, (const byte*)"\x85\x0f\x03" "PB2")
QDEF(MP_QSTR_PB3, (const byte*)"\x84\x0f\x03" "PB3")
QDEF(MP_QSTR_PB4, (const byte*)"\x83\x0f\x03" "PB4")
QDEF(MP_QSTR_IN, (const byte*)"\x22\x73\x02" "IN")
QDEF(MP_QSTR_OUT, (const byte*)"\x0b\xe3\x03" "OUT")
QDEF(MP_QSTR_gpio, (const byte*)"\x54\xd8\x04" "gpio")
QDEF(MP_QSTR_GPIO, (const byte*)"\x14\xe0\x04" "GPIO")
QDEF(MP_QSTR_low, (const byte*)"\x31\x3f\x03" "low")
QDEF(MP_QSTR_high, (const byte*)"\x2b\x4c\x04" "high")
QDEF(MP_QSTR_spi, (const byte*)"\xcf\x8d\x03" "spi")
QDEF(MP_QSTR_write_image, (const byte*)"\xc0\xef\x0b" "write_image")
QDEF(MP_QSTR_uart, (const byte*)"\x77\x1a\x04" "uart")
QDEF(MP_QSTR_file, (const byte*)"\xc3\x34\x04" "file")
QDEF(MP_QSTR_wlan, (const byte*)"\x51\x8c\x04" "wlan")
QDEF(MP_QSTR_WEP, (const byte*)"\x07\x03\x03" "WEP")
QDEF(MP_QSTR_WPA, (const byte*)"\xe3\x00\x03" "WPA")
QDEF(MP_QSTR_WPA2, (const byte*)"\x71\x1d\x04" "WPA2")
QDEF(MP_QSTR_init, (const byte*)"\x1f\xb4\x04" "init")
QDEF(MP_QSTR_connect, (const byte*)"\xdb\x3d\x07" "connect")
QDEF(MP_QSTR_connected, (const byte*)"\x7a\x25\x09" "connected")
QDEF(MP_QSTR_ifconfig, (const byte*)"\xe0\x41\x08" "ifconfig")
QDEF(MP_QSTR_patch_version, (const byte*)"\x6e\x98\x0d" "patch_version")
QDEF(MP_QSTR_patch_program, (const byte*)"\x40\x73\x0d" "patch_program")
QDEF(MP_QSTR_socket, (const byte*)"\x60\xcc\x06" "socket")
QDEF(MP_QSTR_recv, (const byte*)"\xe7\xf9\x04" "recv")
QDEF(MP_QSTR_bind, (const byte*)"\x84\x64\x04" "bind")
QDEF(MP_QSTR_listen, (const byte*)"\xcc\x0e\x06" "listen")
QDEF(MP_QSTR_accept, (const byte*)"\x85\x89\x06" "accept")
QDEF(MP_QSTR_settimeout, (const byte*)"\xdc\x8a\x0a" "settimeout")
QDEF(MP_QSTR_setblocking, (const byte*)"\x6e\x18\x0b" "setblocking")
QDEF(MP_QSTR_select, (const byte*)"\x8d\x41\x06" "select")
QDEF(MP_QSTR_AF_INET, (const byte*)"\xeb\xb7\x07" "AF_INET")
QDEF(MP_QSTR_AF_INET6, (const byte*)"\x7d\xb5\x08" "AF_INET6")
QDEF(MP_QSTR_SOCK_STREAM, (const byte*)"\x32\xbe\x0b" "SOCK_STREAM")
QDEF(MP_QSTR_SOCK_DGRAM, (const byte*)"\xb3\x14\x0a" "SOCK_DGRAM")
QDEF(MP_QSTR_SOCK_RAW, (const byte*)"\xca\x96\x08" "SOCK_RAW")
QDEF(MP_QSTR_IPPROTO_IP, (const byte*)"\x0c\x8e\x0a" "IPPROTO_IP")
QDEF(MP_QSTR_IPPROTO_ICMP, (const byte*)"\xa2\x87\x0c" "IPPROTO_ICMP")
QDEF(MP_QSTR_IPPROTO_IPV4, (const byte*)"\x2e\x4b\x0c" "IPPROTO_IPV4")
QDEF(MP_QSTR_IPPROTO_TCP, (const byte*)"\xb2\xde\x0b" "IPPROTO_TCP")
QDEF(MP_QSTR_IPPROTO_UDP, (const byte*)"\x54\xdb\x0b" "IPPROTO_UDP")
QDEF(MP_QSTR_IPPROTO_IPV6, (const byte*)"\x2c\x4b\x0c" "IPPROTO_IPV6")
QDEF(MP_QSTR_IPPROTO_RAW, (const byte*)"\xf1\x08\x0b" "IPPROTO_RAW")
QDEF(MP_QSTR_WINC, (const byte*)"\x76\x76\x04" "WINC")
QDEF(MP_QSTR_start_ap, (const byte*)"\x4b\xeb\x08" "start_ap")
QDEF(MP_QSTR_disconnect, (const byte*)"\xa5\x85\x0a" "disconnect")
QDEF(MP_QSTR_isconnected, (const byte*)"\x80\x99\x0b" "isconnected")
QDEF(MP_QSTR_connected_sta, (const byte*)"\x63\xc9\x0d" "connected_sta")
QDEF(MP_QSTR_wait_for_sta, (const byte*)"\x33\x41\x0c" "wait_for_sta")
QDEF(MP_QSTR_fw_version, (const byte*)"\x71\x22\x0a" "fw_version")
QDEF(MP_QSTR_fw_dump, (const byte*)"\x67\xa5\x07" "fw_dump")
QDEF(MP_QSTR_fw_update, (const byte*)"\x3a\x19\x09" "fw_update")
QDEF(MP_QSTR_scan, (const byte*)"\x1a\x8e\x04" "scan")
QDEF(MP_QSTR_rssi, (const byte*)"\x7e\xb0\x04" "rssi")
QDEF(MP_QSTR_OPEN, (const byte*)"\x91\x42\x04" "OPEN")
QDEF(MP_QSTR_WPA_PSK, (const byte*)"\xb4\x1d\x07" "WPA_PSK")
QDEF(MP_QSTR_802_1X, (const byte*)"\x69\xe4\x06" "802_1X")
QDEF(MP_QSTR_MODE_STA, (const byte*)"\x5f\xe2\x08" "MODE_STA")
QDEF(MP_QSTR_MODE_AP, (const byte*)"\x88\x17\x07" "MODE_AP")
QDEF(MP_QSTR_MODE_P2P, (const byte*)"\x6b\xd1\x08" "MODE_P2P")
QDEF(MP_QSTR_MODE_BSP, (const byte*)"\x38\x25\x08" "MODE_BSP")
QDEF(MP_QSTR_MODE_FIRMWARE, (const byte*)"\x88\x75\x0d" "MODE_FIRMWARE")
QDEF(MP_QSTR_ssid, (const byte*)"\x08\x4b\x04" "ssid")
QDEF(MP_QSTR_security, (const byte*)"\x93\x48\x08" "security")
QDEF(MP_QSTR_bssid, (const byte*)"\x4a\x3c\x05" "bssid")
QDEF(MP_QSTR_cpufreq, (const byte*)"\x23\xc3\x07" "cpufreq")
QDEF(MP_QSTR_set_frequency, (const byte*)"\x5c\x34\x0d" "set_frequency")
QDEF(MP_QSTR_get_current_frequencies, (const byte*)"\x18\x63\x17" "get_current_frequencies")
QDEF(MP_QSTR_get_supported_frequencies, (const byte*)"\x3f\x40\x19" "get_supported_frequencies")
QDEF(MP_QSTR_Image, (const byte*)"\x62\xa0\x05" "Image")
QDEF(MP_QSTR_copy_to_fb, (const byte*)"\xbf\x58\x0a" "copy_to_fb")
QDEF(MP_QSTR_width, (const byte*)"\x23\x75\x05" "width")
QDEF(MP_QSTR_height, (const byte*)"\xfa\x33\x06" "height")
QDEF(MP_QSTR_size, (const byte*)"\x20\xa5\x04" "size")
QDEF(MP_QSTR_get_pixel, (const byte*)"\xa4\x17\x09" "get_pixel")
QDEF(MP_QSTR_rgbtuple, (const byte*)"\x6a\x9a\x08" "rgbtuple")
QDEF(MP_QSTR_set_pixel, (const byte*)"\xb0\xda\x09" "set_pixel")
QDEF(MP_QSTR_color, (const byte*)"\xd8\x06\x05" "color")
QDEF(MP_QSTR_mean_pool, (const byte*)"\xe1\xe5\x09" "mean_pool")
QDEF(MP_QSTR_mean_pooled, (const byte*)"\x80\xee\x0b" "mean_pooled")
QDEF(MP_QSTR_midpoint_pool, (const byte*)"\x8a\xa3\x0d" "midpoint_pool")
QDEF(MP_QSTR_bias, (const byte*)"\xbc\x66\x04" "bias")
QDEF(MP_QSTR_midpoint_pooled, (const byte*)"\xeb\xaa\x0f" "midpoint_pooled")
QDEF(MP_QSTR_to_bitmap, (const byte*)"\x62\xfa\x09" "to_bitmap")
QDEF(MP_QSTR_rgb_channel, (const byte*)"\x8e\x2f\x0b" "rgb_channel")
QDEF(MP_QSTR_to_grayscale, (const byte*)"\x94\x6b\x0c" "to_grayscale")
QDEF(MP_QSTR_to_rgb565, (const byte*)"\x80\xa9\x09" "to_rgb565")
QDEF(MP_QSTR_to_rainbow, (const byte*)"\x0f\x64\x0a" "to_rainbow")
QDEF(MP_QSTR_color_palette, (const byte*)"\x1a\x16\x0d" "color_palette")
QDEF(MP_QSTR_compress, (const byte*)"\xa3\x7a\x08" "compress")
QDEF(MP_QSTR_quality, (const byte*)"\x28\xfc\x07" "quality")
QDEF(MP_QSTR_compress_for_ide, (const byte*)"\x90\xc8\x10" "compress_for_ide")
QDEF(MP_QSTR_compressed, (const byte*)"\x42\xbc\x0a" "compressed")
QDEF(MP_QSTR_compressed_for_ide, (const byte*)"\xf1\xb2\x12" "compressed_for_ide")
QDEF(MP_QSTR_crop, (const byte*)"\x0b\xf0\x04" "crop")
QDEF(MP_QSTR_scale, (const byte*)"\x7d\x51\x05" "scale")
QDEF(MP_QSTR_roi, (const byte*)"\xb1\x8b\x03" "roi")
QDEF(MP_QSTR_x_scale, (const byte*)"\x7a\x68\x07" "x_scale")
QDEF(MP_QSTR_y_scale, (const byte*)"\x3b\x4b\x07" "y_scale")
QDEF(MP_QSTR_save, (const byte*)"\xa4\x83\x04" "save")
QDEF(MP_QSTR_mask, (const byte*)"\x91\xba\x04" "mask")
QDEF(MP_QSTR_draw_line, (const byte*)"\x54\x85\x09" "draw_line")
QDEF(MP_QSTR_thickness, (const byte*)"\x13\x07\x09" "thickness")
QDEF(MP_QSTR_draw_rectangle, (const byte*)"\x5b\x40\x0e" "draw_rectangle")
QDEF(MP_QSTR_fill, (const byte*)"\xca\x34\x04" "fill")
QDEF(MP_QSTR_draw_circle, (const byte*)"\x68\x49\x0b" "draw_circle")
QDEF(MP_QSTR_draw_ellipse, (const byte*)"\xf0\x2e\x0c" "draw_ellipse")
QDEF(MP_QSTR_draw_string, (const byte*)"\xaf\x41\x0b" "draw_string")
QDEF(MP_QSTR_x_spacing, (const byte*)"\x63\x71\x09" "x_spacing")
QDEF(MP_QSTR_y_spacing, (const byte*)"\xa2\x89\x09" "y_spacing")
QDEF(MP_QSTR_mono_space, (const byte*)"\x5d\x8d\x0a" "mono_space")
QDEF(MP_QSTR_char_rotation, (const byte*)"\x56\xbd\x0d" "char_rotation")
QDEF(MP_QSTR_char_hmirror, (const byte*)"\x53\x9b\x0c" "char_hmirror")
QDEF(MP_QSTR_char_vflip, (const byte*)"\x27\x42\x0a" "char_vflip")
QDEF(MP_QSTR_string_rotation, (const byte*)"\x1b\x2e\x0f" "string_rotation")
QDEF(MP_QSTR_string_hmirror, (const byte*)"\x3e\x0f\x0e" "string_hmirror")
QDEF(MP_QSTR_string_vflip, (const byte*)"\xca\x4e\x0c" "string_vflip")
QDEF(MP_QSTR_draw_cross, (const byte*)"\x84\x34\x0a" "draw_cross")
QDEF(MP_QSTR_draw_arrow, (const byte*)"\x43\xd4\x0a" "draw_arrow")
QDEF(MP_QSTR_draw_edges, (const byte*)"\x0a\x83\x0a" "draw_edges")
QDEF(MP_QSTR_draw_image, (const byte*)"\xbd\xa6\x0a" "draw_image")
QDEF(MP_QSTR_alpha, (const byte*)"\x51\x64\x05" "alpha")
QDEF(MP_QSTR_draw_keypoints, (const byte*)"\x32\xb7\x0e" "draw_keypoints")
QDEF(MP_QSTR_flood_fill, (const byte*)"\x5b\xfb\x0a" "flood_fill")
QDEF(MP_QSTR_seed_threshold, (const byte*)"\x7a\xd1\x0e" "seed_threshold")
QDEF(MP_QSTR_floating_threshold, (const byte*)"\x5d\x04\x12" "floating_threshold")
QDEF(MP_QSTR_invert, (const byte*)"\xb7\x00\x06" "invert")
QDEF(MP_QSTR_clear_background, (const byte*)"\xcd\x5a\x10" "clear_background")
QDEF(MP_QSTR_mask_rectangle, (const byte*)"\xef\xde\x0e" "mask_rectangle")
QDEF(MP_QSTR_mask_circle, (const byte*)"\x5c\x61\x0b" "mask_circle")
QDEF(MP_QSTR_mask_ellipse, (const byte*)"\x84\xb5\x0c" "mask_ellipse")
QDEF(MP_QSTR_binary, (const byte*)"\x4a\x8f\x06" "binary")
QDEF(MP_QSTR_zero, (const byte*)"\x07\x5a\x04" "zero")
QDEF(MP_QSTR_and, (const byte*)"\x0e\x33\x03" "and")
QDEF(MP_QSTR_b_and, (const byte*)"\xd3\x1b\x05" "b_and")
QDEF(MP_QSTR_nand, (const byte*)"\x00\x75\x04" "nand")
QDEF(MP_QSTR_b_nand, (const byte*)"\xfd\xf6\x06" "b_nand")
QDEF(MP_QSTR_or, (const byte*)"\x78\x6f\x02" "or")
QDEF(MP_QSTR_b_or, (const byte*)"\x05\x00\x04" "b_or")
QDEF(MP_QSTR_nor, (const byte*)"\xb6\x57\x03" "nor")
QDEF(MP_QSTR_b_nor, (const byte*)"\x2b\x07\x05" "b_nor")
QDEF(MP_QSTR_xor, (const byte*)"\x20\x93\x03" "xor")
QDEF(MP_QSTR_b_xor, (const byte*)"\xbd\xbb\x05" "b_xor")
QDEF(MP_QSTR_xnor, (const byte*)"\xee\xf6\x04" "xnor")
QDEF(MP_QSTR_b_xnor, (const byte*)"\x93\x33\x06" "b_xnor")
QDEF(MP_QSTR_erode, (const byte*)"\x1c\x82\x05" "erode")
QDEF(MP_QSTR_dilate, (const byte*)"\x94\xd5\x06" "dilate")
QDEF(MP_QSTR_threshold, (const byte*)"\xf2\x2f\x09" "threshold")
QDEF(MP_QSTR_top_hat, (const byte*)"\xcc\x6c\x07" "top_hat")
QDEF(MP_QSTR_black_hat, (const byte*)"\x00\xd9\x09" "black_hat")
QDEF(MP_QSTR_gamma_corr, (const byte*)"\xb1\xda\x0a" "gamma_corr")
QDEF(MP_QSTR_gamma, (const byte*)"\x02\x90\x05" "gamma")
QDEF(MP_QSTR_contrast, (const byte*)"\x07\x8a\x08" "contrast")
QDEF(MP_QSTR_brightness, (const byte*)"\x4c\xc6\x0a" "brightness")
QDEF(MP_QSTR_negate, (const byte*)"\x79\xd7\x06" "negate")
QDEF(MP_QSTR_assign, (const byte*)"\xe4\x7c\x06" "assign")
QDEF(MP_QSTR_hmirror, (const byte*)"\x94\x85\x07" "hmirror")
QDEF(MP_QSTR_vflip, (const byte*)"\xa0\x87\x05" "vflip")
QDEF(MP_QSTR_transpose, (const byte*)"\xf6\xe9\x09" "transpose")
QDEF(MP_QSTR_add, (const byte*)"\x44\x32\x03" "add")
QDEF(MP_QSTR_sub, (const byte*)"\x21\x8d\x03" "sub")
QDEF(MP_QSTR_mul, (const byte*)"\x31\x46\x03" "mul")
QDEF(MP_QSTR_div, (const byte*)"\xfe\x1e\x03" "div")
QDEF(MP_QSTR_mod, (const byte*)"\xe3\x43\x03" "mod")
QDEF(MP_QSTR_difference, (const byte*)"\x72\x24\x0a" "difference")
QDEF(MP_QSTR_blend, (const byte*)"\x04\x9e\x05" "blend")
QDEF(MP_QSTR_histeq, (const byte*)"\x57\x90\x06" "histeq")
QDEF(MP_QSTR_adaptive, (const byte*)"\xdf\xa5\x08" "adaptive")
QDEF(MP_QSTR_clip_limit, (const byte*)"\x59\xa8\x0a" "clip_limit")
QDEF(MP_QSTR_mean, (const byte*)"\xc2\xc9\x04" "mean")
QDEF(MP_QSTR_offset, (const byte*)"\x48\x3c\x06" "offset")
QDEF(MP_QSTR_median, (const byte*)"\x0f\x95\x06" "median")
QDEF(MP_QSTR_percentile, (const byte*)"\x7e\x07\x0a" "percentile")
QDEF(MP_QSTR_mode, (const byte*)"\x26\xc0\x04" "mode")
QDEF(MP_QSTR_midpoint, (const byte*)"\x49\x9a\x08" "midpoint")
QDEF(MP_QSTR_morph, (const byte*)"\xed\x1f\x05" "morph")
QDEF(MP_QSTR_blur, (const byte*)"\x6c\x54\x04" "blur")
QDEF(MP_QSTR_gaussian, (const byte*)"\x10\x24\x08" "gaussian")
QDEF(MP_QSTR_gaussian_blur, (const byte*)"\x26\xe4\x0d" "gaussian_blur")
QDEF(MP_QSTR_unsharp, (const byte*)"\xc6\xc0\x07" "unsharp")
QDEF(MP_QSTR_laplacian, (const byte*)"\x70\xa7\x09" "laplacian")
QDEF(MP_QSTR_sharpen, (const byte*)"\xb6\x44\x07" "sharpen")
QDEF(MP_QSTR_bilateral, (const byte*)"\x4d\x2f\x09" "bilateral")
QDEF(MP_QSTR_color_sigma, (const byte*)"\x56\x1f\x0b" "color_sigma")
QDEF(MP_QSTR_space_sigma, (const byte*)"\x6f\x03\x0b" "space_sigma")
QDEF(MP_QSTR_cartoon, (const byte*)"\xcf\x3b\x07" "cartoon")
QDEF(MP_QSTR_remove_shadows, (const byte*)"\x49\x70\x0e" "remove_shadows")
QDEF(MP_QSTR_chrominvar, (const byte*)"\xbc\x37\x0a" "chrominvar")
QDEF(MP_QSTR_illuminvar, (const byte*)"\xb6\xc0\x0a" "illuminvar")
QDEF(MP_QSTR_linpolar, (const byte*)"\x8e\xb6\x08" "linpolar")
QDEF(MP_QSTR_logpolar, (const byte*)"\x61\x19\x08" "logpolar")
QDEF(MP_QSTR_lens_corr, (const byte*)"\x02\xc4\x09" "lens_corr")
QDEF(MP_QSTR_strength, (const byte*)"\xe0\x15\x08" "strength")
QDEF(MP_QSTR_zoom, (const byte*)"\xf2\x23\x04" "zoom")
QDEF(MP_QSTR_rotation_corr, (const byte*)"\xa2\x2c\x0d" "rotation_corr")
QDEF(MP_QSTR_x_rotation, (const byte*)"\x56\x6c\x0a" "x_rotation")
QDEF(MP_QSTR_y_rotation, (const byte*)"\xf7\x6c\x0a" "y_rotation")
QDEF(MP_QSTR_z_rotation, (const byte*)"\x14\xea\x0a" "z_rotation")
QDEF(MP_QSTR_x_translation, (const byte*)"\xa9\xbf\x0d" "x_translation")
QDEF(MP_QSTR_y_translation, (const byte*)"\xe8\xb7\x0d" "y_translation")
QDEF(MP_QSTR_get_similarity, (const byte*)"\x09\xdc\x0e" "get_similarity")
QDEF(MP_QSTR_similarity, (const byte*)"\xc0\xff\x0a" "similarity")
QDEF(MP_QSTR_stdev, (const byte*)"\xb5\x02\x05" "stdev")
QDEF(MP_QSTR_get_hist, (const byte*)"\xaa\x5c\x08" "get_hist")
QDEF(MP_QSTR_get_histogram, (const byte*)"\xdc\xda\x0d" "get_histogram")
QDEF(MP_QSTR_bins, (const byte*)"\x93\x64\x04" "bins")
QDEF(MP_QSTR_l_bins, (const byte*)"\x20\xe6\x06" "l_bins")
QDEF(MP_QSTR_a_bins, (const byte*)"\x8d\xa5\x06" "a_bins")
QDEF(MP_QSTR_b_bins, (const byte*)"\x6e\x07\x06" "b_bins")
QDEF(MP_QSTR_thresholds, (const byte*)"\x41\x2e\x0a" "thresholds")
QDEF(MP_QSTR_histogram, (const byte*)"\xb5\x6f\x09" "histogram")
QDEF(MP_QSTR_get_percentile, (const byte*)"\xf7\x7b\x0e" "get_percentile")
QDEF(MP_QSTR_get_threshold, (const byte*)"\x1b\x78\x0d" "get_threshold")
QDEF(MP_QSTR_get_stats, (const byte*)"\x2d\x79\x09" "get_stats")
QDEF(MP_QSTR_get_statistics, (const byte*)"\xc9\xed\x0e" "get_statistics")
QDEF(MP_QSTR_statistics, (const byte*)"\x00\x5a\x0a" "statistics")
QDEF(MP_QSTR_l_value, (const byte*)"\x9d\xce\x07" "l_value")
QDEF(MP_QSTR_a_value, (const byte*)"\x90\x3a\x07" "a_value")
QDEF(MP_QSTR_b_value, (const byte*)"\x13\xc8\x07" "b_value")
QDEF(MP_QSTR_lq, (const byte*)"\x98\x6e\x02" "lq")
QDEF(MP_QSTR_uq, (const byte*)"\xa1\x6f\x02" "uq")
QDEF(MP_QSTR_l_mean, (const byte*)"\xf1\x63\x06" "l_mean")
QDEF(MP_QSTR_l_median, (const byte*)"\xbc\x46\x08" "l_median")
QDEF(MP_QSTR_l_mode, (const byte*)"\x95\x48\x06" "l_mode")
QDEF(MP_QSTR_l_stdev, (const byte*)"\x26\xdc\x07" "l_stdev")
QDEF(MP_QSTR_l_min, (const byte*)"\x3c\xea\x05" "l_min")
QDEF(MP_QSTR_l_max, (const byte*)"\x22\xeb\x05" "l_max")
QDEF(MP_QSTR_l_lq, (const byte*)"\x2b\xe8\x04" "l_lq")
QDEF(MP_QSTR_l_uq, (const byte*)"\x12\xe5\x04" "l_uq")
QDEF(MP_QSTR_a_mean, (const byte*)"\xdc\x18\x06" "a_mean")
QDEF(MP_QSTR_a_median, (const byte*)"\x11\x54\x08" "a_median")
QDEF(MP_QSTR_a_mode, (const byte*)"\x38\x22\x06" "a_mode")
QDEF(MP_QSTR_a_stdev, (const byte*)"\xeb\x74\x07" "a_stdev")
QDEF(MP_QSTR_a_min, (const byte*)"\xf1\xcb\x05" "a_min")
QDEF(MP_QSTR_a_max, (const byte*)"\xef\xca\x05" "a_max")
QDEF(MP_QSTR_a_lq, (const byte*)"\x86\x53\x04" "a_lq")
QDEF(MP_QSTR_a_uq, (const byte*)"\xbf\x52\x04" "a_uq")
QDEF(MP_QSTR_b_mean, (const byte*)"\x3f\x50\x06" "b_mean")
QDEF(MP_QSTR_b_median, (const byte*)"\xf2\xef\x08" "b_median")
QDEF(MP_QSTR_b_mode, (const byte*)"\xdb\x8b\x06" "b_mode")
QDEF(MP_QSTR_b_stdev, (const byte*)"\xa8\xb8\x07" "b_stdev")
QDEF(MP_QSTR_b_min, (const byte*)"\xb2\x0b\x05" "b_min")
QDEF(MP_QSTR_b_max, (const byte*)"\xac\x0a\x05" "b_max")
QDEF(MP_QSTR_b_lq, (const byte*)"\x65\x00\x04" "b_lq")
QDEF(MP_QSTR_b_uq, (const byte*)"\x5c\xff\x04" "b_uq")
QDEF(MP_QSTR_get_regression, (const byte*)"\x03\xd7\x0e" "get_regression")
QDEF(MP_QSTR_x_stride, (const byte*)"\x9f\x0c\x08" "x_stride")
QDEF(MP_QSTR_y_stride, (const byte*)"\xbe\xa9\x08" "y_stride")
QDEF(MP_QSTR_area_threshold, (const byte*)"\x7a\x62\x0e" "area_threshold")
QDEF(MP_QSTR_pixels_threshold, (const byte*)"\x76\x67\x10" "pixels_threshold")
QDEF(MP_QSTR_robust, (const byte*)"\xe8\xd7\x06" "robust")
QDEF(MP_QSTR_line, (const byte*)"\xcb\x1c\x04" "line")
QDEF(MP_QSTR_x1, (const byte*)"\x4c\x71\x02" "x1")
QDEF(MP_QSTR_y1, (const byte*)"\x6d\x71\x02" "y1")
QDEF(MP_QSTR_x2, (const byte*)"\x4f\x71\x02" "x2")
QDEF(MP_QSTR_y2, (const byte*)"\x6e\x71\x02" "y2")
QDEF(MP_QSTR_length, (const byte*)"\x59\x87\x06" "length")
QDEF(MP_QSTR_magnitude, (const byte*)"\x69\x35\x09" "magnitude")
QDEF(MP_QSTR_theta, (const byte*)"\x49\x83\x05" "theta")
QDEF(MP_QSTR_rho, (const byte*)"\xd0\x8c\x03" "rho")
QDEF(MP_QSTR_find_blobs, (const byte*)"\x0f\xb9\x0a" "find_blobs")
QDEF(MP_QSTR_merge, (const byte*)"\x1d\x5b\x05" "merge")
QDEF(MP_QSTR_margin, (const byte*)"\x5b\x7d\x06" "margin")
QDEF(MP_QSTR_threshold_cb, (const byte*)"\x4c\x8a\x0c" "threshold_cb")
QDEF(MP_QSTR_merge_cb, (const byte*)"\x03\x03\x08" "merge_cb")
QDEF(MP_QSTR_x_hist_bins_max, (const byte*)"\x26\xb8\x0f" "x_hist_bins_max")
QDEF(MP_QSTR_y_hist_bins_max, (const byte*)"\x27\x8c\x0f" "y_hist_bins_max")
QDEF(MP_QSTR_blob, (const byte*)"\xa6\x50\x04" "blob")
QDEF(MP_QSTR_corners, (const byte*)"\xf1\xa0\x07" "corners")
QDEF(MP_QSTR_min_corners, (const byte*)"\x04\x29\x0b" "min_corners")
QDEF(MP_QSTR_rect, (const byte*)"\xe5\xf9\x04" "rect")
QDEF(MP_QSTR_x, (const byte*)"\xdd\xb5\x01" "x")
QDEF(MP_QSTR_y, (const byte*)"\xdc\xb5\x01" "y")
QDEF(MP_QSTR_w, (const byte*)"\xd2\xb5\x01" "w")
QDEF(MP_QSTR_h, (const byte*)"\xcd\xb5\x01" "h")
QDEF(MP_QSTR_pixels, (const byte*)"\x9e\xf9\x06" "pixels")
QDEF(MP_QSTR_cx, (const byte*)"\xfe\x6e\x02" "cx")
QDEF(MP_QSTR_cxf, (const byte*)"\xd8\x4e\x03" "cxf")
QDEF(MP_QSTR_cy, (const byte*)"\xff\x6e\x02" "cy")
QDEF(MP_QSTR_cyf, (const byte*)"\xb9\x4e\x03" "cyf")
QDEF(MP_QSTR_rotation, (const byte*)"\xf1\x2f\x08" "rotation")
QDEF(MP_QSTR_rotation_deg, (const byte*)"\xc8\xbf\x0c" "rotation_deg")
QDEF(MP_QSTR_rotation_rad, (const byte*)"\x59\xfb\x0c" "rotation_rad")
QDEF(MP_QSTR_code, (const byte*)"\x68\xda\x04" "code")
QDEF(MP_QSTR_perimeter, (const byte*)"\x40\x23\x09" "perimeter")
QDEF(MP_QSTR_roundness, (const byte*)"\x4c\xd9\x09" "roundness")
QDEF(MP_QSTR_elongation, (const byte*)"\x57\xa5\x0a" "elongation")
QDEF(MP_QSTR_area, (const byte*)"\x92\xc6\x04" "area")
QDEF(MP_QSTR_density, (const byte*)"\x1d\x55\x07" "density")
QDEF(MP_QSTR_extent, (const byte*)"\x73\xe8\x06" "extent")
QDEF(MP_QSTR_compactness, (const byte*)"\xe9\xfb\x0b" "compactness")
QDEF(MP_QSTR_solidity, (const byte*)"\x7c\xad\x08" "solidity")
QDEF(MP_QSTR_convexity, (const byte*)"\xa8\xf9\x09" "convexity")
QDEF(MP_QSTR_x_hist_bins, (const byte*)"\xcd\x61\x0b" "x_hist_bins")
QDEF(MP_QSTR_y_hist_bins, (const byte*)"\x0c\xb4\x0b" "y_hist_bins")
QDEF(MP_QSTR_major_axis_line, (const byte*)"\xd3\x81\x0f" "major_axis_line")
QDEF(MP_QSTR_minor_axis_line, (const byte*)"\xdf\x64\x0f" "minor_axis_line")
QDEF(MP_QSTR_enclosing_circle, (const byte*)"\x30\x9a\x10" "enclosing_circle")
QDEF(MP_QSTR_enclosed_ellipse, (const byte*)"\xc9\x69\x10" "enclosed_ellipse")
QDEF(MP_QSTR_find_lines, (const byte*)"\xc2\x06\x0a" "find_lines")
QDEF(MP_QSTR_theta_margin, (const byte*)"\xe8\x40\x0c" "theta_margin")
QDEF(MP_QSTR_rho_margin, (const byte*)"\x51\x56\x0a" "rho_margin")
QDEF(MP_QSTR_find_line_segments, (const byte*)"\x1e\xc8\x12" "find_line_segments")
QDEF(MP_QSTR_merge_distance, (const byte*)"\x01\xf9\x0e" "merge_distance")
QDEF(MP_QSTR_max_theta_diff, (const byte*)"\x70\xab\x0e" "max_theta_diff")
QDEF(MP_QSTR_find_circles, (const byte*)"\xfe\x02\x0c" "find_circles")
QDEF(MP_QSTR_x_margin, (const byte*)"\xfc\x75\x08" "x_margin")
QDEF(MP_QSTR_y_margin, (const byte*)"\xdd\x52\x08" "y_margin")
QDEF(MP_QSTR_r_margin, (const byte*)"\x36\x6a\x08" "r_margin")
QDEF(MP_QSTR_r_min, (const byte*)"\xa2\x07\x05" "r_min")
QDEF(MP_QSTR_r_max, (const byte*)"\xbc\x06\x05" "r_max")
QDEF(MP_QSTR_r_step, (const byte*)"\x3a\x93\x06" "r_step")
QDEF(MP_QSTR_circle, (const byte*)"\xb7\xdd\x06" "circle")
QDEF(MP_QSTR_r, (const byte*)"\xd7\xb5\x01" "r")
QDEF(MP_QSTR_find_rects, (const byte*)"\x6c\xe0\x0a" "find_rects")
QDEF(MP_QSTR_find_qrcodes, (const byte*)"\xc2\x0f\x0c" "find_qrcodes")
QDEF(MP_QSTR_qrcode, (const byte*)"\xcb\x8c\x06" "qrcode")
QDEF(MP_QSTR_payload, (const byte*)"\x4b\x05\x07" "payload")
QDEF(MP_QSTR_version, (const byte*)"\xbf\xd3\x07" "version")
QDEF(MP_QSTR_ecc_level, (const byte*)"\x69\x68\x09" "ecc_level")
QDEF(MP_QSTR_data_type, (const byte*)"\x72\x7c\x09" "data_type")
QDEF(MP_QSTR_eci, (const byte*)"\x6a\x22\x03" "eci")
QDEF(MP_QSTR_is_numeric, (const byte*)"\x0b\xba\x0a" "is_numeric")
QDEF(MP_QSTR_is_alphanumeric, (const byte*)"\x3f\x89\x0f" "is_alphanumeric")
QDEF(MP_QSTR_is_binary, (const byte*)"\x8f\x43\x09" "is_binary")
QDEF(MP_QSTR_is_kanji, (const byte*)"\x07\x60\x08" "is_kanji")
QDEF(MP_QSTR_find_apriltags, (const byte*)"\xd8\xa7\x0e" "find_apriltags")
QDEF(MP_QSTR_families, (const byte*)"\xd5\xeb\x08" "families")
QDEF(MP_QSTR_fx, (const byte*)"\x5b\x6e\x02" "fx")
QDEF(MP_QSTR_fy, (const byte*)"\x5a\x6e\x02" "fy")
QDEF(MP_QSTR_apriltag, (const byte*)"\x91\xf5\x08" "apriltag")
QDEF(MP_QSTR_family, (const byte*)"\x33\xca\x06" "family")
QDEF(MP_QSTR_hamming, (const byte*)"\xcc\xd4\x07" "hamming")
QDEF(MP_QSTR_goodness, (const byte*)"\x6d\xfc\x08" "goodness")
QDEF(MP_QSTR_decision_margin, (const byte*)"\x14\x18\x0f" "decision_margin")
QDEF(MP_QSTR_z_translation, (const byte*)"\xab\x60\x0d" "z_translation")
QDEF(MP_QSTR_TAG16H5, (const byte*)"\xcd\x0e\x07" "TAG16H5")
QDEF(MP_QSTR_TAG25H7, (const byte*)"\x2f\x66\x07" "TAG25H7")
QDEF(MP_QSTR_TAG25H9, (const byte*)"\x21\x66\x07" "TAG25H9")
QDEF(MP_QSTR_TAG36H10, (const byte*)"\x5b\xe8\x08" "TAG36H10")
QDEF(MP_QSTR_TAG36H11, (const byte*)"\x5a\xe8\x08" "TAG36H11")
QDEF(MP_QSTR_ARTOOLKIT, (const byte*)"\xb8\xe1\x09" "ARTOOLKIT")
QDEF(MP_QSTR_find_datamatrices, (const byte*)"\x39\xd8\x11" "find_datamatrices")
QDEF(MP_QSTR_effort, (const byte*)"\xa9\xb7\x06" "effort")
QDEF(MP_QSTR_datamatrix, (const byte*)"\x4e\x1d\x0a" "datamatrix")
QDEF(MP_QSTR_rows, (const byte*)"\xfc\x01\x04" "rows")
QDEF(MP_QSTR_columns, (const byte*)"\x40\x45\x07" "columns")
QDEF(MP_QSTR_capacity, (const byte*)"\x91\xdc\x08" "capacity")
QDEF(MP_QSTR_padding, (const byte*)"\xb4\xc1\x07" "padding")
QDEF(MP_QSTR_find_barcodes, (const byte*)"\x10\x5b\x0d" "find_barcodes")
QDEF(MP_QSTR_barcode, (const byte*)"\x19\x9b\x07" "barcode")
QDEF(MP_QSTR_EAN2, (const byte*)"\x5d\x57\x04" "EAN2")
QDEF(MP_QSTR_EAN5, (const byte*)"\x5a\x57\x04" "EAN5")
QDEF(MP_QSTR_EAN8, (const byte*)"\x57\x57\x04" "EAN8")
QDEF(MP_QSTR_UPCE, (const byte*)"\x06\xe4\x04" "UPCE")
QDEF(MP_QSTR_ISBN10, (const byte*)"\x52\xc1\x06" "ISBN10")
QDEF(MP_QSTR_UPCA, (const byte*)"\x02\xe4\x04" "UPCA")
QDEF(MP_QSTR_EAN13, (const byte*)"\x2d\x43\x05" "EAN13")
QDEF(MP_QSTR_ISBN13, (const byte*)"\x51\xc1\x06" "ISBN13")
QDEF(MP_QSTR_I25, (const byte*)"\x2b\xdf\x03" "I25")
QDEF(MP_QSTR_DATABAR, (const byte*)"\x44\x49\x07" "DATABAR")
QDEF(MP_QSTR_DATABAR_EXP, (const byte*)"\xb6\xc0\x0b" "DATABAR_EXP")
QDEF(MP_QSTR_CODABAR, (const byte*)"\x1d\xab\x07" "CODABAR")
QDEF(MP_QSTR_CODE39, (const byte*)"\xc2\xe1\x06" "CODE39")
QDEF(MP_QSTR_PDF417, (const byte*)"\x45\xe0\x06" "PDF417")
QDEF(MP_QSTR_CODE93, (const byte*)"\x82\xe0\x06" "CODE93")
QDEF(MP_QSTR_CODE128, (const byte*)"\xd3\x12\x07" "CODE128")
QDEF(MP_QSTR_find_displacement, (const byte*)"\x28\x38\x11" "find_displacement")
QDEF(MP_QSTR_template_roi, (const byte*)"\x9e\xc4\x0c" "template_roi")
QDEF(MP_QSTR_fix_rotation_scale, (const byte*)"\xfe\xf2\x12" "fix_rotation_scale")
QDEF(MP_QSTR_displacement, (const byte*)"\x72\xd1\x0c" "displacement")
QDEF(MP_QSTR_response, (const byte*)"\xe6\x94\x08" "response")
QDEF(MP_QSTR_ImageWriter, (const byte*)"\x6d\xc9\x0b" "ImageWriter")
QDEF(MP_QSTR_imagewriter, (const byte*)"\x6d\x45\x0b" "imagewriter")
QDEF(MP_QSTR_ImageReader, (const byte*)"\x07\xf8\x0b" "ImageReader")
QDEF(MP_QSTR_imagereader, (const byte*)"\x07\x74\x0b" "imagereader")
QDEF(MP_QSTR_next_frame, (const byte*)"\xa0\x3d\x0a" "next_frame")
QDEF(MP_QSTR_fir, (const byte*)"\xf8\x37\x03" "fir")
QDEF(MP_QSTR_FIR_NONE, (const byte*)"\x8d\x1e\x08" "FIR_NONE")
QDEF(MP_QSTR_FIR_SHIELD, (const byte*)"\xd8\x81\x0a" "FIR_SHIELD")
QDEF(MP_QSTR_FIR_MLX90620, (const byte*)"\x43\x67\x0c" "FIR_MLX90620")
QDEF(MP_QSTR_FIR_MLX90621, (const byte*)"\x42\x67\x0c" "FIR_MLX90621")
QDEF(MP_QSTR_FIR_MLX90640, (const byte*)"\x85\x67\x0c" "FIR_MLX90640")
QDEF(MP_QSTR_FIR_AMG8833, (const byte*)"\x2c\x8b\x0b" "FIR_AMG8833")
QDEF(MP_QSTR_refresh, (const byte*)"\x98\x4c\x07" "refresh")
QDEF(MP_QSTR_resolution, (const byte*)"\x8b\x47\x0a" "resolution")
QDEF(MP_QSTR_read_ta, (const byte*)"\x5d\x81\x07" "read_ta")
QDEF(MP_QSTR_read_ir, (const byte*)"\xb3\x7d\x07" "read_ir")
QDEF(MP_QSTR_draw_ta, (const byte*)"\x8f\x2e\x07" "draw_ta")
QDEF(MP_QSTR_draw_ir, (const byte*)"\xe1\x2f\x07" "draw_ir")
QDEF(MP_QSTR_pixformat, (const byte*)"\xc7\xf6\x09" "pixformat")
QDEF(MP_QSTR_ADC, (const byte*)"\x63\xb6\x03" "ADC")
QDEF(MP_QSTR_ADCAll, (const byte*)"\x02\x28\x06" "ADCAll")
QDEF(MP_QSTR_ANALOG, (const byte*)"\xaf\xf2\x06" "ANALOG")
QDEF(MP_QSTR_ARRAY, (const byte*)"\x5c\x7a\x05" "ARRAY")
QDEF(MP_QSTR_BFINT16, (const byte*)"\x95\xe2\x07" "BFINT16")
QDEF(MP_QSTR_BFINT32, (const byte*)"\x53\xe2\x07" "BFINT32")
QDEF(MP_QSTR_BFINT8, (const byte*)"\x4a\x9a\x06" "BFINT8")
QDEF(MP_QSTR_BFUINT16, (const byte*)"\x40\xa6\x08" "BFUINT16")
QDEF(MP_QSTR_BFUINT32, (const byte*)"\x06\xa6\x08" "BFUINT32")
QDEF(MP_QSTR_BFUINT8, (const byte*)"\xbf\xaf\x07" "BFUINT8")
QDEF(MP_QSTR_BF_LEN, (const byte*)"\x19\xb0\x06" "BF_LEN")
QDEF(MP_QSTR_BF_POS, (const byte*)"\x52\x9d\x06" "BF_POS")
QDEF(MP_QSTR_BIG_ENDIAN, (const byte*)"\xff\x51\x0a" "BIG_ENDIAN")
QDEF(MP_QSTR_BLACK, (const byte*)"\x82\x4d\x05" "BLACK")
QDEF(MP_QSTR_BytesIO, (const byte*)"\x1a\xb7\x07" "BytesIO")
QDEF(MP_QSTR_DEEPSLEEP_RESETABC, (const byte*)"\x54\x52\x12" "DEEPSLEEP_RESETABC")
QDEF(MP_QSTR_DecompIO, (const byte*)"\x93\xb7\x08" "DecompIO")
QDEF(MP_QSTR_EACCES, (const byte*)"\x37\xc2\x06" "EACCES")
QDEF(MP_QSTR_EADDRINUSE, (const byte*)"\x17\x11\x0a" "EADDRINUSE")
QDEF(MP_QSTR_EAGAIN, (const byte*)"\x20\xec\x06" "EAGAIN")
QDEF(MP_QSTR_EALREADY, (const byte*)"\x46\x15\x08" "EALREADY")
QDEF(MP_QSTR_EBADF, (const byte*)"\x61\xa3\x05" "EBADF")
QDEF(MP_QSTR_ECONNABORTED, (const byte*)"\x27\xab\x0c" "ECONNABORTED")
QDEF(MP_QSTR_ECONNREFUSED, (const byte*)"\x3a\x2c\x0c" "ECONNREFUSED")
QDEF(MP_QSTR_ECONNRESET, (const byte*)"\x19\xfb\x0a" "ECONNRESET")
QDEF(MP_QSTR_EEXIST, (const byte*)"\x53\xad\x06" "EEXIST")
QDEF(MP_QSTR_EHOSTUNREACH, (const byte*)"\x86\x25\x0c" "EHOSTUNREACH")
QDEF(MP_QSTR_EINPROGRESS, (const byte*)"\x9a\xa0\x0b" "EINPROGRESS")
QDEF(MP_QSTR_EINVAL, (const byte*)"\x5c\xff\x06" "EINVAL")
QDEF(MP_QSTR_EIO, (const byte*)"\x86\xa6\x03" "EIO")
QDEF(MP_QSTR_EISDIR, (const byte*)"\xa5\x4f\x06" "EISDIR")
QDEF(MP_QSTR_ENOBUFS, (const byte*)"\xe3\x87\x07" "ENOBUFS")
QDEF(MP_QSTR_ENODEV, (const byte*)"\xb6\x67\x06" "ENODEV")
QDEF(MP_QSTR_ENOENT, (const byte*)"\x5e\x65\x06" "ENOENT")
QDEF(MP_QSTR_ENOMEM, (const byte*)"\xa4\x85\x06" "ENOMEM")
QDEF(MP_QSTR_ENOTCONN, (const byte*)"\x79\xd7\x08" "ENOTCONN")
QDEF(MP_QSTR_EOPNOTSUPP, (const byte*)"\xac\x97\x0a" "EOPNOTSUPP")
QDEF(MP_QSTR_EPERM, (const byte*)"\xea\x7f\x05" "EPERM")
QDEF(MP_QSTR_ETIMEDOUT, (const byte*)"\xff\xf8\x09" "ETIMEDOUT")
QDEF(MP_QSTR_FLOAT32, (const byte*)"\xb4\x87\x07" "FLOAT32")
QDEF(MP_QSTR_FLOAT64, (const byte*)"\x17\x87\x07" "FLOAT64")
QDEF(MP_QSTR_FONT5x7, (const byte*)"\x6c\x1b\x07" "FONT5x7")
QDEF(MP_QSTR_FONT6x13, (const byte*)"\xba\xd3\x08" "FONT6x13")
QDEF(MP_QSTR_FileIO, (const byte*)"\xc5\x15\x06" "FileIO")
QDEF(MP_QSTR_Flash, (const byte*)"\x95\x91\x05" "Flash")
QDEF(MP_QSTR_HARD_RESET, (const byte*)"\xb0\x51\x0a" "HARD_RESET")
QDEF(MP_QSTR_HID, (const byte*)"\x00\xec\x03" "HID")
QDEF(MP_QSTR_HIZ, (const byte*)"\x1e\xec\x03" "HIZ")
QDEF(MP_QSTR_HYS, (const byte*)"\x07\xee\x03" "HYS")
QDEF(MP_QSTR_I2C, (const byte*)"\x5d\xdf\x03" "I2C")
QDEF(MP_QSTR_INT, (const byte*)"\x36\xd7\x03" "INT")
QDEF(MP_QSTR_INT16, (const byte*)"\x91\x76\x05" "INT16")
QDEF(MP_QSTR_INT32, (const byte*)"\x57\x76\x05" "INT32")
QDEF(MP_QSTR_INT64, (const byte*)"\xf4\x75\x05" "INT64")
QDEF(MP_QSTR_INT8, (const byte*)"\xce\xbd\x04" "INT8")
QDEF(MP_QSTR_IN_PDN, (const byte*)"\xc7\x9d\x06" "IN_PDN")
QDEF(MP_QSTR_IN_PUP, (const byte*)"\x28\x9f\x06" "IN_PUP")
QDEF(MP_QSTR_IN_PUP_WEAK, (const byte*)"\x6f\x50\x0b" "IN_PUP_WEAK")
QDEF(MP_QSTR_LITTLE_ENDIAN, (const byte*)"\xbf\x5b\x0d" "LITTLE_ENDIAN")
QDEF(MP_QSTR_LONG, (const byte*)"\x0f\x65\x04" "LONG")
QDEF(MP_QSTR_LONGLONG, (const byte*)"\x85\xd4\x08" "LONGLONG")
QDEF(MP_QSTR_LSB, (const byte*)"\xd8\xde\x03" "LSB")
QDEF(MP_QSTR_MSB, (const byte*)"\x59\xca\x03" "MSB")
QDEF(MP_QSTR_MSC, (const byte*)"\x58\xca\x03" "MSC")
QDEF(MP_QSTR_NATIVE, (const byte*)"\x04\x8e\x06" "NATIVE")
QDEF(MP_QSTR_None, (const byte*)"\x6f\xd1\x04" "None")
QDEF(MP_QSTR_OD_PUP, (const byte*)"\x64\xfe\x06" "OD_PUP")
QDEF(MP_QSTR_OPEN_DRAIN, (const byte*)"\x5e\x48\x0a" "OPEN_DRAIN")
QDEF(MP_QSTR_OUT_WEAK, (const byte*)"\x2c\xf8\x08" "OUT_WEAK")
QDEF(MP_QSTR_OrderedDict, (const byte*)"\xf0\x7e\x0b" "OrderedDict")
QDEF(MP_QSTR_POLLERR, (const byte*)"\xdf\xc0\x07" "POLLERR")
QDEF(MP_QSTR_POLLHUP, (const byte*)"\x77\x8a\x07" "POLLHUP")
QDEF(MP_QSTR_POLLIN, (const byte*)"\x7d\x61\x06" "POLLIN")
QDEF(MP_QSTR_POLLOUT, (const byte*)"\x74\x85\x07" "POLLOUT")
QDEF(MP_QSTR_PTR, (const byte*)"\xb3\x0c\x03" "PTR")
QDEF(MP_QSTR_PWRON_RESET, (const byte*)"\xdb\xcb\x0b" "PWRON_RESET")
QDEF(MP_QSTR_Pin, (const byte*)"\x12\x14\x03" "Pin")
QDEF(MP_QSTR_PinAF, (const byte*)"\x35\x58\x05" "PinAF")
QDEF(MP_QSTR_PinBase, (const byte*)"\x47\x43\x07" "PinBase")
QDEF(MP_QSTR_SD, (const byte*)"\xf2\x74\x02" "SD")
QDEF(MP_QSTR_SDCard, (const byte*)"\xa6\xaf\x06" "SDCard")
QDEF(MP_QSTR_SHORT, (const byte*)"\xf7\x1b\x05" "SHORT")
QDEF(MP_QSTR_SLEW_FAST, (const byte*)"\xb7\xc8\x09" "SLEW_FAST")
QDEF(MP_QSTR_SOFT_RESET, (const byte*)"\x01\xc6\x0a" "SOFT_RESET")
QDEF(MP_QSTR_SWIM, (const byte*)"\x05\x3a\x04" "SWIM")
QDEF(MP_QSTR_Signal, (const byte*)"\x9b\xe4\x06" "Signal")
QDEF(MP_QSTR_SoftSPI, (const byte*)"\x21\x58\x07" "SoftSPI")
QDEF(MP_QSTR_StopAsyncIteration, (const byte*)"\xec\xf0\x12" "StopAsyncIteration")
QDEF(MP_QSTR_StringIO, (const byte*)"\x76\x76\x08" "StringIO")
QDEF(MP_QSTR_Switch, (const byte*)"\x97\x00\x06" "Switch")
QDEF(MP_QSTR_TextIOWrapper, (const byte*)"\xad\x8d\x0d" "TextIOWrapper")
QDEF(MP_QSTR_UART, (const byte*)"\xb7\x19\x04" "UART")
QDEF(MP_QSTR_UINT, (const byte*)"\x23\x3d\x04" "UINT")
QDEF(MP_QSTR_UINT16, (const byte*)"\xc4\x17\x06" "UINT16")
QDEF(MP_QSTR_UINT32, (const byte*)"\x82\x17\x06" "UINT32")
QDEF(MP_QSTR_UINT64, (const byte*)"\x61\x18\x06" "UINT64")
QDEF(MP_QSTR_UINT8, (const byte*)"\xbb\xe1\x05" "UINT8")
QDEF(MP_QSTR_ULONG, (const byte*)"\x7a\x8d\x05" "ULONG")
QDEF(MP_QSTR_ULONGLONG, (const byte*)"\x70\xc6\x09" "ULONGLONG")
QDEF(MP_QSTR_USB_HID, (const byte*)"\x5b\xb6\x07" "USB_HID")
QDEF(MP_QSTR_USB_VCP, (const byte*)"\x1b\x8a\x07" "USB_VCP")
QDEF(MP_QSTR_USHORT, (const byte*)"\xa2\xf4\x06" "USHORT")
QDEF(MP_QSTR_UnicodeError, (const byte*)"\x22\xd1\x0c" "UnicodeError")
QDEF(MP_QSTR_VCP, (const byte*)"\x40\xf6\x03" "VCP")
QDEF(MP_QSTR_VOID, (const byte*)"\x31\xf2\x04" "VOID")
QDEF(MP_QSTR_VfsFat, (const byte*)"\x15\x9b\x06" "VfsFat")
QDEF(MP_QSTR_ViperTypeError, (const byte*)"\xdd\x05\x0e" "ViperTypeError")
QDEF(MP_QSTR_WDT_RESET, (const byte*)"\x08\x72\x09" "WDT_RESET")
QDEF(MP_QSTR_WHITE, (const byte*)"\xa2\xc2\x05" "WHITE")
QDEF(MP_QSTR_a2b_base64, (const byte*)"\x3c\x0b\x0a" "a2b_base64")
QDEF(MP_QSTR_acos, (const byte*)"\x1b\xa0\x04" "acos")
QDEF(MP_QSTR_acosh, (const byte*)"\x13\xa3\x05" "acosh")
QDEF(MP_QSTR_addr, (const byte*)"\xb6\x7a\x04" "addr")
QDEF(MP_QSTR_addressof, (const byte*)"\x5a\xf9\x09" "addressof")
QDEF(MP_QSTR_addrsize, (const byte*)"\x93\x91\x08" "addrsize")
QDEF(MP_QSTR_af, (const byte*)"\x22\x6e\x02" "af")
QDEF(MP_QSTR_af_list, (const byte*)"\x5f\x80\x07" "af_list")
QDEF(MP_QSTR_align, (const byte*)"\xa8\xfb\x05" "align")
QDEF(MP_QSTR_alloc_emergency_exception_buf, (const byte*)"\x78\x2a\x1d" "alloc_emergency_exception_buf")
QDEF(MP_QSTR_alt, (const byte*)"\x5c\x33\x03" "alt")
QDEF(MP_QSTR_and_, (const byte*)"\x91\x94\x04" "and_")
QDEF(MP_QSTR_arg, (const byte*)"\x91\x34\x03" "arg")
QDEF(MP_QSTR_argv, (const byte*)"\xc7\xc6\x04" "argv")
QDEF(MP_QSTR_array, (const byte*)"\x7c\x72\x05" "array")
QDEF(MP_QSTR_asin, (const byte*)"\x50\xe5\x04" "asin")
QDEF(MP_QSTR_asinh, (const byte*)"\x38\x8f\x05" "asinh")
QDEF(MP_QSTR_asm_thumb, (const byte*)"\x43\x6d\x09" "asm_thumb")
QDEF(MP_QSTR_asr, (const byte*)"\x65\x35\x03" "asr")
QDEF(MP_QSTR_atan, (const byte*)"\x1f\xbe\x04" "atan")
QDEF(MP_QSTR_atan2, (const byte*)"\xcd\x81\x05" "atan2")
QDEF(MP_QSTR_atanh, (const byte*)"\x97\x81\x05" "atanh")
QDEF(MP_QSTR_b, (const byte*)"\xc7\xb5\x01" "b")
QDEF(MP_QSTR_b2a_base64, (const byte*)"\x3c\x8f\x0a" "b2a_base64")
QDEF(MP_QSTR_baudrate, (const byte*)"\xf5\xd8\x08" "baudrate")
QDEF(MP_QSTR_bin, (const byte*)"\xe0\x48\x03" "bin")
QDEF(MP_QSTR_bits, (const byte*)"\x49\x68\x04" "bits")
QDEF(MP_QSTR_bkcolor, (const byte*)"\x31\xd8\x07" "bkcolor")
QDEF(MP_QSTR_bl, (const byte*)"\xcb\x6e\x02" "bl")
QDEF(MP_QSTR_board, (const byte*)"\x7f\xd4\x05" "board")
QDEF(MP_QSTR_bootloader, (const byte*)"\xe2\xef\x0a" "bootloader")
QDEF(MP_QSTR_border_width, (const byte*)"\x10\xcc\x0c" "border_width")
QDEF(MP_QSTR_bound_method, (const byte*)"\x97\xa2\x0c" "bound_method")
QDEF(MP_QSTR_buffer, (const byte*)"\xe5\xa0\x06" "buffer")
QDEF(MP_QSTR_buffering, (const byte*)"\x25\xdb\x09" "buffering")
QDEF(MP_QSTR_bx, (const byte*)"\xdf\x6e\x02" "bx")
QDEF(MP_QSTR_bytearray_at, (const byte*)"\x9c\x5c\x0c" "bytearray_at")
QDEF(MP_QSTR_byteorder, (const byte*)"\x61\x99\x09" "byteorder")
QDEF(MP_QSTR_bytes_at, (const byte*)"\xb6\x5d\x08" "bytes_at")
QDEF(MP_QSTR_calcsize, (const byte*)"\x4d\x38\x08" "calcsize")
QDEF(MP_QSTR_callback, (const byte*)"\x4c\xf0\x08" "callback")
QDEF(MP_QSTR_ceil, (const byte*)"\x06\xb0\x04" "ceil")
QDEF(MP_QSTR_center, (const byte*)"\x4e\xbf\x06" "center")
QDEF(MP_QSTR_chdir, (const byte*)"\xb1\xb2\x05" "chdir")
QDEF(MP_QSTR_choice, (const byte*)"\x2e\x33\x06" "choice")
QDEF(MP_QSTR_clear_fb, (const byte*)"\x67\x31\x08" "clear_fb")
QDEF(MP_QSTR_clear_screen, (const byte*)"\xaf\x10\x0c" "clear_screen")
QDEF(MP_QSTR_closure, (const byte*)"\x74\xca\x07" "closure")
QDEF(MP_QSTR_clz, (const byte*)"\x50\x4c\x03" "clz")
QDEF(MP_QSTR_cmath, (const byte*)"\xb6\xf4\x05" "cmath")
QDEF(MP_QSTR_cmp, (const byte*)"\x3b\x4c\x03" "cmp")
QDEF(MP_QSTR_collect, (const byte*)"\x9b\x65\x07" "collect")
QDEF(MP_QSTR_compile, (const byte*)"\xf4\xc9\x07" "compile")
QDEF(MP_QSTR_complex, (const byte*)"\xc5\x9d\x07" "complex")
QDEF(MP_QSTR_copysign, (const byte*)"\x33\x14\x08" "copysign")
QDEF(MP_QSTR_cos, (const byte*)"\x7a\x4c\x03" "cos")
QDEF(MP_QSTR_cosh, (const byte*)"\xd2\xdb\x04" "cosh")
QDEF(MP_QSTR_cpsid, (const byte*)"\xe8\xc7\x05" "cpsid")
QDEF(MP_QSTR_cpsie, (const byte*)"\xe9\xc7\x05" "cpsie")
QDEF(MP_QSTR_cpu, (const byte*)"\xc3\x4d\x03" "cpu")
QDEF(MP_QSTR_data, (const byte*)"\x15\xdc\x04" "data")
QDEF(MP_QSTR_debug, (const byte*)"\xd4\x55\x05" "debug")
QDEF(MP_QSTR_decode, (const byte*)"\xa9\x59\x06" "decode")
QDEF(MP_QSTR_decompress, (const byte*)"\x62\xfb\x0a" "decompress")
QDEF(MP_QSTR_deepsleep, (const byte*)"\x9e\xd2\x09" "deepsleep")
QDEF(MP_QSTR_default, (const byte*)"\xce\x7d\x07" "default")
QDEF(MP_QSTR_degrees, (const byte*)"\x02\x41\x07" "degrees")
QDEF(MP_QSTR_deinit, (const byte*)"\x9e\x8d\x06" "deinit")
QDEF(MP_QSTR_delattr, (const byte*)"\xdb\xc8\x07" "delattr")
QDEF(MP_QSTR_delay, (const byte*)"\x50\x4c\x05" "delay")
QDEF(MP_QSTR_deleter, (const byte*)"\x6e\xdb\x07" "deleter")
QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\xa9\x09" "dict_view")
QDEF(MP_QSTR_difference_update, (const byte*)"\x9c\xfa\x11" "difference_update")
QDEF(MP_QSTR_digest, (const byte*)"\xcd\xc4\x06" "digest")
QDEF(MP_QSTR_disable, (const byte*)"\x91\x76\x07" "disable")
QDEF(MP_QSTR_disable_irq, (const byte*)"\x04\x3a\x0b" "disable_irq")
QDEF(MP_QSTR_discard, (const byte*)"\x0f\x71\x07" "discard")
QDEF(MP_QSTR_doc, (const byte*)"\x2d\x1f\x03" "doc")
QDEF(MP_QSTR_dump, (const byte*)"\xe9\x2f\x04" "dump")
QDEF(MP_QSTR_dumps, (const byte*)"\x7a\x2d\x05" "dumps")
QDEF(MP_QSTR_dupterm, (const byte*)"\xaa\x5a\x07" "dupterm")
QDEF(MP_QSTR_e, (const byte*)"\xc0\xb5\x01" "e")
QDEF(MP_QSTR_elapsed_micros, (const byte*)"\x39\xfa\x0e" "elapsed_micros")
QDEF(MP_QSTR_elapsed_millis, (const byte*)"\x8e\xc2\x0e" "elapsed_millis")
QDEF(MP_QSTR_enable, (const byte*)"\x04\xde\x06" "enable")
QDEF(MP_QSTR_enable_irq, (const byte*)"\x91\x60\x0a" "enable_irq")
QDEF(MP_QSTR_encode, (const byte*)"\x43\xca\x06" "encode")
QDEF(MP_QSTR_encoding, (const byte*)"\x06\x9c\x08" "encoding")
QDEF(MP_QSTR_enumerate, (const byte*)"\x71\xba\x09" "enumerate")
QDEF(MP_QSTR_erf, (const byte*)"\x94\x23\x03" "erf")
QDEF(MP_QSTR_erfc, (const byte*)"\x77\x96\x04" "erfc")
QDEF(MP_QSTR_errno, (const byte*)"\xc1\x11\x05" "errno")
QDEF(MP_QSTR_errorcode, (const byte*)"\x10\xdd\x09" "errorcode")
QDEF(MP_QSTR_execfile, (const byte*)"\x58\x28\x08" "execfile")
QDEF(MP_QSTR_exit, (const byte*)"\x85\xbe\x04" "exit")
QDEF(MP_QSTR_exp, (const byte*)"\xc8\x24\x03" "exp")
QDEF(MP_QSTR_expm1, (const byte*)"\x74\x72\x05" "expm1")
QDEF(MP_QSTR_fabs, (const byte*)"\x93\x12\x04" "fabs")
QDEF(MP_QSTR_fastslew, (const byte*)"\xa8\xdc\x08" "fastslew")
QDEF(MP_QSTR_fault_debug, (const byte*)"\x61\xc1\x0b" "fault_debug")
QDEF(MP_QSTR_fcolor, (const byte*)"\x5e\x9e\x06" "fcolor")
QDEF(MP_QSTR_filter, (const byte*)"\x25\xbe\x06" "filter")
QDEF(MP_QSTR_firstbit, (const byte*)"\x20\x39\x08" "firstbit")
QDEF(MP_QSTR_float, (const byte*)"\x35\x44\x05" "float")
QDEF(MP_QSTR_floor, (const byte*)"\x7d\x46\x05" "floor")
QDEF(MP_QSTR_flow, (const byte*)"\x37\x40\x04" "flow")
QDEF(MP_QSTR_fmod, (const byte*)"\xe5\x44\x04" "fmod")
QDEF(MP_QSTR_font, (const byte*)"\x96\x2b\x04" "font")
QDEF(MP_QSTR_freq, (const byte*)"\xe5\x3a\x04" "freq")
QDEF(MP_QSTR_frexp, (const byte*)"\x1c\x98\x05" "frexp")
QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\xbd\x08" "fromkeys")
QDEF(MP_QSTR_frozenset, (const byte*)"\xed\x9c\x09" "frozenset")
QDEF(MP_QSTR_function, (const byte*)"\x27\x02\x08" "function")
QDEF(MP_QSTR_gc, (const byte*)"\x61\x6e\x02" "gc")
QDEF(MP_QSTR_generator, (const byte*)"\x96\xc3\x09" "generator")
QDEF(MP_QSTR_get_font_height, (const byte*)"\x9f\xae\x0f" "get_font_height")
QDEF(MP_QSTR_get_pixel_physical, (const byte*)"\xce\x3e\x12" "get_pixel_physical")
QDEF(MP_QSTR_get_xy, (const byte*)"\xcd\x41\x06" "get_xy")
QDEF(MP_QSTR_getcwd, (const byte*)"\x03\xd0\x06" "getcwd")
QDEF(MP_QSTR_getrandbits, (const byte*)"\x66\x7d\x0b" "getrandbits")
QDEF(MP_QSTR_getter, (const byte*)"\x90\xb2\x06" "getter")
QDEF(MP_QSTR_gettime, (const byte*)"\x06\x34\x07" "gettime")
QDEF(MP_QSTR_getvalue, (const byte*)"\x78\xac\x08" "getvalue")
QDEF(MP_QSTR_group, (const byte*)"\xba\xb0\x05" "group")
QDEF(MP_QSTR_hard_reset, (const byte*)"\xd0\x51\x0a" "hard_reset")
QDEF(MP_QSTR_have_cdc, (const byte*)"\x84\x08\x08" "have_cdc")
QDEF(MP_QSTR_heap_lock, (const byte*)"\xad\x8c\x09" "heap_lock")
QDEF(MP_QSTR_heap_unlock, (const byte*)"\x56\x2d\x0b" "heap_unlock")
QDEF(MP_QSTR_heapify, (const byte*)"\xaf\x2d\x07" "heapify")
QDEF(MP_QSTR_heappop, (const byte*)"\xd6\x27\x07" "heappop")
QDEF(MP_QSTR_heappush, (const byte*)"\x87\x6b\x08" "heappush")
QDEF(MP_QSTR_help, (const byte*)"\x94\x5c\x04" "help")
QDEF(MP_QSTR_hex, (const byte*)"\x70\x50\x03" "hex")
QDEF(MP_QSTR_hexlify, (const byte*)"\x2a\x7f\x07" "hexlify")
QDEF(MP_QSTR_hid, (const byte*)"\xe0\x4f\x03" "hid")
QDEF(MP_QSTR_hys, (const byte*)"\xe7\x51\x03" "hys")
QDEF(MP_QSTR_idle, (const byte*)"\xa1\xdc\x04" "idle")
QDEF(MP_QSTR_ilistdir, (const byte*)"\x71\x6a\x08" "ilistdir")
QDEF(MP_QSTR_imag, (const byte*)"\x47\xb7\x04" "imag")
QDEF(MP_QSTR_implementation, (const byte*)"\x17\x2d\x0e" "implementation")
QDEF(MP_QSTR_info, (const byte*)"\xeb\xb3\x04" "info")
QDEF(MP_QSTR_input, (const byte*)"\x73\x5a\x05" "input")
QDEF(MP_QSTR_intensity, (const byte*)"\xca\x3d\x09" "intensity")
QDEF(MP_QSTR_intersection, (const byte*)"\x28\x2a\x0c" "intersection")
QDEF(MP_QSTR_intersection_update, (const byte*)"\x06\xdd\x13" "intersection_update")
QDEF(MP_QSTR_ipoll, (const byte*)"\x53\x5d\x05" "ipoll")
QDEF(MP_QSTR_isdisjoint, (const byte*)"\xf7\x68\x0a" "isdisjoint")
QDEF(MP_QSTR_isenabled, (const byte*)"\x9a\xe5\x09" "isenabled")
QDEF(MP_QSTR_isfinite, (const byte*)"\xa6\xab\x08" "isfinite")
QDEF(MP_QSTR_isinf, (const byte*)"\x3e\x11\x05" "isinf")
QDEF(MP_QSTR_isnan, (const byte*)"\x9e\x03\x05" "isnan")
QDEF(MP_QSTR_issubset, (const byte*)"\xb9\xc1\x08" "issubset")
QDEF(MP_QSTR_issuperset, (const byte*)"\xfc\xec\x0a" "issuperset")
QDEF(MP_QSTR_iterable, (const byte*)"\x25\x92\x08" "iterable")
QDEF(MP_QSTR_iterator, (const byte*)"\x47\xbe\x08" "iterator")
QDEF(MP_QSTR_kbd_intr, (const byte*)"\xf6\x13\x08" "kbd_intr")
QDEF(MP_QSTR_keepends, (const byte*)"\x62\x8b\x08" "keepends")
QDEF(MP_QSTR_label, (const byte*)"\x43\xe7\x05" "label")
QDEF(MP_QSTR_ldexp, (const byte*)"\x40\x6f\x05" "ldexp")
QDEF(MP_QSTR_ldr, (const byte*)"\x5f\x40\x03" "ldr")
QDEF(MP_QSTR_ldrb, (const byte*)"\x5d\x4c\x04" "ldrb")
QDEF(MP_QSTR_ldrex, (const byte*)"\xe2\xd7\x05" "ldrex")
QDEF(MP_QSTR_ldrh, (const byte*)"\x57\x4c\x04" "ldrh")
QDEF(MP_QSTR_lgamma, (const byte*)"\xce\x6c\x06" "lgamma")
QDEF(MP_QSTR_listdir, (const byte*)"\x98\xe3\x07" "listdir")
QDEF(MP_QSTR_loads, (const byte*)"\xb0\xb0\x05" "loads")
QDEF(MP_QSTR_localtime, (const byte*)"\x7d\x46\x09" "localtime")
QDEF(MP_QSTR_log, (const byte*)"\x21\x3f\x03" "log")
QDEF(MP_QSTR_log10, (const byte*)"\x40\x91\x05" "log10")
QDEF(MP_QSTR_log2, (const byte*)"\x73\x23\x04" "log2")
QDEF(MP_QSTR_lsl, (const byte*)"\xb6\x41\x03" "lsl")
QDEF(MP_QSTR_lsr, (const byte*)"\xa8\x41\x03" "lsr")
QDEF(MP_QSTR_machine, (const byte*)"\x60\xab\x07" "machine")
QDEF(MP_QSTR_mapper, (const byte*)"\x5e\x05\x06" "mapper")
QDEF(MP_QSTR_match, (const byte*)"\x96\x22\x05" "match")
QDEF(MP_QSTR_math, (const byte*)"\x35\xbb\x04" "math")
QDEF(MP_QSTR_max, (const byte*)"\xb1\x43\x03" "max")
QDEF(MP_QSTR_maxsize, (const byte*)"\xd4\x70\x07" "maxsize")
QDEF(MP_QSTR_mcu, (const byte*)"\x7e\x44\x03" "mcu")
QDEF(MP_QSTR_mem, (const byte*)"\x20\x44\x03" "mem")
QDEF(MP_QSTR_mem16, (const byte*)"\x07\xca\x05" "mem16")
QDEF(MP_QSTR_mem32, (const byte*)"\x41\xca\x05" "mem32")
QDEF(MP_QSTR_mem8, (const byte*)"\x18\xc8\x04" "mem8")
QDEF(MP_QSTR_mem_alloc, (const byte*)"\x52\x2b\x09" "mem_alloc")
QDEF(MP_QSTR_mem_free, (const byte*)"\xcb\x62\x08" "mem_free")
QDEF(MP_QSTR_mem_info, (const byte*)"\xd1\xf1\x08" "mem_info")
QDEF(MP_QSTR_memaddr, (const byte*)"\x93\xe8\x07" "memaddr")
QDEF(MP_QSTR_memoryview, (const byte*)"\x69\x44\x0a" "memoryview")
QDEF(MP_QSTR_micros, (const byte*)"\xac\x88\x06" "micros")
QDEF(MP_QSTR_millis, (const byte*)"\x5b\x21\x06" "millis")
QDEF(MP_QSTR_min, (const byte*)"\xaf\x42\x03" "min")
QDEF(MP_QSTR_miso, (const byte*)"\x9d\x98\x04" "miso")
QDEF(MP_QSTR_mkdir, (const byte*)"\x9c\xb5\x05" "mkdir")
QDEF(MP_QSTR_mkfs, (const byte*)"\x76\xb0\x04" "mkfs")
QDEF(MP_QSTR_mktime, (const byte*)"\x96\x2b\x06" "mktime")
QDEF(MP_QSTR_modf, (const byte*)"\x25\xc0\x04" "modf")
QDEF(MP_QSTR_modify, (const byte*)"\xf5\x66\x06" "modify")
QDEF(MP_QSTR_module, (const byte*)"\xbf\x99\x06" "module")
QDEF(MP_QSTR_modules, (const byte*)"\xec\xd1\x07" "modules")
QDEF(MP_QSTR_mosi, (const byte*)"\x1d\xc2\x04" "mosi")
QDEF(MP_QSTR_mount, (const byte*)"\xa8\x0d\x05" "mount")
QDEF(MP_QSTR_mov, (const byte*)"\xf1\x43\x03" "mov")
QDEF(MP_QSTR_movt, (const byte*)"\x65\xc2\x04" "movt")
QDEF(MP_QSTR_movw, (const byte*)"\x66\xc2\x04" "movw")
QDEF(MP_QSTR_movwt, (const byte*)"\x52\x0f\x05" "movwt")
QDEF(MP_QSTR_mpy, (const byte*)"\xc1\x45\x03" "mpy")
QDEF(MP_QSTR_mrs, (const byte*)"\x89\x45\x03" "mrs")
QDEF(MP_QSTR_name, (const byte*)"\xa2\x75\x04" "name")
QDEF(MP_QSTR_namedtuple, (const byte*)"\x1e\x16\x0a" "namedtuple")
QDEF(MP_QSTR_names, (const byte*)"\x91\x29\x05" "names")
QDEF(MP_QSTR_native, (const byte*)"\x84\x0b\x06" "native")
QDEF(MP_QSTR_nn, (const byte*)"\x45\x6f\x02" "nn")
QDEF(MP_QSTR_nodename, (const byte*)"\x62\xab\x08" "nodename")
QDEF(MP_QSTR_nop, (const byte*)"\xb4\x57\x03" "nop")
QDEF(MP_QSTR_oct, (const byte*)"\xfd\x5c\x03" "oct")
QDEF(MP_QSTR_opt, (const byte*)"\xce\x5e\x03" "opt")
QDEF(MP_QSTR_opt_level, (const byte*)"\x87\x67\x09" "opt_level")
QDEF(MP_QSTR_pack, (const byte*)"\xbc\xd1\x04" "pack")
QDEF(MP_QSTR_pack_into, (const byte*)"\x1f\xa9\x09" "pack_into")
QDEF(MP_QSTR_pad_expert_cfg, (const byte*)"\x1c\xed\x0e" "pad_expert_cfg")
QDEF(MP_QSTR_parity, (const byte*)"\x42\x05\x06" "parity")
QDEF(MP_QSTR_partition, (const byte*)"\x87\xe5\x09" "partition")
QDEF(MP_QSTR_path, (const byte*)"\x88\xce\x04" "path")
QDEF(MP_QSTR_pcolor, (const byte*)"\x08\x07\x06" "pcolor")
QDEF(MP_QSTR_peektime, (const byte*)"\x8b\x5c\x08" "peektime")
QDEF(MP_QSTR_pend_throw, (const byte*)"\xf3\x74\x0a" "pend_throw")
QDEF(MP_QSTR_phase, (const byte*)"\x6a\xd5\x05" "phase")
QDEF(MP_QSTR_pi, (const byte*)"\x1c\x70\x02" "pi")
QDEF(MP_QSTR_pid, (const byte*)"\xf8\x73\x03" "pid")
QDEF(MP_QSTR_pin, (const byte*)"\xf2\x73\x03" "pin")
QDEF(MP_QSTR_platform, (const byte*)"\x3a\x19\x08" "platform")
QDEF(MP_QSTR_polar, (const byte*)"\x05\x0c\x05" "polar")
QDEF(MP_QSTR_polarity, (const byte*)"\x41\xed\x08" "polarity")
QDEF(MP_QSTR_poll, (const byte*)"\x9a\xd9\x04" "poll")
QDEF(MP_QSTR_port, (const byte*)"\x5c\xd8\x04" "port")
QDEF(MP_QSTR_power, (const byte*)"\xda\xed\x05" "power")
QDEF(MP_QSTR_present, (const byte*)"\xee\x18\x07" "present")
QDEF(MP_QSTR_print_exception, (const byte*)"\x1c\x22\x0f" "print_exception")
QDEF(MP_QSTR_property, (const byte*)"\xc2\x29\x08" "property")
QDEF(MP_QSTR_ptr, (const byte*)"\x53\x70\x03" "ptr")
QDEF(MP_QSTR_ptr16, (const byte*)"\xf4\xca\x05" "ptr16")
QDEF(MP_QSTR_ptr32, (const byte*)"\xb2\xca\x05" "ptr32")
QDEF(MP_QSTR_ptr8, (const byte*)"\x8b\x7a\x04" "ptr8")
QDEF(MP_QSTR_pull, (const byte*)"\x80\x7d\x04" "pull")
QDEF(MP_QSTR_push, (const byte*)"\xbb\x7e\x04" "push")
QDEF(MP_QSTR_put_box, (const byte*)"\xde\x1e\x07" "put_box")
QDEF(MP_QSTR_put_char, (const byte*)"\xf3\x2d\x08" "put_char")
QDEF(MP_QSTR_put_circle, (const byte*)"\x59\x5d\x0a" "put_circle")
QDEF(MP_QSTR_put_diamond, (const byte*)"\x6f\x72\x0b" "put_diamond")
QDEF(MP_QSTR_put_line, (const byte*)"\xe5\xd6\x08" "put_line")
QDEF(MP_QSTR_put_ltext, (const byte*)"\xfa\xe0\x09" "put_ltext")
QDEF(MP_QSTR_put_newline, (const byte*)"\x59\x8c\x0b" "put_newline")
QDEF(MP_QSTR_put_pixel, (const byte*)"\xe3\xe0\x09" "put_pixel")
QDEF(MP_QSTR_put_pixel_physical, (const byte*)"\xa9\x52\x12" "put_pixel_physical")
QDEF(MP_QSTR_put_text, (const byte*)"\x36\xcb\x08" "put_text")
QDEF(MP_QSTR_put_text_xy, (const byte*)"\xa8\x3c\x0b" "put_text_xy")
QDEF(MP_QSTR_pyb, (const byte*)"\xee\x71\x03" "pyb")
QDEF(MP_QSTR_qstr_info, (const byte*)"\xb0\x81\x09" "qstr_info")
QDEF(MP_QSTR_radians, (const byte*)"\x87\x3f\x07" "radians")
QDEF(MP_QSTR_randint, (const byte*)"\xaf\xdc\x07" "randint")
QDEF(MP_QSTR_random, (const byte*)"\xbe\x2c\x06" "random")
QDEF(MP_QSTR_randrange, (const byte*)"\xa3\x3e\x09" "randrange")
QDEF(MP_QSTR_rbit, (const byte*)"\xe8\xee\x04" "rbit")
QDEF(MP_QSTR_readID, (const byte*)"\xda\x4c\x06" "readID")
QDEF(MP_QSTR_read_buf_len, (const byte*)"\xa1\x09\x0c" "read_buf_len")
QDEF(MP_QSTR_read_channel, (const byte*)"\xcb\xb6\x0c" "read_channel")
QDEF(MP_QSTR_readblocks, (const byte*)"\x2d\x1c\x0a" "readblocks")
QDEF(MP_QSTR_readchar, (const byte*)"\xef\x92\x08" "readchar")
QDEF(MP_QSTR_readfrom, (const byte*)"\x41\xb1\x08" "readfrom")
QDEF(MP_QSTR_readfrom_into, (const byte*)"\x82\x3f\x0d" "readfrom_into")
QDEF(MP_QSTR_readfrom_mem, (const byte*)"\x3b\x65\x0c" "readfrom_mem")
QDEF(MP_QSTR_readfrom_mem_into, (const byte*)"\x38\x8e\x11" "readfrom_mem_into")
QDEF(MP_QSTR_readlines, (const byte*)"\x6a\x59\x09" "readlines")
QDEF(MP_QSTR_readonly, (const byte*)"\x03\x89\x08" "readonly")
QDEF(MP_QSTR_real, (const byte*)"\xbf\xf9\x04" "real")
QDEF(MP_QSTR_reg, (const byte*)"\x75\x8b\x03" "reg")
QDEF(MP_QSTR_register, (const byte*)"\xac\xa1\x08" "register")
QDEF(MP_QSTR_release, (const byte*)"\xec\x8f\x07" "release")
QDEF(MP_QSTR_rename, (const byte*)"\x35\x18\x06" "rename")
QDEF(MP_QSTR_repl_info, (const byte*)"\xbf\x37\x09" "repl_info")
QDEF(MP_QSTR_repl_uart, (const byte*)"\x23\x58\x09" "repl_uart")
QDEF(MP_QSTR_reset_cause, (const byte*)"\xce\x2f\x0b" "reset_cause")
QDEF(MP_QSTR_reversed, (const byte*)"\xa1\x6e\x08" "reversed")
QDEF(MP_QSTR_rmdir, (const byte*)"\x45\xa7\x05" "rmdir")
QDEF(MP_QSTR_rng, (const byte*)"\x9e\x8b\x03" "rng")
QDEF(MP_QSTR_rpartition, (const byte*)"\x15\xd0\x0a" "rpartition")
QDEF(MP_QSTR_rtc, (const byte*)"\x40\x89\x03" "rtc")
QDEF(MP_QSTR_schedule, (const byte*)"\xe0\xac\x08" "schedule")
QDEF(MP_QSTR_sck, (const byte*)"\xfe\x8f\x03" "sck")
QDEF(MP_QSTR_scl, (const byte*)"\xf9\x8f\x03" "scl")
QDEF(MP_QSTR_sda, (const byte*)"\x53\x8f\x03" "sda")
QDEF(MP_QSTR_sdiv, (const byte*)"\xcd\x7a\x04" "sdiv")
QDEF(MP_QSTR_seed, (const byte*)"\x92\x75\x04" "seed")
QDEF(MP_QSTR_seek, (const byte*)"\x9d\x75\x04" "seek")
QDEF(MP_QSTR_sendbreak, (const byte*)"\xc6\x11\x09" "sendbreak")
QDEF(MP_QSTR_set_bkg_color, (const byte*)"\x14\x4b\x0d" "set_bkg_color")
QDEF(MP_QSTR_set_fill_color, (const byte*)"\xd5\x63\x0e" "set_fill_color")
QDEF(MP_QSTR_set_font, (const byte*)"\xcb\xd4\x08" "set_font")
QDEF(MP_QSTR_set_font_trasparency, (const byte*)"\xd2\x4c\x14" "set_font_trasparency")
QDEF(MP_QSTR_set_pen_color, (const byte*)"\x41\x6d\x0d" "set_pen_color")
QDEF(MP_QSTR_set_title, (const byte*)"\x98\x0a\x09" "set_title")
QDEF(MP_QSTR_set_xy, (const byte*)"\x59\xe3\x06" "set_xy")
QDEF(MP_QSTR_setinterrupt, (const byte*)"\xc0\x8b\x0c" "setinterrupt")
QDEF(MP_QSTR_setter, (const byte*)"\x04\x59\x06" "setter")
QDEF(MP_QSTR_sha256, (const byte*)"\x2e\x01\x06" "sha256")
QDEF(MP_QSTR_sin, (const byte*)"\xb1\x90\x03" "sin")
QDEF(MP_QSTR_single, (const byte*)"\x3f\x20\x06" "single")
QDEF(MP_QSTR_sinh, (const byte*)"\xb9\xa6\x04" "sinh")
QDEF(MP_QSTR_sizeof, (const byte*)"\x49\x73\x06" "sizeof")
QDEF(MP_QSTR_sleep_ms, (const byte*)"\x0b\x63\x08" "sleep_ms")
QDEF(MP_QSTR_sleep_us, (const byte*)"\x13\x60\x08" "sleep_us")
QDEF(MP_QSTR_slice, (const byte*)"\xb5\xf4\x05" "slice")
QDEF(MP_QSTR_soft_reset, (const byte*)"\xe1\x65\x0a" "soft_reset")
QDEF(MP_QSTR_splitlines, (const byte*)"\x6a\xd3\x0a" "splitlines")
QDEF(MP_QSTR_sqrt, (const byte*)"\x21\x44\x04" "sqrt")
QDEF(MP_QSTR_stack_use, (const byte*)"\x97\xf7\x09" "stack_use")
QDEF(MP_QSTR_standby, (const byte*)"\xd2\xd9\x07" "standby")
QDEF(MP_QSTR_stat, (const byte*)"\xd7\x35\x04" "stat")
QDEF(MP_QSTR_statvfs, (const byte*)"\x14\x19\x07" "statvfs")
QDEF(MP_QSTR_stderr, (const byte*)"\xa3\x58\x06" "stderr")
QDEF(MP_QSTR_stdin, (const byte*)"\x21\x04\x05" "stdin")
QDEF(MP_QSTR_stdout, (const byte*)"\x08\x83\x06" "stdout")
QDEF(MP_QSTR_strb, (const byte*)"\x32\x37\x04" "strb")
QDEF(MP_QSTR_strex, (const byte*)"\xad\x1d\x05" "strex")
QDEF(MP_QSTR_strh, (const byte*)"\x38\x37\x04" "strh")
QDEF(MP_QSTR_struct, (const byte*)"\x12\x90\x06" "struct")
QDEF(MP_QSTR_symmetric_difference, (const byte*)"\xce\x67\x14" "symmetric_difference")
QDEF(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\xf8\x1b" "symmetric_difference_update")
QDEF(MP_QSTR_sync, (const byte*)"\xa2\x62\x04" "sync")
QDEF(MP_QSTR_sys, (const byte*)"\xbc\x8e\x03" "sys")
QDEF(MP_QSTR_sysname, (const byte*)"\x9b\x36\x07" "sysname")
QDEF(MP_QSTR_tan, (const byte*)"\xfe\x61\x03" "tan")
QDEF(MP_QSTR_tanh, (const byte*)"\xd6\xa1\x04" "tanh")
QDEF(MP_QSTR_tell, (const byte*)"\x14\xb1\x04" "tell")
QDEF(MP_QSTR_ticks_add, (const byte*)"\x9d\xae\x09" "ticks_add")
QDEF(MP_QSTR_ticks_cpu, (const byte*)"\x1a\xa5\x09" "ticks_cpu")
QDEF(MP_QSTR_ticks_diff, (const byte*)"\xb1\xe0\x0a" "ticks_diff")
QDEF(MP_QSTR_ticks_ms, (const byte*)"\x42\x32\x08" "ticks_ms")
QDEF(MP_QSTR_ticks_us, (const byte*)"\x5a\x31\x08" "ticks_us")
QDEF(MP_QSTR_timeout, (const byte*)"\x3e\x54\x07" "timeout")
QDEF(MP_QSTR_timeout_char, (const byte*)"\x79\x4a\x0c" "timeout_char")
QDEF(MP_QSTR_trunc, (const byte*)"\x5b\x99\x05" "trunc")
QDEF(MP_QSTR_uarray, (const byte*)"\x89\x86\x06" "uarray")
QDEF(MP_QSTR_ubinascii, (const byte*)"\xc4\x88\x09" "ubinascii")
QDEF(MP_QSTR_ucollections, (const byte*)"\x15\x9a\x0c" "ucollections")
QDEF(MP_QSTR_uctypes, (const byte*)"\xf8\x71\x07" "uctypes")
QDEF(MP_QSTR_udelay, (const byte*)"\x25\xaf\x06" "udelay")
QDEF(MP_QSTR_udiv, (const byte*)"\x8b\x31\x04" "udiv")
QDEF(MP_QSTR_uerrno, (const byte*)"\xb4\xe9\x06" "uerrno")
QDEF(MP_QSTR_uhashlib, (const byte*)"\x65\x9d\x08" "uhashlib")
QDEF(MP_QSTR_uheapq, (const byte*)"\x1d\x43\x06" "uheapq")
QDEF(MP_QSTR_uint, (const byte*)"\xe3\x3d\x04" "uint")
QDEF(MP_QSTR_uio, (const byte*)"\xb6\x66\x03" "uio")
QDEF(MP_QSTR_ujson, (const byte*)"\xe8\x30\x05" "ujson")
QDEF(MP_QSTR_umachine, (const byte*)"\x95\x7f\x08" "umachine")
QDEF(MP_QSTR_umount, (const byte*)"\xdd\x9e\x06" "umount")
QDEF(MP_QSTR_uname, (const byte*)"\xb7\x9c\x05" "uname")
QDEF(MP_QSTR_unhexlify, (const byte*)"\xb1\xb9\x09" "unhexlify")
QDEF(MP_QSTR_uniform, (const byte*)"\x01\xf5\x07" "uniform")
QDEF(MP_QSTR_union, (const byte*)"\xf6\x7c\x05" "union")
QDEF(MP_QSTR_uniqueID, (const byte*)"\x9b\xdf\x08" "uniqueID")
QDEF(MP_QSTR_unique_id, (const byte*)"\x04\x89\x09" "unique_id")
QDEF(MP_QSTR_unlink, (const byte*)"\xfe\x8f\x06" "unlink")
QDEF(MP_QSTR_unpack, (const byte*)"\x07\x3c\x06" "unpack")
QDEF(MP_QSTR_unpack_from, (const byte*)"\x0e\x6d\x0b" "unpack_from")
QDEF(MP_QSTR_unregister, (const byte*)"\x17\xd4\x0a" "unregister")
QDEF(MP_QSTR_uos, (const byte*)"\xec\x67\x03" "uos")
QDEF(MP_QSTR_update_display, (const byte*)"\xf1\x72\x0e" "update_display")
QDEF(MP_QSTR_urandom, (const byte*)"\xab\xae\x07" "urandom")
QDEF(MP_QSTR_ure, (const byte*)"\x87\x63\x03" "ure")
QDEF(MP_QSTR_usb_mode, (const byte*)"\xbd\x6d\x08" "usb_mode")
QDEF(MP_QSTR_uselect, (const byte*)"\x58\x8e\x07" "uselect")
QDEF(MP_QSTR_ustruct, (const byte*)"\x47\x08\x07" "ustruct")
QDEF(MP_QSTR_utime, (const byte*)"\xe5\x9d\x05" "utime")
QDEF(MP_QSTR_utimeq, (const byte*)"\xf4\x5a\x06" "utimeq")
QDEF(MP_QSTR_uzlib, (const byte*)"\x6d\x9b\x05" "uzlib")
QDEF(MP_QSTR_vcmp, (const byte*)"\xad\xc1\x04" "vcmp")
QDEF(MP_QSTR_vcvt_f32_s32, (const byte*)"\x47\xc9\x0c" "vcvt_f32_s32")
QDEF(MP_QSTR_vcvt_s32_f32, (const byte*)"\x07\x33\x0c" "vcvt_s32_f32")
QDEF(MP_QSTR_version_info, (const byte*)"\x6e\x0a\x0c" "version_info")
QDEF(MP_QSTR_vid, (const byte*)"\xfe\x7b\x03" "vid")
QDEF(MP_QSTR_viper, (const byte*)"\x5d\x23\x05" "viper")
QDEF(MP_QSTR_vldr, (const byte*)"\xc9\x07\x04" "vldr")
QDEF(MP_QSTR_vmov, (const byte*)"\xe7\x0a\x04" "vmov")
QDEF(MP_QSTR_vmrs, (const byte*)"\x9f\x09\x04" "vmrs")
QDEF(MP_QSTR_vneg, (const byte*)"\xff\xee\x04" "vneg")
QDEF(MP_QSTR_vsqrt, (const byte*)"\xf7\x42\x05" "vsqrt")
QDEF(MP_QSTR_vstr, (const byte*)"\xc6\x7e\x04" "vstr")
QDEF(MP_QSTR_wfi, (const byte*)"\x9d\x7e\x03" "wfi")
QDEF(MP_QSTR_window_close, (const byte*)"\x60\xc9\x0c" "window_close")
QDEF(MP_QSTR_window_open, (const byte*)"\x22\x19\x0b" "window_open")
QDEF(MP_QSTR_window_scroll, (const byte*)"\xdb\xa9\x0d" "window_scroll")
QDEF(MP_QSTR_write_readinto, (const byte*)"\x89\x84\x0e" "write_readinto")
QDEF(MP_QSTR_writeblocks, (const byte*)"\x02\xdf\x0b" "writeblocks")
QDEF(MP_QSTR_writechar, (const byte*)"\x40\xe0\x09" "writechar")
QDEF(MP_QSTR_writeto, (const byte*)"\x03\x39\x07" "writeto")
QDEF(MP_QSTR_writeto_mem, (const byte*)"\x79\xed\x0b" "writeto_mem")
QDEF(MP_QSTR_writevto, (const byte*)"\x75\x75\x08" "writevto")
QDEF(MP_QSTR_xwin_max, (const byte*)"\x86\x26\x08" "xwin_max")
QDEF(MP_QSTR_xwin_min, (const byte*)"\x98\x25\x08" "xwin_min")
QDEF(MP_QSTR_ywin_max, (const byte*)"\x67\x8a\x08" "ywin_max")
QDEF(MP_QSTR_ywin_min, (const byte*)"\x79\x89\x08" "ywin_min")
QDEF(MP_QSTR_get_count, (const byte*)"\x4f\x0b\x09" "get_count")
QDEF(MP_QSTR_get_ticks, (const byte*)"\x2a\xd5\x09" "get_ticks")
QDEF(MP_QSTR_period, (const byte*)"\xa0\xa0\x06" "period")
QDEF(MP_QSTR_TMR, (const byte*)"\x8e\xff\x03" "TMR")
QDEF(MP_QSTR_jpeg_encode_for_ide, (const byte*)"\x37\x05\x13" "jpeg_encode_for_ide")
QDEF(MP_QSTR_jpeg_encoded_for_ide, (const byte*)"\x13\xc6\x14" "jpeg_encoded_for_ide")
QDEF(MP_QSTR_XGA, (const byte*)"\x5b\x31\x03" "XGA")
QDEF(MP_QSTR_HD, (const byte*)"\xc9\x73\x02" "HD")
QDEF(MP_QSTR_FHD, (const byte*)"\x2f\xb3\x03" "FHD")
QDEF(MP_QSTR_QHD, (const byte*)"\xf8\xfb\x03" "QHD")
QDEF(MP_QSTR_QXGA, (const byte*)"\x0a\x37\x04" "QXGA")
QDEF(MP_QSTR_WQXGA, (const byte*)"\x7d\x8b\x05" "WQXGA")
QDEF(MP_QSTR_WQXGA2, (const byte*)"\x2f\xfb\x06" "WQXGA2")
QDEF(MP_QSTR_FRAMESIZE_XGA, (const byte*)"\xfc\x7f\x0d" "FRAMESIZE_XGA")
QDEF(MP_QSTR_FRAMESIZE_HD, (const byte*)"\x0e\xfa\x0c" "FRAMESIZE_HD")
QDEF(MP_QSTR_FRAMESIZE_FHD, (const byte*)"\x08\x33\x0d" "FRAMESIZE_FHD")
QDEF(MP_QSTR_FRAMESIZE_QHD, (const byte*)"\xdf\x62\x0d" "FRAMESIZE_QHD")
QDEF(MP_QSTR_FRAMESIZE_QXGA, (const byte*)"\x0d\x7a\x0e" "FRAMESIZE_QXGA")
QDEF(MP_QSTR_FRAMESIZE_WQXGA, (const byte*)"\x1a\x7f\x0f" "FRAMESIZE_WQXGA")
QDEF(MP_QSTR_FRAMESIZE_WQXGA2, (const byte*)"\x68\x62\x10" "FRAMESIZE_WQXGA2")
QDEF(MP_QSTR_usocket, (const byte*)"\x75\x00\x07" "usocket")
QDEF(MP_QSTR_network, (const byte*)"\x5b\x28\x07" "network")
QDEF(MP_QSTR_route, (const byte*)"\x3c\x28\x05" "route")
QDEF(MP_QSTR_recvfrom, (const byte*)"\x91\x90\x08" "recvfrom")
QDEF(MP_QSTR_sendto, (const byte*)"\x22\x03\x06" "sendto")
QDEF(MP_QSTR_setsockopt, (const byte*)"\x38\xe8\x0a" "setsockopt")
QDEF(MP_QSTR_getaddrinfo, (const byte*)"\x6e\x18\x0b" "getaddrinfo")
QDEF(MP_QSTR_cmm, (const byte*)"\x26\x4c\x03" "cmm")